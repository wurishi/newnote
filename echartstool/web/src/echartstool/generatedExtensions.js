/**
 * Entitas Generated Extensions for echartstool
 *
 * do not edit this file
 */
 var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var echartstool;
(function (space) {
  'use strict';
  var Pool = entitas.Pool;
  var Entity = entitas.Entity;
  var CoreComponentIds;
  (function (CoreComponentIds) {
    CoreComponentIds[CoreComponentIds['ECharts'] = 0] = 'ECharts';
    CoreComponentIds[CoreComponentIds['TotalComponents'] = 1] = 'TotalComponents';
  })(CoreComponentIds = space.CoreComponentIds || (space.CoreComponentIds = {}));
  Entity.initialize(CoreComponentIds.TotalComponents, {"entities":128,"components":64});
  
  var EChartsComponent = /** @class */ (function () {
    function EChartsComponent() {}
    return EChartsComponent;
  }());
  space.EChartsComponent = EChartsComponent;
  
  var Pools = /** @class */ (function (_super) {
    __extends(Pools, _super);
    function Pools() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(Pools, 'allPools', {
      get: function () {
        if (Pools._allPools == null) {
          Pools._allPools = [Pools.pool];
        }
        return Pools._allPools;
      },
      enumerable: false,
      configurable: true,
    });
    Object.defineProperty(Pools, 'pool', {
      get: function() {
        if (Pools._pool == null) {
          Pools._pool = new Pool(CoreComponentIds, CoreComponentIds.TotalComponents, false);
          entitas.viewer.VisualDebugging.init(Pools._pool);
        }
        return Pools._pool;
      },
      enumerable: false,
      configurable: true,
    });
    return Pools;
  }(Pool));
  space.Pools = Pools;
})(echartstool || (echartstool = {}));
(function () {
  'use strict';
  var Bag = entitas.utils.Bag;
  var Pool = entitas.Pool;
  var Entity = entitas.Entity;
  var Matcher = entitas.Matcher;
  var SingleEntityException = entitas.exceptions.SingleEntityException;

  var EChartsComponent = echartstool.EChartsComponent;
  
  var CoreComponentIds = echartstool.CoreComponentIds;
  
  
  /** @type {entitas.utils.Bag} */
  Entity._eChartsComponentPool = new Bag();
  // Bad Code
  // Entity._eChartsComponentPool.__proto__ = Bag.prototype;
  (function () {
    for (var i = 0; i < 64; i++) {
      Entity._eChartsComponentPool.add(new EChartsComponent());
    }
  })();
  Entity.clearEChartsComponentPool = function () {
    Entity._eChartsComponentPool.clear();
  };
  /** @type {echartstool.EChartsComponent} */
  Object.defineProperty(Entity.prototype, 'eCharts', {
    get: function () {
      return this.getComponent(CoreComponentIds.ECharts);
    }
  });
  /** @type {boolean} */
  Object.defineProperty(Entity.prototype, 'hasECharts', {
    get: function () {
      return this.hasComponent(CoreComponentIds.ECharts);
    }
  });
  /**
   * add
   * @param {HTMLDivElement} div
   * @param {any} myChart
   * @returns {entitas.Entity}
   */
  Entity.prototype.addECharts = function (div, myChart) {
    var component = Entity._eChartsComponentPool.size() > 0 ? Entity._eChartsComponentPool.removeLast() : new EChartsComponent();
    component.div = div;
    component.myChart = myChart;
    this.addComponent(CoreComponentIds.ECharts, component);
    return this;
  };
  /**
   * replace
   * @param {HTMLDivElement} div
   * @param {any} myChart
   * @returns {entitas.Entity}
   */
  Entity.prototype.replaceECharts = function (div, myChart) {
    var previousComponent = this.hasECharts ? this.eCharts : null;
    var component = Entity._eChartsComponentPool.size() > 0 ? Entity._eChartsComponentPool.removeLast() : new EChartsComponent();
    component.div = div;
    component.myChart = myChart;
    this.replaceComponent(CoreComponentIds.ECharts, component);
    if (previousComponent != null) {
      Entity._eChartsComponentPool.add(previousComponent);
    }
    return this;
  };
  /**
   * remove
   * @returns {entitas.Entity}
   */
  Entity.prototype.removeECharts = function () {
    var component = this.eCharts;
    this.removeComponent(CoreComponentIds.ECharts);
    Entity._eChartsComponentPool.add(component);
    return this;
  };
  
  
  /** @type {entitas.Matcher} */
  Matcher._matcherECharts = null;
  /** @type {entitas.Matcher} */
  Object.defineProperty(Matcher, 'ECharts', {
    get: function () {
      if (Matcher._matcherECharts == null) {
        Matcher._matcherECharts = Matcher.allOf(CoreComponentIds.ECharts);
      }
      return Matcher._matcherECharts;
    }
  });
  
  
  
})();