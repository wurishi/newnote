(window.webpackJsonp=window.webpackJsonp||[]).push([[1],[function(t,e,n){"use strict";n.r(e),n.d(e,"AdadeltaOptimizer",(function(){return Ro})),n.d(e,"AdagradOptimizer",(function(){return jo})),n.d(e,"AdamOptimizer",(function(){return Do})),n.d(e,"AdamaxOptimizer",(function(){return _o})),n.d(e,"MomentumOptimizer",(function(){return Mo})),n.d(e,"Optimizer",(function(){return $o})),n.d(e,"RMSPropOptimizer",(function(){return zo})),n.d(e,"SGDOptimizer",(function(){return Fo})),n.d(e,"Tensor",(function(){return R.a})),n.d(e,"TensorBuffer",(function(){return R.b})),n.d(e,"Variable",(function(){return R.c})),n.d(e,"Rank",(function(){return Lo.a})),n.d(e,"sumOutType",(function(){return Lo.b})),n.d(e,"upcastType",(function(){return Lo.c})),n.d(e,"add",(function(){return $})),n.d(e,"addN",(function(){return Bs})),n.d(e,"atan2",(function(){return Ps})),n.d(e,"avgPool",(function(){return Ws})),n.d(e,"avgPool3d",(function(){return Vs})),n.d(e,"batchToSpaceND",(function(){return An})),n.d(e,"batchNorm",(function(){return qs})),n.d(e,"batchNorm2d",(function(){return Gs})),n.d(e,"batchNorm3d",(function(){return Hs})),n.d(e,"batchNorm4d",(function(){return Ks})),n.d(e,"broadcastTo",(function(){return Ys})),n.d(e,"clone",(function(){return Xs})),n.d(e,"complex",(function(){return Js.a})),n.d(e,"concat",(function(){return M})),n.d(e,"concat1d",(function(){return Zs})),n.d(e,"concat2d",(function(){return Qs})),n.d(e,"concat3d",(function(){return ta})),n.d(e,"concat4d",(function(){return ea})),n.d(e,"conv1d",(function(){return na})),n.d(e,"conv2d",(function(){return Te})),n.d(e,"conv2dTranspose",(function(){return ra})),n.d(e,"conv3d",(function(){return sa})),n.d(e,"conv3dTranspose",(function(){return aa})),n.d(e,"cumsum",(function(){return Fe})),n.d(e,"depthToSpace",(function(){return ia})),n.d(e,"depthwiseConv2d",(function(){return oa})),n.d(e,"diag",(function(){return ua})),n.d(e,"div",(function(){return K})),n.d(e,"divNoNan",(function(){return la})),n.d(e,"dot",(function(){return ca})),n.d(e,"elu",(function(){return ha})),n.d(e,"equal",(function(){return da})),n.d(e,"eye",(function(){return pa})),n.d(e,"fill",(function(){return fa})),n.d(e,"floorDiv",(function(){return H})),n.d(e,"greater",(function(){return an})),n.d(e,"greaterEqual",(function(){return Ze})),n.d(e,"imag",(function(){return ma.a})),n.d(e,"leakyRelu",(function(){return ba})),n.d(e,"less",(function(){return Qe})),n.d(e,"lessEqual",(function(){return on})),n.d(e,"localResponseNormalization",(function(){return ya})),n.d(e,"matMul",(function(){return we})),n.d(e,"max",(function(){return xa})),n.d(e,"maxPool",(function(){return wa})),n.d(e,"maxPool3d",(function(){return va})),n.d(e,"maxPoolWithArgmax",(function(){return Oa})),n.d(e,"maximum",(function(){return ga})),n.d(e,"minimum",(function(){return Sa})),n.d(e,"mod",(function(){return ka})),n.d(e,"mul",(function(){return X})),n.d(e,"multinomial",(function(){return Ca})),n.d(e,"notEqual",(function(){return Na})),n.d(e,"oneHot",(function(){return Yr})),n.d(e,"outerProduct",(function(){return Ia})),n.d(e,"pad",(function(){return Dn})),n.d(e,"pad1d",(function(){return Aa})),n.d(e,"pad2d",(function(){return Ea})),n.d(e,"pad3d",(function(){return Ta})),n.d(e,"pad4d",(function(){return $a})),n.d(e,"pool",(function(){return Ra})),n.d(e,"pow",(function(){return wn})),n.d(e,"prelu",(function(){return ja})),n.d(e,"rand",(function(){return Da})),n.d(e,"randomGamma",(function(){return La})),n.d(e,"randomNormal",(function(){return Ba})),n.d(e,"randomUniform",(function(){return Pa})),n.d(e,"real",(function(){return Wa.a})),n.d(e,"relu",(function(){return Va})),n.d(e,"relu6",(function(){return Ua})),n.d(e,"selu",(function(){return qa})),n.d(e,"separableConv2d",(function(){return Ga})),n.d(e,"spaceToBatchND",(function(){return Oe})),n.d(e,"split",(function(){return Ce})),n.d(e,"square",(function(){return Ot})),n.d(e,"squaredDifference",(function(){return Ha})),n.d(e,"sub",(function(){return Ue})),n.d(e,"tile",(function(){return qe})),n.d(e,"truncatedNormal",(function(){return Ka})),n.d(e,"booleanMaskAsync",(function(){return si})),n.d(e,"reverse",(function(){return ai})),n.d(e,"reverse1d",(function(){return ii})),n.d(e,"reverse2d",(function(){return oi})),n.d(e,"reverse3d",(function(){return ui})),n.d(e,"reverse4d",(function(){return li})),n.d(e,"slice",(function(){return Gn})),n.d(e,"slice1d",(function(){return Hn})),n.d(e,"slice2d",(function(){return Kn})),n.d(e,"slice3d",(function(){return Xn})),n.d(e,"slice4d",(function(){return Yn})),n.d(e,"abs",(function(){return St})),n.d(e,"acos",(function(){return kt})),n.d(e,"acosh",(function(){return Ct})),n.d(e,"asin",(function(){return Nt})),n.d(e,"asinh",(function(){return It})),n.d(e,"atan",(function(){return At})),n.d(e,"atanh",(function(){return Et})),n.d(e,"ceil",(function(){return Tt})),n.d(e,"clipByValue",(function(){return $t})),n.d(e,"cos",(function(){return Rt})),n.d(e,"cosh",(function(){return jt})),n.d(e,"erf",(function(){return Dt})),n.d(e,"exp",(function(){return _t})),n.d(e,"expm1",(function(){return Ft})),n.d(e,"floor",(function(){return Mt})),n.d(e,"log",(function(){return zt})),n.d(e,"log1p",(function(){return Lt})),n.d(e,"logSigmoid",(function(){return Bt})),n.d(e,"neg",(function(){return Pt})),n.d(e,"reciprocal",(function(){return Wt})),n.d(e,"round",(function(){return Vt})),n.d(e,"rsqrt",(function(){return Ut})),n.d(e,"sigmoid",(function(){return qt})),n.d(e,"sign",(function(){return Gt})),n.d(e,"isNaN",(function(){return Ht})),n.d(e,"isInf",(function(){return Kt})),n.d(e,"isFinite",(function(){return Xt})),n.d(e,"sin",(function(){return Yt})),n.d(e,"sinh",(function(){return Jt})),n.d(e,"softplus",(function(){return Zt})),n.d(e,"sqrt",(function(){return Qt})),n.d(e,"step",(function(){return te})),n.d(e,"tan",(function(){return ee})),n.d(e,"tanh",(function(){return ne})),n.d(e,"all",(function(){return dt})),n.d(e,"any",(function(){return pt})),n.d(e,"argMax",(function(){return ft})),n.d(e,"argMin",(function(){return mt})),n.d(e,"logSumExp",(function(){return gt})),n.d(e,"mean",(function(){return bt})),n.d(e,"min",(function(){return yt})),n.d(e,"moments",(function(){return xt})),n.d(e,"sum",(function(){return wt})),n.d(e,"prod",(function(){return vt})),n.d(e,"equalStrict",(function(){return ci})),n.d(e,"greaterEqualStrict",(function(){return hi})),n.d(e,"greaterStrict",(function(){return di})),n.d(e,"lessEqualStrict",(function(){return pi})),n.d(e,"lessStrict",(function(){return fi})),n.d(e,"notEqualStrict",(function(){return mi})),n.d(e,"addStrict",(function(){return gi})),n.d(e,"divStrict",(function(){return bi})),n.d(e,"maximumStrict",(function(){return yi})),n.d(e,"minimumStrict",(function(){return xi})),n.d(e,"modStrict",(function(){return wi})),n.d(e,"mulStrict",(function(){return vi})),n.d(e,"powStrict",(function(){return Oi})),n.d(e,"squaredDifferenceStrict",(function(){return Si})),n.d(e,"subStrict",(function(){return ki})),n.d(e,"logicalAnd",(function(){return fn})),n.d(e,"logicalNot",(function(){return mn})),n.d(e,"logicalOr",(function(){return gn})),n.d(e,"logicalXor",(function(){return bn})),n.d(e,"where",(function(){return yn})),n.d(e,"whereAsync",(function(){return xn})),n.d(e,"buffer",(function(){return z})),n.d(e,"print",(function(){return L})),n.d(e,"cast",(function(){return B})),n.d(e,"expandDims",(function(){return P})),n.d(e,"reshape",(function(){return W})),n.d(e,"squeeze",(function(){return V})),n.d(e,"stack",(function(){return U})),n.d(e,"unstack",(function(){return q})),n.d(e,"setdiff1dAsync",(function(){return G})),n.d(e,"linspace",(function(){return F.a})),n.d(e,"ones",(function(){return F.b})),n.d(e,"range",(function(){return F.d})),n.d(e,"scalar",(function(){return F.e})),n.d(e,"tensor",(function(){return F.f})),n.d(e,"tensor1d",(function(){return F.g})),n.d(e,"tensor2d",(function(){return F.h})),n.d(e,"tensor3d",(function(){return F.i})),n.d(e,"tensor4d",(function(){return F.j})),n.d(e,"tensor5d",(function(){return F.k})),n.d(e,"tensor6d",(function(){return F.l})),n.d(e,"variable",(function(){return F.m})),n.d(e,"zeros",(function(){return F.n})),n.d(e,"onesLike",(function(){return F.c})),n.d(e,"zerosLike",(function(){return F.o})),n.d(e,"transpose",(function(){return _e})),n.d(e,"softmax",(function(){return Ci})),n.d(e,"logSoftmax",(function(){return Ni})),n.d(e,"norm",(function(){return Ii})),n.d(e,"gather",(function(){return ni})),n.d(e,"unsortedSegmentSum",(function(){return ri})),n.d(e,"basicLSTMCell",(function(){return Ai})),n.d(e,"multiRNNCell",(function(){return Ei})),n.d(e,"movingAverage",(function(){return Ti})),n.d(e,"stridedSlice",(function(){return $i})),n.d(e,"topk",(function(){return Ri})),n.d(e,"scatterND",(function(){return ji})),n.d(e,"fft",(function(){return Di})),n.d(e,"ifft",(function(){return _i})),n.d(e,"rfft",(function(){return Fi})),n.d(e,"irfft",(function(){return Mi})),n.d(e,"sparseToDense",(function(){return zi})),n.d(e,"gatherND",(function(){return Li})),n.d(e,"dropout",(function(){return Bi})),n.d(e,"hannWindow",(function(){return Wi})),n.d(e,"hammingWindow",(function(){return Vi})),n.d(e,"frame",(function(){return Ui})),n.d(e,"stft",(function(){return qi})),n.d(e,"inTopKAsync",(function(){return Gi})),n.d(e,"op",(function(){return T.a})),n.d(e,"image",(function(){return g})),n.d(e,"linalg",(function(){return m})),n.d(e,"losses",(function(){return f})),n.d(e,"spectral",(function(){return d})),n.d(e,"fused",(function(){return b})),n.d(e,"signal",(function(){return p})),n.d(e,"Reduction",(function(){return Hi})),n.d(e,"train",(function(){return Po})),n.d(e,"enableProdMode",(function(){return xs})),n.d(e,"enableDebugMode",(function(){return ws})),n.d(e,"disableDeprecationWarnings",(function(){return vs})),n.d(e,"deprecationWarn",(function(){return Os})),n.d(e,"disposeVariables",(function(){return Ss})),n.d(e,"engine",(function(){return ks})),n.d(e,"memory",(function(){return Cs})),n.d(e,"profile",(function(){return Ns})),n.d(e,"tidy",(function(){return Is})),n.d(e,"dispose",(function(){return As})),n.d(e,"keep",(function(){return Es})),n.d(e,"time",(function(){return Ts})),n.d(e,"setBackend",(function(){return $s})),n.d(e,"ready",(function(){return Rs})),n.d(e,"getBackend",(function(){return js})),n.d(e,"removeBackend",(function(){return Ds})),n.d(e,"findBackend",(function(){return _s})),n.d(e,"findBackendFactory",(function(){return Fs})),n.d(e,"registerBackend",(function(){return Ms})),n.d(e,"backend",(function(){return zs})),n.d(e,"setPlatform",(function(){return Ls})),n.d(e,"getKernel",(function(){return Qn.b})),n.d(e,"getGradient",(function(){return Qn.a})),n.d(e,"getKernelsForBackend",(function(){return Qn.c})),n.d(e,"registerKernel",(function(){return Qn.e})),n.d(e,"registerGradient",(function(){return Qn.d})),n.d(e,"unregisterKernel",(function(){return Qn.g})),n.d(e,"unregisterGradient",(function(){return Qn.f})),n.d(e,"customGrad",(function(){return et})),n.d(e,"grad",(function(){return Y})),n.d(e,"grads",(function(){return J})),n.d(e,"valueAndGrad",(function(){return Z})),n.d(e,"valueAndGrads",(function(){return Q})),n.d(e,"variableGrads",(function(){return tt})),n.d(e,"Environment",(function(){return er.b})),n.d(e,"env",(function(){return er.c})),n.d(e,"ENV",(function(){return er.a})),n.d(e,"version_core",(function(){return ys})),n.d(e,"nextFrame",(function(){return Wo.a})),n.d(e,"browser",(function(){return i})),n.d(e,"io",(function(){return s})),n.d(e,"math",(function(){return a})),n.d(e,"serialization",(function(){return l})),n.d(e,"test_util",(function(){return c})),n.d(e,"util",(function(){return j})),n.d(e,"backend_util",(function(){return x})),n.d(e,"tensor_util",(function(){return A})),n.d(e,"slice_util",(function(){return r})),n.d(e,"gather_util",(function(){return o})),n.d(e,"scatter_util",(function(){return u})),n.d(e,"device_util",(function(){return pu})),n.d(e,"kernel_impls",(function(){return w})),n.d(e,"KernelBackend",(function(){return yu})),n.d(e,"DataStorage",(function(){return bu})),n.d(e,"Add",(function(){return O.a})),n.d(e,"AddN",(function(){return O.b})),n.d(e,"Atan2",(function(){return O.c})),n.d(e,"AvgPool",(function(){return O.d})),n.d(e,"AvgPoolBackprop",(function(){return O.g})),n.d(e,"AvgPool3D",(function(){return O.e})),n.d(e,"AvgPool3DBackprop",(function(){return O.f})),n.d(e,"BatchMatMul",(function(){return O.h})),n.d(e,"BatchToSpaceND",(function(){return O.i})),n.d(e,"BroadcastTo",(function(){return O.j})),n.d(e,"Complex",(function(){return O.k})),n.d(e,"Concat",(function(){return O.l})),n.d(e,"Conv2D",(function(){return O.m})),n.d(e,"Conv2DBackpropFilter",(function(){return O.n})),n.d(e,"Conv2DBackpropInput",(function(){return O.o})),n.d(e,"Conv3D",(function(){return O.p})),n.d(e,"Conv3DBackpropFilterV2",(function(){return O.q})),n.d(e,"Conv3DBackpropInputV2",(function(){return O.r})),n.d(e,"Cumsum",(function(){return O.s})),n.d(e,"DepthToSpace",(function(){return O.t})),n.d(e,"DepthwiseConv2dNative",(function(){return O.u})),n.d(e,"DepthwiseConv2dNativeBackpropFilter",(function(){return O.v})),n.d(e,"DepthwiseConv2dNativeBackpropInput",(function(){return O.w})),n.d(e,"Diag",(function(){return O.x})),n.d(e,"Div",(function(){return O.y})),n.d(e,"Elu",(function(){return O.z})),n.d(e,"EluGrad",(function(){return O.A})),n.d(e,"Equal",(function(){return O.B})),n.d(e,"FloorDiv",(function(){return O.D})),n.d(e,"Fill",(function(){return O.C})),n.d(e,"FusedBatchNorm",(function(){return O.F})),n.d(e,"GatherNd",(function(){return O.G})),n.d(e,"Greater",(function(){return O.H})),n.d(e,"GreaterEqual",(function(){return O.I})),n.d(e,"Identity",(function(){return O.J})),n.d(e,"Imag",(function(){return O.K})),n.d(e,"Less",(function(){return O.N})),n.d(e,"LessEqual",(function(){return O.O})),n.d(e,"LRN",(function(){return O.L})),n.d(e,"LRNBackprop",(function(){return O.M})),n.d(e,"Max",(function(){return O.P})),n.d(e,"Maximum",(function(){return O.V})),n.d(e,"MaxPool",(function(){return O.Q})),n.d(e,"MaxPoolBackprop",(function(){return O.T})),n.d(e,"MaxPool3D",(function(){return O.R})),n.d(e,"MaxPool3DBackprop",(function(){return O.S})),n.d(e,"MaxPoolWithArgmax",(function(){return O.U})),n.d(e,"Minimum",(function(){return O.W})),n.d(e,"Mod",(function(){return O.X})),n.d(e,"Multiply",(function(){return O.Y})),n.d(e,"NotEqual",(function(){return O.bb})),n.d(e,"NonMaxSuppressionV3",(function(){return O.Z})),n.d(e,"NonMaxSuppressionV5",(function(){return O.ab})),n.d(e,"OneHot",(function(){return O.cb})),n.d(e,"PadV2",(function(){return O.db})),n.d(e,"Pool",(function(){return O.eb})),n.d(e,"Pow",(function(){return O.fb})),n.d(e,"Prelu",(function(){return O.gb})),n.d(e,"Real",(function(){return O.hb})),n.d(e,"Relu",(function(){return O.ib})),n.d(e,"Relu6",(function(){return O.jb})),n.d(e,"SelectV2",(function(){return O.kb})),n.d(e,"Selu",(function(){return O.lb})),n.d(e,"SpaceToBatchND",(function(){return O.mb})),n.d(e,"SplitV",(function(){return O.nb})),n.d(e,"SquaredDifference",(function(){return O.pb})),n.d(e,"Square",(function(){return O.ob})),n.d(e,"Sub",(function(){return O.qb})),n.d(e,"Tile",(function(){return O.rb})),n.d(e,"Transpose",(function(){return O.sb})),n.d(e,"FromPixels",(function(){return O.E}));var r={};n.r(r),n.d(r,"assertParamsValid",(function(){return _n})),n.d(r,"maskToAxes",(function(){return Fn})),n.d(r,"computeOutShape",(function(){return Mn})),n.d(r,"stridesWithElidedDims",(function(){return zn})),n.d(r,"startIndicesWithElidedDims",(function(){return Ln})),n.d(r,"stopIndicesWithElidedDims",(function(){return Bn})),n.d(r,"stridesForAxis",(function(){return Pn})),n.d(r,"startForAxis",(function(){return Wn})),n.d(r,"stopForAxis",(function(){return Vn})),n.d(r,"isSliceContinous",(function(){return Un})),n.d(r,"computeFlatOffset",(function(){return qn}));var s={};n.r(s),n.d(s,"copyModel",(function(){return fr})),n.d(s,"listModels",(function(){return dr})),n.d(s,"moveModel",(function(){return mr})),n.d(s,"removeModel",(function(){return pr})),n.d(s,"browserFiles",(function(){return _r})),n.d(s,"browserHTTPRequest",(function(){return qr})),n.d(s,"concatenateArrayBuffers",(function(){return rr.d})),n.d(s,"decodeWeights",(function(){return rr.e})),n.d(s,"encodeWeights",(function(){return rr.f})),n.d(s,"fromMemory",(function(){return Kr})),n.d(s,"getLoadHandlers",(function(){return ur})),n.d(s,"getModelArtifactsInfoForJSON",(function(){return rr.g})),n.d(s,"getSaveHandlers",(function(){return or})),n.d(s,"http",(function(){return Ur})),n.d(s,"isHTTPScheme",(function(){return Wr})),n.d(s,"loadWeights",(function(){return Lr})),n.d(s,"registerLoadRouter",(function(){return ir})),n.d(s,"registerSaveRouter",(function(){return ar})),n.d(s,"weightsLoaderFactory",(function(){return Br})),n.d(s,"withSaveHandler",(function(){return Xr}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return Jr}));var i={};n.r(i),n.d(i,"toPixels",(function(){return Qr})),n.d(i,"fromPixels",(function(){return ts}));var o={};n.r(o),n.d(o,"prepareAndValidate",(function(){return es}));var u={};n.r(u),n.d(u,"validateUpdateShape",(function(){return ns})),n.d(u,"validateInput",(function(){return rs})),n.d(u,"calculateShapes",(function(){return ss}));var l={};n.r(l),n.d(l,"Serializable",(function(){return as})),n.d(l,"SerializationMap",(function(){return is})),n.d(l,"registerClass",(function(){return os}));var c={};n.r(c),n.d(c,"TEST_EPSILON_FLOAT16",(function(){return us})),n.d(c,"expectArraysClose",(function(){return ls})),n.d(c,"testEpsilon",(function(){return cs})),n.d(c,"expectPromiseToFail",(function(){return ds})),n.d(c,"expectArraysEqual",(function(){return ps})),n.d(c,"expectNumbersClose",(function(){return fs})),n.d(c,"expectValuesInRange",(function(){return gs})),n.d(c,"expectArrayBuffersEqual",(function(){return bs}));var h={};n.r(h),n.d(h,"segOpComputeOptimalWindowSize",(function(){return Ja})),n.d(h,"computeOutShape",(function(){return Za})),n.d(h,"collectGatherOpShapeInfo",(function(){return Qa}));var d={};n.r(d),n.d(d,"fft",(function(){return Di})),n.d(d,"ifft",(function(){return _i})),n.d(d,"rfft",(function(){return Fi})),n.d(d,"irfft",(function(){return Mi}));var p={};n.r(p),n.d(p,"hannWindow",(function(){return Wi})),n.d(p,"hammingWindow",(function(){return Vi})),n.d(p,"frame",(function(){return Ui})),n.d(p,"stft",(function(){return qi}));var f={};n.r(f),n.d(f,"Reduction",(function(){return Hi})),n.d(f,"absoluteDifference",(function(){return Ki})),n.d(f,"computeWeightedLoss",(function(){return Xi})),n.d(f,"cosineDistance",(function(){return Yi})),n.d(f,"hingeLoss",(function(){return Ji})),n.d(f,"huberLoss",(function(){return Zi})),n.d(f,"logLoss",(function(){return Qi})),n.d(f,"meanSquaredError",(function(){return to})),n.d(f,"sigmoidCrossEntropy",(function(){return eo})),n.d(f,"softmaxCrossEntropy",(function(){return no}));var m={};n.r(m),n.d(m,"bandPart",(function(){return so})),n.d(m,"gramSchmidt",(function(){return ao})),n.d(m,"qr",(function(){return io}));var g={};n.r(g),n.d(g,"nonMaxSuppression",(function(){return bo})),n.d(g,"resizeBilinear",(function(){return yo})),n.d(g,"resizeNearestNeighbor",(function(){return xo})),n.d(g,"nonMaxSuppressionAsync",(function(){return wo})),n.d(g,"nonMaxSuppressionWithScore",(function(){return vo})),n.d(g,"nonMaxSuppressionWithScoreAsync",(function(){return Oo})),n.d(g,"cropAndResize",(function(){return So}));var b={};n.r(b),n.d(b,"matMul",(function(){return Ao})),n.d(b,"conv2d",(function(){return Eo})),n.d(b,"depthwiseConv2d",(function(){return To}));var y={};n.r(y),n.d(y,"add",(function(){return $})),n.d(y,"addN",(function(){return Bs})),n.d(y,"atan2",(function(){return Ps})),n.d(y,"avgPool",(function(){return Ws})),n.d(y,"avgPool3d",(function(){return Vs})),n.d(y,"batchToSpaceND",(function(){return An})),n.d(y,"batchNorm",(function(){return qs})),n.d(y,"batchNorm2d",(function(){return Gs})),n.d(y,"batchNorm3d",(function(){return Hs})),n.d(y,"batchNorm4d",(function(){return Ks})),n.d(y,"broadcastTo",(function(){return Ys})),n.d(y,"clone",(function(){return Xs})),n.d(y,"complex",(function(){return Js.a})),n.d(y,"concat",(function(){return M})),n.d(y,"concat1d",(function(){return Zs})),n.d(y,"concat2d",(function(){return Qs})),n.d(y,"concat3d",(function(){return ta})),n.d(y,"concat4d",(function(){return ea})),n.d(y,"conv1d",(function(){return na})),n.d(y,"conv2d",(function(){return Te})),n.d(y,"conv2dTranspose",(function(){return ra})),n.d(y,"conv3d",(function(){return sa})),n.d(y,"conv3dTranspose",(function(){return aa})),n.d(y,"cumsum",(function(){return Fe})),n.d(y,"depthToSpace",(function(){return ia})),n.d(y,"depthwiseConv2d",(function(){return oa})),n.d(y,"diag",(function(){return ua})),n.d(y,"div",(function(){return K})),n.d(y,"divNoNan",(function(){return la})),n.d(y,"dot",(function(){return ca})),n.d(y,"elu",(function(){return ha})),n.d(y,"equal",(function(){return da})),n.d(y,"eye",(function(){return pa})),n.d(y,"fill",(function(){return fa})),n.d(y,"floorDiv",(function(){return H})),n.d(y,"greater",(function(){return an})),n.d(y,"greaterEqual",(function(){return Ze})),n.d(y,"imag",(function(){return ma.a})),n.d(y,"leakyRelu",(function(){return ba})),n.d(y,"less",(function(){return Qe})),n.d(y,"lessEqual",(function(){return on})),n.d(y,"localResponseNormalization",(function(){return ya})),n.d(y,"matMul",(function(){return we})),n.d(y,"max",(function(){return xa})),n.d(y,"maxPool",(function(){return wa})),n.d(y,"maxPool3d",(function(){return va})),n.d(y,"maxPoolWithArgmax",(function(){return Oa})),n.d(y,"maximum",(function(){return ga})),n.d(y,"minimum",(function(){return Sa})),n.d(y,"mod",(function(){return ka})),n.d(y,"mul",(function(){return X})),n.d(y,"multinomial",(function(){return Ca})),n.d(y,"notEqual",(function(){return Na})),n.d(y,"oneHot",(function(){return Yr})),n.d(y,"outerProduct",(function(){return Ia})),n.d(y,"pad",(function(){return Dn})),n.d(y,"pad1d",(function(){return Aa})),n.d(y,"pad2d",(function(){return Ea})),n.d(y,"pad3d",(function(){return Ta})),n.d(y,"pad4d",(function(){return $a})),n.d(y,"pool",(function(){return Ra})),n.d(y,"pow",(function(){return wn})),n.d(y,"prelu",(function(){return ja})),n.d(y,"rand",(function(){return Da})),n.d(y,"randomGamma",(function(){return La})),n.d(y,"randomNormal",(function(){return Ba})),n.d(y,"randomUniform",(function(){return Pa})),n.d(y,"real",(function(){return Wa.a})),n.d(y,"relu",(function(){return Va})),n.d(y,"relu6",(function(){return Ua})),n.d(y,"selu",(function(){return qa})),n.d(y,"separableConv2d",(function(){return Ga})),n.d(y,"spaceToBatchND",(function(){return Oe})),n.d(y,"split",(function(){return Ce})),n.d(y,"square",(function(){return Ot})),n.d(y,"squaredDifference",(function(){return Ha})),n.d(y,"sub",(function(){return Ue})),n.d(y,"tile",(function(){return qe})),n.d(y,"truncatedNormal",(function(){return Ka})),n.d(y,"booleanMaskAsync",(function(){return si})),n.d(y,"reverse",(function(){return ai})),n.d(y,"reverse1d",(function(){return ii})),n.d(y,"reverse2d",(function(){return oi})),n.d(y,"reverse3d",(function(){return ui})),n.d(y,"reverse4d",(function(){return li})),n.d(y,"slice",(function(){return Gn})),n.d(y,"slice1d",(function(){return Hn})),n.d(y,"slice2d",(function(){return Kn})),n.d(y,"slice3d",(function(){return Xn})),n.d(y,"slice4d",(function(){return Yn})),n.d(y,"abs",(function(){return St})),n.d(y,"acos",(function(){return kt})),n.d(y,"acosh",(function(){return Ct})),n.d(y,"asin",(function(){return Nt})),n.d(y,"asinh",(function(){return It})),n.d(y,"atan",(function(){return At})),n.d(y,"atanh",(function(){return Et})),n.d(y,"ceil",(function(){return Tt})),n.d(y,"clipByValue",(function(){return $t})),n.d(y,"cos",(function(){return Rt})),n.d(y,"cosh",(function(){return jt})),n.d(y,"erf",(function(){return Dt})),n.d(y,"exp",(function(){return _t})),n.d(y,"expm1",(function(){return Ft})),n.d(y,"floor",(function(){return Mt})),n.d(y,"log",(function(){return zt})),n.d(y,"log1p",(function(){return Lt})),n.d(y,"logSigmoid",(function(){return Bt})),n.d(y,"neg",(function(){return Pt})),n.d(y,"reciprocal",(function(){return Wt})),n.d(y,"round",(function(){return Vt})),n.d(y,"rsqrt",(function(){return Ut})),n.d(y,"sigmoid",(function(){return qt})),n.d(y,"sign",(function(){return Gt})),n.d(y,"isNaN",(function(){return Ht})),n.d(y,"isInf",(function(){return Kt})),n.d(y,"isFinite",(function(){return Xt})),n.d(y,"sin",(function(){return Yt})),n.d(y,"sinh",(function(){return Jt})),n.d(y,"softplus",(function(){return Zt})),n.d(y,"sqrt",(function(){return Qt})),n.d(y,"step",(function(){return te})),n.d(y,"tan",(function(){return ee})),n.d(y,"tanh",(function(){return ne})),n.d(y,"all",(function(){return dt})),n.d(y,"any",(function(){return pt})),n.d(y,"argMax",(function(){return ft})),n.d(y,"argMin",(function(){return mt})),n.d(y,"logSumExp",(function(){return gt})),n.d(y,"mean",(function(){return bt})),n.d(y,"min",(function(){return yt})),n.d(y,"moments",(function(){return xt})),n.d(y,"sum",(function(){return wt})),n.d(y,"prod",(function(){return vt})),n.d(y,"equalStrict",(function(){return ci})),n.d(y,"greaterEqualStrict",(function(){return hi})),n.d(y,"greaterStrict",(function(){return di})),n.d(y,"lessEqualStrict",(function(){return pi})),n.d(y,"lessStrict",(function(){return fi})),n.d(y,"notEqualStrict",(function(){return mi})),n.d(y,"addStrict",(function(){return gi})),n.d(y,"divStrict",(function(){return bi})),n.d(y,"maximumStrict",(function(){return yi})),n.d(y,"minimumStrict",(function(){return xi})),n.d(y,"modStrict",(function(){return wi})),n.d(y,"mulStrict",(function(){return vi})),n.d(y,"powStrict",(function(){return Oi})),n.d(y,"squaredDifferenceStrict",(function(){return Si})),n.d(y,"subStrict",(function(){return ki})),n.d(y,"logicalAnd",(function(){return fn})),n.d(y,"logicalNot",(function(){return mn})),n.d(y,"logicalOr",(function(){return gn})),n.d(y,"logicalXor",(function(){return bn})),n.d(y,"where",(function(){return yn})),n.d(y,"whereAsync",(function(){return xn})),n.d(y,"buffer",(function(){return z})),n.d(y,"print",(function(){return L})),n.d(y,"cast",(function(){return B})),n.d(y,"expandDims",(function(){return P})),n.d(y,"reshape",(function(){return W})),n.d(y,"squeeze",(function(){return V})),n.d(y,"stack",(function(){return U})),n.d(y,"unstack",(function(){return q})),n.d(y,"setdiff1dAsync",(function(){return G})),n.d(y,"linspace",(function(){return F.a})),n.d(y,"ones",(function(){return F.b})),n.d(y,"range",(function(){return F.d})),n.d(y,"scalar",(function(){return F.e})),n.d(y,"tensor",(function(){return F.f})),n.d(y,"tensor1d",(function(){return F.g})),n.d(y,"tensor2d",(function(){return F.h})),n.d(y,"tensor3d",(function(){return F.i})),n.d(y,"tensor4d",(function(){return F.j})),n.d(y,"tensor5d",(function(){return F.k})),n.d(y,"tensor6d",(function(){return F.l})),n.d(y,"variable",(function(){return F.m})),n.d(y,"zeros",(function(){return F.n})),n.d(y,"onesLike",(function(){return F.c})),n.d(y,"zerosLike",(function(){return F.o})),n.d(y,"transpose",(function(){return _e})),n.d(y,"softmax",(function(){return Ci})),n.d(y,"logSoftmax",(function(){return Ni})),n.d(y,"norm",(function(){return Ii})),n.d(y,"gather",(function(){return ni})),n.d(y,"unsortedSegmentSum",(function(){return ri})),n.d(y,"basicLSTMCell",(function(){return Ai})),n.d(y,"multiRNNCell",(function(){return Ei})),n.d(y,"movingAverage",(function(){return Ti})),n.d(y,"stridedSlice",(function(){return $i})),n.d(y,"topk",(function(){return Ri})),n.d(y,"scatterND",(function(){return ji})),n.d(y,"fft",(function(){return Di})),n.d(y,"ifft",(function(){return _i})),n.d(y,"rfft",(function(){return Fi})),n.d(y,"irfft",(function(){return Mi})),n.d(y,"sparseToDense",(function(){return zi})),n.d(y,"gatherND",(function(){return Li})),n.d(y,"dropout",(function(){return Bi})),n.d(y,"hannWindow",(function(){return Wi})),n.d(y,"hammingWindow",(function(){return Vi})),n.d(y,"frame",(function(){return Ui})),n.d(y,"stft",(function(){return qi})),n.d(y,"inTopKAsync",(function(){return Gi})),n.d(y,"op",(function(){return T.a})),n.d(y,"image",(function(){return g})),n.d(y,"linalg",(function(){return m})),n.d(y,"losses",(function(){return f})),n.d(y,"spectral",(function(){return d})),n.d(y,"fused",(function(){return b})),n.d(y,"signal",(function(){return p}));var x={};n.r(x),n.d(x,"axesAreInnerMostDims",(function(){return rt})),n.d(x,"combineLocations",(function(){return st})),n.d(x,"computeOutAndReduceShapes",(function(){return at})),n.d(x,"expandShapeToKeepDim",(function(){return it})),n.d(x,"assertAxesAreInnerMostDims",(function(){return ot})),n.d(x,"getAxesPermutation",(function(){return ut})),n.d(x,"getUndoAxesPermutation",(function(){return lt})),n.d(x,"getInnerMostAxes",(function(){return ct})),n.d(x,"getBroadcastDims",(function(){return S})),n.d(x,"getReductionAxes",(function(){return k})),n.d(x,"assertAndGetBroadcastShape",(function(){return C})),n.d(x,"assertParamsConsistent",(function(){return D})),n.d(x,"computeOutShape",(function(){return _})),n.d(x,"computePool2DInfo",(function(){return se})),n.d(x,"computePool3DInfo",(function(){return ae})),n.d(x,"computeConv2DInfo",(function(){return ie})),n.d(x,"computeConv3DInfo",(function(){return oe})),n.d(x,"computeDefaultPad",(function(){return ue})),n.d(x,"tupleValuesAreOne",(function(){return pe})),n.d(x,"eitherStridesOrDilationsAreOne",(function(){return fe})),n.d(x,"convertConv2DDataFormat",(function(){return me})),n.d(x,"PARALLELIZE_THRESHOLD",(function(){return Xa})),n.d(x,"computeOptimalWindowSize",(function(){return Ya})),n.d(x,"nonMaxSuppressionV3",(function(){return lo})),n.d(x,"nonMaxSuppressionV5",(function(){return co})),n.d(x,"upcastType",(function(){return Lo.c})),n.d(x,"getReshaped",(function(){return Vo})),n.d(x,"getPermuted",(function(){return Uo})),n.d(x,"getReshapedPermuted",(function(){return qo})),n.d(x,"getSliceBeginCoords",(function(){return Go})),n.d(x,"getSliceSize",(function(){return Ho})),n.d(x,"prepareAndValidate",(function(){return es})),n.d(x,"validateUpdateShape",(function(){return ns})),n.d(x,"validateInput",(function(){return rs})),n.d(x,"calculateShapes",(function(){return ss})),n.d(x,"SELU_SCALEALPHA",(function(){return Cn})),n.d(x,"SELU_SCALE",(function(){return Nn})),n.d(x,"shouldFuse",(function(){return ko})),n.d(x,"ERF_P",(function(){return Ko})),n.d(x,"ERF_A1",(function(){return Xo})),n.d(x,"ERF_A2",(function(){return Yo})),n.d(x,"ERF_A3",(function(){return Jo})),n.d(x,"ERF_A4",(function(){return Zo})),n.d(x,"ERF_A5",(function(){return Qo})),n.d(x,"warn",(function(){return tu})),n.d(x,"log",(function(){return eu})),n.d(x,"mergeRealAndImagArrays",(function(){return nu})),n.d(x,"splitRealAndImagArrays",(function(){return ru})),n.d(x,"complexWithEvenIndex",(function(){return su})),n.d(x,"complexWithOddIndex",(function(){return au})),n.d(x,"getComplexWithIndex",(function(){return iu})),n.d(x,"assignToTypedArray",(function(){return ou})),n.d(x,"exponents",(function(){return uu})),n.d(x,"exponent",(function(){return lu})),n.d(x,"segment_util",(function(){return h})),n.d(x,"castTensor",(function(){return cu})),n.d(x,"reshapeTensor",(function(){return hu})),n.d(x,"linspaceImpl",(function(){return du}));var w={};n.r(w),n.d(w,"nonMaxSuppressionV3",(function(){return lo})),n.d(w,"nonMaxSuppressionV5",(function(){return co})),n.d(w,"split",(function(){return fu})),n.d(w,"tile",(function(){return mu})),n.d(w,"topkImpl",(function(){return gu})),n.d(w,"whereImpl",(function(){return pn}));var v=n(5),O=(n(54),n(6));
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function S(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=t[a]||1;(e[e.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function k(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],a=e.length-r-1,i=e[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function C(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let a=e[e.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`)}n.unshift(r)}}return n}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N={kernelName:O.a,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=C(n.shape,r.shape);return{a:()=>{let e=t;const r=k(n.shape,s);return r.length>0&&(e=e.sum(r)),e.reshape(n.shape)},b:()=>{let e=t;const n=k(r.shape,s);return n.length>0&&(e=e.sum(n)),e.reshape(r.shape)}}}},I={kernelName:O.b,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var A=n(10),E=n(3),T=n(4);const $=Object(T.a)({add_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(E.a)(t,"a","add"),r=Object(E.a)(e,"b","add");[n,r]=Object(A.makeTypesMatch)(n,r);const s={a:n,b:r};return v.a.runKernelFunc((t,e)=>{const s=t.add(n,r);return e([n,r]),s},s,null,O.a)}});var R=n(7),j=n(1);
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function D(t,e){const n=t[0].length;t.forEach((t,e)=>{j.assert(t.length===n,()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`)}),j.assert(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((t,s)=>{for(let a=0;a<n;a++)j.assert(a===e||t[a]===r[a],()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function _(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}var F=n(8);
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M=Object(T.a)({concat_:function(t,e=0){Object(j.assert)(t.length>=1,()=>"Pass at least one tensor to concat");let n=Object(E.b)(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)});const r=Object(j.parseAxisParam)(e,n[0].shape)[0],s=_(n.map(t=>t.shape),r);if(0===Object(j.sizeFromShape)(s))return Object(F.f)([],s);if(n=n.filter(t=>t.size>0),1===n.length)return n[0];D(n.map(t=>t.shape),r);const a=n,i={axis:e};return v.a.runKernelFunc((t,e)=>{const s=t.concat(n,r);return e(n),s},a,null,O.l,i)}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z(t,e="float32",n){return e=e||"float32",j.assertNonNegativeIntegerDimensions(t),new R.b(t,e,n)}function L(t,e=!1){console.log(t.toString(e))}const B=Object(T.a)({cast_:function(t,e){const n=Object(E.a)(t,"x","cast");if(!j.isValidDtype(e))throw new Error("Failed to cast to unknown dtype "+e);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={dtype:e};return v.a.runKernelFunc(t=>t.cast(n,e),{x:n},t=>({x:()=>t.clone()}),"Cast",r)}}),P=Object(T.a)({expandDims_:function(t,e=0){const n=Object(E.a)(t,"x","expandDims",null);j.assert(e<=n.rank,()=>"Axis must be <= rank of the tensor");const r=n.shape.slice();return e<0&&(j.assert(-(n.rank+1)<=e,()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`),e=n.rank+e+1),r.splice(e,0,1),W(n,r)}}),W=Object(T.a)({reshape_:function(t,e){const n=Object(E.a)(t,"x","reshape",null);e=j.inferFromImplicitShape(e,n.size),j.assert(n.size===j.sizeFromShape(e),()=>"new shape and old shape must have the same number of elements.");const r={shape:e};return v.a.runKernelFunc(t=>t.reshape(n,e),{x:n},t=>({x:()=>t.reshape(n.shape)}),"Reshape",r)}}),V=Object(T.a)({squeeze_:function(t,e){const n=Object(E.a)(t,"x","squeeze");return W(n,j.squeezeShape(n.shape,e).newShape)}}),U=Object(T.a)({stack_:function(t,e=0){const n=Object(E.b)(t,"tensors","stack");if(j.assert(n.length>=1,()=>"Pass at least one tensor to tf.stack"),1===n.length)return n[0].expandDims(e);const r=n[0].rank,s=n[0].shape,a=n[0].dtype;j.assert(e<=r,()=>"Axis must be <= rank of the tensor"),n.forEach(t=>{j.assertShapesMatch(s,t.shape,"All tensors passed to stack must have matching shapes")}),n.forEach(t=>{j.assert(a===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=n.map(t=>t.expandDims(e));return M(i,e)}}),q=Object(T.a)({unstack_:function(t,e=0){e=e||0;const n=Object(E.a)(t,"x","unstack");j.assert(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`),e<0&&(e+=n.shape.length);const r={axis:e};return v.a.runKernelFunc(t=>t.unstack(n,e),{x:n},t=>({x:()=>U(t,e)}),"Unpack",r)}}),G=async function(t,e){const n=Object(E.a)(t,"x","setdiff1d"),r=Object(E.a)(e,"y","setdiff1d");j.assert(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),j.assert(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),j.assert(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let t=0;t<s.length;t++)i.has(s[t])||o++;const u=new R.b([o],n.dtype),l=new R.b([o],"int32");for(let t=0,e=0;t<s.length;t++)i.has(s[t])||(u.values[e]=s[t],l.values[e]=t,e++);return[u.toTensor(),l.toTensor()]};const H=Object(T.a)({floorDiv_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(E.a)(t,"a","floorDiv"),r=Object(E.a)(e,"b","floorDiv");[n,r]=Object(A.makeTypesMatch)(n,r);const s={a:n,b:r};return v.a.runKernelFunc((t,e)=>{const s=t.floorDiv(n,r);return e([n,r]),s},s,null,O.D)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K=Object(T.a)({div_:function(t,e){let n=Object(E.a)(t,"a","div"),r=Object(E.a)(e,"b","div");if([n,r]=Object(A.makeTypesMatch)(n,r),"int32"===n.dtype&&"int32"===r.dtype)return H(n,r);const s={a:n,b:r};return v.a.runKernelFunc((t,e)=>{const s=t.realDivide(n,r);return e([n,r]),s},s,null,O.y,{})}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X=Object(T.a)({mul_:function(t,e){let n=Object(E.a)(t,"a","mul"),r=Object(E.a)(e,"b","mul");[n,r]=Object(A.makeTypesMatch)(n,r);const s={a:n,b:r};return v.a.runKernelFunc((t,e)=>{const s=t.multiply(n,r);return e([n,r]),s},s,null,O.Y)}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y(t){return j.assert(j.isFunction(t),()=>"The f passed in grad(f) must be a function"),(e,n)=>{const r=Object(E.a)(e,"x","tf.grad",null),s=null!=n?Object(E.a)(n,"dy","tf.grad"):null;return v.a.tidy(()=>{const{value:e,grads:n}=v.a.gradients(()=>t(r),[r],s);return null!=s&&j.assertShapesMatch(e.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),nt(n),n[0]})}}function J(t){return j.assert(j.isFunction(t),()=>"The f passed in grads(f) must be a function"),(e,n)=>{j.assert(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Object(E.b)(e,"args","tf.grads",null),s=null!=n?Object(E.a)(n,"dy","tf.grads"):null;return v.a.tidy(()=>{const{value:e,grads:n}=v.a.gradients(()=>t(...r),r,s);return null!=s&&j.assertShapesMatch(e.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),nt(n),n})}}function Z(t){return j.assert(j.isFunction(t),()=>"The f passed in valueAndGrad(f) must be a function"),(e,n)=>{j.assert(e instanceof R.a,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),j.assert(null==n||n instanceof R.a,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=v.a.gradients(()=>t(e),[e],n);return nt(r),{grad:r[0],value:s}}}function Q(t){return j.assert(j.isFunction(t),()=>"The f passed in valueAndGrads(f) must be a function"),(e,n)=>{j.assert(Array.isArray(e)&&e.every(t=>t instanceof R.a),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),j.assert(null==n||n instanceof R.a,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=v.a.gradients(()=>t(...e),e,n);return null!=n&&j.assertShapesMatch(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),nt(r.grads),r}}function tt(t,e){j.assert(j.isFunction(t),()=>"The f passed in variableGrads(f) must be a function"),j.assert(null==e||Array.isArray(e)&&e.every(t=>t instanceof R.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in v.a.registeredVariables)e.push(v.a.registeredVariables[t])}const r=n?e.filter(t=>!t.trainable):null,s=e.length;e=e.filter(t=>t.trainable),j.assert(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:a,grads:i}=v.a.gradients(t,e,null,!0);j.assert(i.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),j.assert(0===a.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const o={};return e.forEach((t,e)=>{null!=i[e]&&(o[t.name]=i[e])}),null!=r&&r.forEach(t=>o[t.name]=null),{value:a,grads:o}}function et(t){return v.a.customGrad(t)}function nt(t){if(t.filter(t=>null==t).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rt(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function st(t,e,n){const r=t.length+e.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[a++]):s.push(e[i++]);return s}function at(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map(e=>t[e])]}function it(t,e){return st(t,e.map(t=>1),e)}function ot(t,e,n){j.assert(rt(e,n),()=>t+" supports only inner-most axes for now. "+`Got axes ${e} and rank-${n} input.`)}function ut(t,e){if(rt(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function lt(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function ct(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ht(t,e,n,r,s){return e.rank<n.rank&&(e=e.reshape(it(e.shape,r))),t.rank<n.rank&&(t=t.reshape(it(t.shape,r))),{x:()=>{const r=t.mul(n.equal(e).cast(t.dtype));return null==s?r:r.transpose(s)}}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dt=Object(T.a)({all_:function(t,e=null,n=!1){let r=Object(E.a)(t,"x","all","bool");const s=j.parseAxisParam(e,r.shape);let a=s;const i=ut(a,r.rank);null!=i&&(r=r.transpose(i),a=ct(a.length,r.rank));const o=v.a.runKernelFunc(t=>t.all(r,a),{$x:r});if(n){const t=it(o.shape,s);return o.reshape(t)}return o}}),pt=Object(T.a)({any_:function(t,e=null,n=!1){let r=Object(E.a)(t,"x","any","bool");const s=j.parseAxisParam(e,r.shape);let a=s;const i=ut(a,r.rank);null!=i&&(r=r.transpose(i),a=ct(a.length,r.rank));const o=v.a.runKernelFunc(t=>t.any(r,a),{$x:r});if(n){const t=it(o.shape,s);return o.reshape(t)}return o}}),ft=Object(T.a)({argMax_:function(t,e=0){let n=Object(E.a)(t,"x","argMax");null==e&&(e=0);let r=j.parseAxisParam(e,n.shape);const s=ut(r,n.rank);null!=s&&(n=n.transpose(s),r=ct(r.length,n.rank));const a={axis:r[0]},i=[n];return v.a.runKernelFunc((t,e)=>{const s=t.argMax(n,r[0]);return e([n]),s},{x:n},(t,e)=>{const[n]=e;return{x:()=>Object(F.o)(n)}},"ArgMax",a,i)}}),mt=Object(T.a)({argMin_:function(t,e=0){let n=Object(E.a)(t,"x","argMin");null==e&&(e=0);let r=j.parseAxisParam(e,n.shape);const s=ut(r,n.rank);return null!=s&&(n=n.transpose(s),r=ct(r.length,n.rank)),v.a.runKernelFunc((t,e)=>{const s=t.argMin(n,r[0]);return e([n]),s},{$x:n},(t,e)=>{const[n]=e;return{$x:()=>Object(F.o)(n)}})}}),gt=Object(T.a)({logSumExp_:function(t,e=null,n=!1){const r=Object(E.a)(t,"x","logSumExp"),s=j.parseAxisParam(e,r.shape),a=r.max(s,!0),i=r.sub(a).exp().sum(s).log(),o=a.reshape(i.shape).add(i);if(n){const t=it(o.shape,s);return o.reshape(t)}return o}}),bt=Object(T.a)({mean_:function(t,e=null,n=!1){const r=Object(E.a)(t,"x","mean"),s=j.parseAxisParam(e,r.shape),a=at(r.shape,s)[1],i=j.sizeFromShape(a);return et(t=>{const r=Object(F.e)(i);return{value:(r.dtype===t.dtype?t:t.cast(r.dtype)).div(r).sum(e,n),gradFunc:e=>{const n=t.shape.slice();s.forEach(t=>{n[t]=1});return e.reshape(n).mul(Object(F.b)(t.shape,"float32")).div(i)}}})(r)}}),yt=Object(T.a)({min_:function(t,e=null,n=!1){let r=Object(E.a)(t,"x","min");const s=r,a=j.parseAxisParam(e,r.shape);let i=a;const o=ut(i,r.rank);null!=o&&(r=r.transpose(o),i=ct(i.length,r.rank));const u=[r];let l=v.a.runKernelFunc((t,e)=>{const n=t.min(r,i);return e([s,n]),n},{x:r},(t,e)=>ht(t,e[1],e[0],a,o),"Min",{axes:i},u,[!0]);if(n){const t=it(l.shape,a);l=l.reshape(t)}return l}}),xt=Object(T.a)({moments_:function(t,e=null,n=!1){t=Object(E.a)(t,"x","moments");const r=j.parseAxisParam(e,t.shape),s=t.mean(r,n);let a=s.shape;n||(a=it(s.shape,r));const i=t.toFloat().sub(s.reshape(a)).square();return{mean:s,variance:i.mean(r,n)}}}),wt=Object(T.a)({sum_:function(t,e=null,n=!1){let r=Object(E.a)(t,"x","sum");"bool"===r.dtype&&(r=r.toInt());const s=j.parseAxisParam(e,r.shape);return et(t=>{const e=ut(s,t.rank);let r=s,a=t;null!=e&&(a=t.transpose(e),r=ct(r.length,t.rank));const i=e=>{const n=t.shape.slice();s.forEach(t=>{n[t]=1});return e.reshape(n).mul(Object(F.b)(t.shape,"float32"))},o={axes:r};let u=v.a.runKernelFunc(t=>t.sum(a,r),{x:a},t=>({x:()=>i(t)}),"Sum",o);if(n){const t=it(u.shape,s);u=u.reshape(t)}return{value:u,gradFunc:i}})(r)}}),vt=Object(T.a)({prod_:function(t,e=null,n=!1){let r=Object(E.a)(t,"x","prod");"bool"===r.dtype&&(r=r.toInt());const s=j.parseAxisParam(e,r.shape),a=ut(s,r.rank);let i=s,o=r;null!=a&&(o=r.transpose(a),i=ct(i.length,r.rank));let u=v.a.runKernelFunc(t=>t.prod(o,i),{permutedX:o});if(n){const t=it(u.shape,s);u=u.reshape(t)}return u}});const Ot=Object(T.a)({square_:
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e=Object(E.a)(t,"x","square"),n=[e];return v.a.runKernelFunc((t,n)=>(n([e]),t.square(e)),{x:e},null,"Square",{},n,[])}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const St=Object(T.a)({abs_:function(t){const e=Object(E.a)(t,"x","abs");return"complex64"===e.dtype?v.a.runKernelFunc(t=>t.complexAbs(e),{$x:e}):v.a.runKernelFunc((t,n)=>{const r=t.abs(e);return n([e]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>t.mul(n.toFloat().step(-1))}},"Abs")}}),kt=Object(T.a)({acos_:function(t){const e=Object(E.a)(t,"x","acos");return v.a.runKernelFunc((t,n)=>{const r=t.acos(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>{const e=n.toFloat().square(),r=Object(F.e)(1).sub(e).sqrt();return t.div(r).neg()}}})}}),Ct=Object(T.a)({acosh_:function(t){const e=Object(E.a)(t,"x","acosh");return v.a.runKernelFunc((t,n)=>{const r=t.acosh(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>{const e=n.toFloat().square().sub(1).sqrt();return t.div(e)}}})}}),Nt=Object(T.a)({asin_:function(t){const e=Object(E.a)(t,"x","asin");return v.a.runKernelFunc((t,n)=>{const r=t.asin(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.div(Object(F.e)(1).sub(n.toFloat().square()).sqrt())}})}}),It=Object(T.a)({asinh_:function(t){const e=Object(E.a)(t,"x","asinh");return v.a.runKernelFunc((t,n)=>{const r=t.asinh(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>{const e=Object(F.e)(1).add(n.toFloat().square()).sqrt();return t.div(e)}}})}}),At=Object(T.a)({atan_:function(t){const e=Object(E.a)(t,"x","atan");return v.a.runKernelFunc((t,n)=>{const r=t.atan(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.div(n.toFloat().square().add(1))}})}}),Et=Object(T.a)({atanh_:function(t){const e=Object(E.a)(t,"x","atanh");return v.a.runKernelFunc((t,n)=>{const r=t.atanh(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.div(Object(F.e)(1).sub(n.toFloat().square()))}})}}),Tt=Object(T.a)({ceil_:function(t){const e=Object(E.a)(t,"x","ceil");return v.a.runKernelFunc(t=>t.ceil(e),{$x:e},t=>({$x:()=>Object(F.o)(t)}))}}),$t=Object(T.a)({clipByValue_:function(t,e,n){const r=Object(E.a)(t,"x","clipByValue");j.assert(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`);const s=[r],a={min:e,max:n};return v.a.runKernelFunc((t,s)=>{const a=t.clip(r,e,n);return s([r]),a},{x:r},(t,r)=>{const[s]=r;return{x:()=>t.where(s.greaterEqual(e).logicalAnd(s.lessEqual(n)),Object(F.o)(t))}},"ClipByValue",a,s)}}),Rt=Object(T.a)({cos_:function(t){const e=Object(E.a)(t,"x","cos"),n=[e];return v.a.runKernelFunc((t,n)=>{const r=t.cos(e);return n([e]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>n.toFloat().sin().neg().mul(t)}},"Cos",{},n)}}),jt=Object(T.a)({cosh_:function(t){const e=Object(E.a)(t,"x","cosh");return v.a.runKernelFunc((t,n)=>{const r=t.cosh(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>n.toFloat().sinh().mul(t)}})}}),Dt=Object(T.a)({erf_:function(t){let e=Object(E.a)(t,"x","erf");return j.assert("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=e.toFloat()),v.a.runKernelFunc((t,n)=>{const r=t.erf(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.mul(n.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}})}}),_t=Object(T.a)({exp_:function(t){const e=Object(E.a)(t,"x","exp");return v.a.runKernelFunc((t,n)=>{const r=t.exp(e);return n([r]),r},{x:e},(t,e)=>({x:()=>t.mul(e[0])}),"Exp",{},[],[!0])}}),Ft=Object(T.a)({expm1_:function(t){const e=Object(E.a)(t,"x","expm1");return v.a.runKernelFunc((t,n)=>{const r=t.expm1(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.mul(n.exp())}})}}),Mt=Object(T.a)({floor_:function(t){const e=Object(E.a)(t,"x","floor");return v.a.runKernelFunc(t=>t.floor(e),{$x:e},t=>({$x:()=>Object(F.o)(t)}))}}),zt=Object(T.a)({log_:function(t){const e=Object(E.a)(t,"x","log"),n=[e];return v.a.runKernelFunc((t,n)=>{const r=t.log(e);return n([e]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>t.div(n.toFloat())}},"Log",{},n)}}),Lt=Object(T.a)({log1p_:function(t){const e=Object(E.a)(t,"x","log1p");return v.a.runKernelFunc((t,n)=>{const r=t.log1p(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.div(n.add(1))}})}}),Bt=Object(T.a)({logSigmoid_:function(t){const e=Object(E.a)(t,"x","logSigmoid");return v.a.runKernelFunc((t,n)=>{const r=t.softplus(e.neg()).neg();return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.mul(n.neg().sigmoid())}})}}),Pt=Object(T.a)({neg_:function(t){const e=Object(E.a)(t,"x","neg"),n=[e];return v.a.runKernelFunc(t=>t.neg(e),{x:e},t=>({x:()=>t.neg()}),"Neg",{},n)}}),Wt=Object(T.a)({reciprocal_:function(t){const e=Object(E.a)(t,"x","reciprocal");return v.a.runKernelFunc((t,n)=>{const r=t.reciprocal(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.div(n.square().neg())}})}}),Vt=Object(T.a)({round_:function(t){const e=Object(E.a)(t,"x","round");return v.a.runKernelFunc(t=>t.round(e),{$x:e},t=>({$x:()=>Object(F.o)(t)}))}}),Ut=Object(T.a)({rsqrt_:function(t){const e=Object(E.a)(t,"x","rsqrt"),n=[e];return v.a.runKernelFunc((t,n)=>{const r=t.rsqrt(e);return n([e]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>t.div(n.pow(1.5).mul(2)).neg()}},"Rsqrt",{},n)}}),qt=Object(T.a)({sigmoid_:function(t){const e=Object(E.a)(t,"x","sigmoid");return v.a.runKernelFunc((t,n)=>{const r=t.sigmoid(e);return n([r]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>t.mul(n.mul(Object(F.e)(1).sub(n)))}},"Sigmoid")}}),Gt=Object(T.a)({sign_:function(t){const e=Object(E.a)(t,"x","sign");return v.a.runKernelFunc(t=>t.sign(e),{$x:e},t=>({$x:()=>Object(F.o)(t)}))}}),Ht=Object(T.a)({isNaN_:function(t){const e=Object(E.a)(t,"x","isNaN");return v.a.runKernelFunc(t=>t.isNaN(e),{$x:e},t=>({$x:()=>Object(F.o)(t)}))}}),Kt=Object(T.a)({isInf_:function(t){const e=Object(E.a)(t,"x","isInf");return v.a.runKernelFunc(t=>t.isInf(e),{$x:e},t=>({$x:()=>Object(F.o)(t)}))}}),Xt=Object(T.a)({isFinite_:function(t){const e=Object(E.a)(t,"x","isFinite");return v.a.runKernelFunc(t=>t.isFinite(e),{$x:e},t=>({$x:()=>Object(F.o)(t)}))}}),Yt=Object(T.a)({sin_:function(t){const e=Object(E.a)(t,"x","sin"),n=[e];return v.a.runKernelFunc((t,n)=>{const r=t.sin(e);return n([e]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>n.toFloat().cos().mul(t)}},"Sin",{},n)}}),Jt=Object(T.a)({sinh_:function(t){const e=Object(E.a)(t,"x","sinh");return v.a.runKernelFunc((t,n)=>{const r=t.sinh(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>n.toFloat().cosh().mul(t)}})}}),Zt=Object(T.a)({softplus_:function(t){const e=Object(E.a)(t,"x","softplus");return v.a.runKernelFunc((t,n)=>{const r=t.softplus(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.mul(n.sigmoid())}})}}),Qt=Object(T.a)({sqrt_:function(t){const e=Object(E.a)(t,"x","sqrt");return v.a.runKernelFunc((t,n)=>{const r=t.sqrt(e);return n([e]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>t.div(n.toFloat().sqrt().mul(2))}},"Sqrt",{})}}),te=Object(T.a)({step_:function(t,e=0){const n=Object(E.a)(t,"x","step");return v.a.runKernelFunc(t=>t.step(n,e),{$x:n},t=>({$x:()=>Object(F.o)(t)}))}}),ee=Object(T.a)({tan_:function(t){const e=Object(E.a)(t,"x","tan");return v.a.runKernelFunc((t,n)=>{const r=t.tan(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.div(n.cos().square())}})}}),ne=Object(T.a)({tanh_:function(t){const e=Object(E.a)(t,"x","tanh");return v.a.runKernelFunc((t,n)=>{const r=t.tanh(e);return n([r]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>Object(F.e)(1).sub(n.square()).mul(t)}},"Tanh",{},null,[!0])}}),re={kernelName:O.c,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=C(n.shape,r.shape);return{a:()=>{const e=$(Ot(n),Ot(r));let a=X(t,K(r,e));const i=k(n.shape,s);return i.length>0&&(a=wt(a,i)),W(a,n.shape)},b:()=>{const e=$(Ot(n),Ot(r));let a=Pt(X(t,K(n,e)));const i=k(r.shape,s);return i.length>0&&(a=wt(a,i)),W(a,r.shape)}}}};
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function se(t,e,n,r,s,a,i="channelsLast"){const[o,u]=le(e);let l;if("channelsLast"===i)l=[o,u,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);l=[o,u,t[1],t[1]]}return ie(t,l,n,r,s,a,!1,i)}function ae(t,e,n,r,s,a,i="NDHWC"){const[o,u,l]=ce(e);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,t[4],t[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);h="channelsFirst",c=[o,u,l,t[1],t[1]]}return oe(t,c,n,r,s,!1,h,a)}function ie(t,e,n,r,s,a,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,h,l,c]=t}const[d,p,,f]=e,[m,g]=le(n),[b,y]=le(r),x=he(d,b),w=he(p,y),{padInfo:v,outHeight:O,outWidth:S}=function(t,e,n,r,s,a,i,o,u){let l,c,h;if("number"==typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=ue(t,e,n));const a=t[0],i=t[1],o=de((a-e+2*r)/n+1,s);j.assert(j.isInt(o),()=>`The output # of rows (${o}) must be an integer. Change the stride and/or zero pad parameters`);const u=de((i-e+2*r)/n+1,s);return j.assert(j.isInt(u),()=>`The output # of columns (${u}) must be an integer. Change the stride and/or zero pad parameters`),[o,u]}([e,n],a,r,t,o);c=s[0],h=s[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+a-e),o=Math.max(0,(h-1)*s+i-n),u=Math.floor(t/2),d=t-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof t)throw Error("Unknown padding parameter: "+t);{const d="channelsLast"===u?t[1][0]:t[2][0],p="channelsLast"===u?t[1][1]:t[2][1],f="channelsLast"===u?t[2][0]:t[3][0],m="channelsLast"===u?t[2][1]:t[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=de((e-a+d+p)/r+1,o),h=de((n-i+f+m)/s+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(s,l,c,m,g,x,w,a,o),k=i?f*h:f;let C;return"channelsFirst"===o?C=[u,k,O,S]:"channelsLast"===o&&(C=[u,O,S,k]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:O,outWidth:S,outChannels:k,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:y,inShape:t,outShape:C,filterShape:e}}function oe(t,e,n,r,s,a=!1,i="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,d]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,d,l,c,h]=t}const[p,f,m,,g]=e,[b,y,x]=ce(n),[w,v,O]=ce(r),S=he(p,w),k=he(f,v),C=he(m,O),{padInfo:N,outDepth:I,outHeight:A,outWidth:E}=function(t,e,n,r,s,a,i,o,u,l,c){let h,d,p,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,r,s,a){null==s&&(s=ue(t,e,r));const i=t[0],o=t[1],u=t[2],l=de((i-e+2*s)/r+1,a);j.assert(j.isInt(l),()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`);const c=de((o-e+2*s)/r+1,a);j.assert(j.isInt(c),()=>`The output # of rows (${c}) must be an integer. Change the stride and/or zero pad parameters`);const h=de((u-e+2*s)/r+1,a);return j.assert(j.isInt(h),()=>`The output # of columns (${h}) must be an integer. Change the stride and/or zero pad parameters`),[l,c,h,n]}([e,n,r,1],o,1,s,t,c);d=a[0],p=a[1],f=a[2]}else if("same"===t){d=Math.ceil(e/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const t=(d-1)*s+o-e,c=(p-1)*a+u-n,m=(f-1)*i+l-r,g=Math.floor(t/2),b=t-g,y=Math.floor(c/2),x=c-y,w=Math.floor(m/2);h={top:y,bottom:x,left:w,right:m-w,front:g,back:b,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/s),p=Math.ceil((n-u+1)/a),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,l,c,h,b,y,x,S,k,C,o),T=a?g*d:g;let $;return"channelsFirst"===i?$=[u,T,I,A,E]:"channelsLast"===i&&($=[u,I,A,E,T]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:I,outHeight:A,outWidth:E,outChannels:T,padInfo:N,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:k,effectiveFilterWidth:C,dilationDepth:w,dilationHeight:v,dilationWidth:O,inShape:t,outShape:$,filterShape:e}}function ue(t,e,n,r=1){const s=he(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function le(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function ce(t){return"number"==typeof t?[t,t,t]:t}function he(t,e){return e<=1?t:t+(t-1)*(e-1)}function de(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function pe(t){const[e,n,r]=le(t);return 1===e&&1===n&&1===r}function fe(t,e){return pe(t)||pe(e)}function me(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat "+t)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ge=Object(T.a)({avgPool3dBackprop_:function(t,e,n,r,s=[1,1,1],a,i){const o=Object(E.a)(t,"dy","avgPool3dBackprop"),u=Object(E.a)(e,"input","avgPool3dBackprop");let l=o,c=u,h=!1;4===u.rank&&(h=!0,l=W(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=W(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),j.assert(5===l.rank,()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+"."),j.assert(5===c.rank,()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+"."),j.assert(fe(r,s),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),null!=i&&j.assert(j.isInt(a),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const d={dy:l,input:c},p={filterSize:n,strides:r,dilations:s,pad:a,dimRoundingMode:i},f=v.a.runKernelFunc(t=>{const e=ae(c.shape,n,r,s,a,i);return t.avgPool3dBackprop(l,c,e)},d,null,O.f,p);return h?W(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),be={kernelName:O.e,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,dilations:i,pad:o,dimRoundingMode:u}=n,l=null==i?[1,1,1]:i;return{x:()=>ge(t,r,s,a,l,o,u)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ye=Object(T.a)({avgPoolBackprop_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,s){const a=Object(E.a)(t,"dy","avgPoolBackprop"),i=Object(E.a)(e,"input","avgPoolBackprop");j.assert(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=W(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=W(a,[1,a.shape[0],a.shape[1],a.shape[2]])),j.assert(4===u.rank,()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+u.rank+"."),j.assert(4===o.rank,()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+o.rank+".");const c={dy:u,input:o},h={filterSize:n,strides:r,pad:s},d=v.a.runKernelFunc(t=>{const e=se(o.shape,n,r,1,s);return t.avgPoolBackprop(u,o,e)},c,null,O.g,h);return l?W(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),xe={kernelName:O.d,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,pad:i}=n;return{x:()=>ye(t,r,s,a,i)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const we=Object(T.a)({matMul_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n=!1,r=!1){let s=Object(E.a)(t,"a","matMul"),a=Object(E.a)(e,"b","matMul");[s,a]=Object(A.makeTypesMatch)(s,a),j.assert(s.rank>=2&&a.rank>=2&&s.rank===a.rank,()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${s.rank} and ${a.rank}.`);const i=n?s.shape[s.rank-2]:s.shape[s.rank-1],o=r?a.shape[a.rank-1]:a.shape[a.rank-2],u=n?s.shape[s.rank-1]:s.shape[s.rank-2],l=r?a.shape[a.rank-2]:a.shape[a.rank-1],c=s.shape.slice(0,-2),h=a.shape.slice(0,-2),d=j.sizeFromShape(c),p=j.sizeFromShape(h);j.assert(j.arraysEqual(c,h),()=>`Error in matMul: outer dimensions (${c}) and (${h}) of Tensors with shapes ${s.shape} and `+a.shape+" must match."),j.assert(i===o,()=>`Error in matMul: inner shapes (${i}) and (${o}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${n} and transposeB=${r} must match.`);const f=s.shape.slice(0,-2).concat([u,l]),m=W(s,n?[d,i,u]:[d,u,i]),g=W(a,r?[p,l,o]:[p,o,l]),b={a:m,b:g},y={transposeA:n,transposeB:r},x=v.a.runKernelFunc((t,e)=>(e([m,g]),t.batchMatMul(m,g,n,r)),b,null,O.h,y);return W(x,f)}}),ve={kernelName:O.h,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>we(t,s,!1,!1),b:()=>we(t,r,!0,!1)}:a&&!i?{a:()=>we(s,t,!1,!0),b:()=>we(r,t,!1,!1)}:{a:()=>we(s,t,!0,!0),b:()=>we(t,r,!0,!0)}:{a:()=>we(t,s,!1,!0),b:()=>we(r,t,!0,!1)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oe=Object(T.a)({spaceToBatchND_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const r=Object(E.a)(t,"x","spaceToBatchND");j.assert(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),j.assert(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),j.assert(r.shape.reduce((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},a={blockShape:e,paddings:n};return v.a.runKernelFunc(t=>t.spaceToBatchND(r,e,n),s,null,O.mb,a)}}),Se={kernelName:O.i,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Oe(t,r,s)}}},ke={kernelName:O.j,gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let t=s.length-1;t>=0;t--)if(s[t]===a[t])i[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let t=0;t<i.length;t++)i[t]>1&&o.push(t);return{x:()=>wt(t,o,!0)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ce=Object(T.a)({split_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n=0){const r=Object(E.a)(t,"x","split"),s=Object(j.parseAxisParam)(n,r.shape)[0];let a;"number"==typeof e?(Object(j.assert)(r.shape[s]%e==0,()=>"Number of splits must evenly divide the axis."),a=new Array(e).fill(r.shape[s]/e)):(Object(j.assert)(r.shape[s]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),a=e);const i={x:r},o={numOrSizeSplits:e,axis:n};return v.a.runKernelFunc((t,e)=>t.split(r,a,s),i,null,O.nb,o)}}),Ne={kernelName:O.l,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:s}=n,a=Object(j.parseAxisParam)(s,e[0].shape)[0],i=r.map(t=>t[a]);return Ce(t,i,a).map(t=>()=>t)}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ie=Object(T.a)({conv2DBackpropFilter_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,s,a="NHWC",i){let o=t;3===t.rank&&(o=W(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=W(e,[1,e.shape[0],e.shape[1],e.shape[2]])),j.assert(4===o.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+"."),j.assert(4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),j.assert(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const l="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];j.assert(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),j.assert(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),null!=i&&j.assert(j.isInt(s),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const h={x:o,dy:u},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i};return v.a.runKernelFunc(t=>{const e=me(a),l=ie(o.shape,n,r,1,s,i,!1,e);return t.conv2dDerFilter(o,u,l)},h,null,O.n,d)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ae=Object(T.a)({conv2DBackpropInput_:function(t,e,n,r,s,a="NHWC",i){j.assert(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,u=e,l=!1;3===e.rank&&(l=!0,u=W(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),j.assert(4===o.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+"."),j.assert(4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),j.assert(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?u.shape[3]:u.shape[1];j.assert(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),j.assert(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),null!=i&&j.assert(j.isInt(s),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const d={dy:u,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i},f=v.a.runKernelFunc((t,e)=>{const l=me(a),c=ie(o,n.shape,r,1,s,i,!1,l),h=t.conv2dDerInput(u,n,c);return e([u,n]),h},d,null,O.o,p);return l?W(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ee={kernelName:O.m,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return j.assert(pe(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Ae(r.shape,t,s,i,o,u),filter:()=>Ie(r,t,s.shape,i,o,u)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Te=Object(T.a)({conv2d_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,s="NHWC",a=[1,1],i){const o=Object(E.a)(t,"x","conv2d"),u=Object(E.a)(e,"filter","conv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=W(o,[1,o.shape[0],o.shape[1],o.shape[2]])),j.assert(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),j.assert(4===u.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."),null!=i&&j.assert(j.isInt(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const h="NHWC"===s?l.shape[3]:l.shape[1];j.assert(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),j.assert(fe(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=v.a.runKernelFunc((t,e)=>{const o=me(s),c=ie(l.shape,u.shape,n,a,r,i,!1,o),h=t.conv2d(l,u,c);return e([l,u]),h},d,null,O.m,p);return c?W(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),$e={kernelName:O.o,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Te(t,s,a,i,o,1,u),filter:()=>Ie(t,r,s.shape,a,i,o,u)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Re=Object(T.a)({conv3DBackpropFilter_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,s){let a=t;4===t.rank&&(a=W(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=W(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),j.assert(5===a.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+a.shape+"."),j.assert(5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+"."),j.assert(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),j.assert(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),j.assert(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:a,y:i},u={strides:r,pad:s};return v.a.runKernelFunc(t=>{const e=oe(a.shape,n,r,1,s);return t.conv3dDerFilter(a,i,e)},o,null,O.q,u)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const je=Object(T.a)({conv3DBackpropInput_:function(t,e,n,r,s){j.assert(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let a=t,i=e,o=!1;4===e.rank&&(o=!0,i=W(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,t[0],t[1],t[2],t[3]]);const u=a[4],l=i.shape[4];j.assert(5===a.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+a.length+"."),j.assert(5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),j.assert(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),j.assert(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),j.assert(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c={dy:i},h={pad:s},d=v.a.runKernelFunc(t=>{const e=oe(a,n.shape,r,1,s);return t.conv3dDerInput(i,n,e)},c,null,O.r,h);return o?W(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),De={kernelName:O.p,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a}=n;j.assert(pe(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=e;return{x:()=>je(i.shape,t,o,s,a),filter:()=>Re(i,t,o.shape,s,a)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _e=Object(T.a)({transpose_:
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n=Object(E.a)(t,"x","transpose");if(null==e&&(e=n.shape.map((t,e)=>e).reverse()),j.assert(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(t=>{j.assert(t>=0&&t<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e)}),n.rank<=1)return n.clone();const r={perm:e};return v.a.runKernelFunc(t=>t.transpose(n,e),{x:n},null,"Transpose",r)}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fe=Object(T.a)({cumsum_:function(t,e=0,n=!1,r=!1){const s=Object(E.a)(t,"x","cumsum"),a={x:s},i={axis:e,exclusive:n,reverse:r};return v.a.runKernelFunc((t,a)=>{const i=ut([e],s.rank);let o=s;null!=i&&(o=_e(s,i));const u=ct(1,s.rank)[0];let l=t.cumsum(o,u,n,r);return a([s]),null!=i&&(l=_e(l,i)),l},a,null,O.s,i)}}),Me={kernelName:O.s,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const e=ut([s],r.rank);let n=Fe(t,s,a,!i);return null!=e&&(n=_e(n,e)),n}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ze=Object(T.a)({depthwiseConv2dNativeBackpropFilter_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r){let s=t;3===t.rank&&(s=W(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let a=e;3===a.rank&&(a=W(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const i={x:s,dy:a};return v.a.runKernelFunc(t=>t.depthwiseConv2DDerFilter(s,a,r),i,null,O.v)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Le=Object(T.a)({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r){let s=e,a=!1;3===e.rank&&(a=!0,s=W(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const i={dy:s},o=v.a.runKernelFunc(t=>t.depthwiseConv2DDerInput(s,n,r),i,null,O.w);return a?W(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),Be={kernelName:O.u,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;j.assert(pe(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,l]=e;j.assert(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),j.assert(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),j.assert(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),j.assert(fe(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),null!=i&&j.assert(j.isInt(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const c=ie(u.shape,l.shape,s,o,a,i,!0);return{x:()=>Le(u.shape,t,l,c),filter:()=>ze(u,t,l.shape,c)}}},Pe={kernelName:O.y,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=C(n.shape,r.shape);return{a:()=>{const e=K(t,r.toFloat()),a=k(n.shape,s);return a.length>0?wt(e,a).reshape(n.shape):e},b:()=>{let e=X(t,n.toFloat());const a=k(r.shape,s);a.length>0&&(e=W(wt(e,a),r.shape));const i=Ot(r);return Pt(K(e,i.toFloat()))}}}},We={kernelName:O.z,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),s={dy:t,y:n};return{x:()=>v.a.runKernelFunc(r,s,null,O.A)}}},Ve={kernelName:O.D,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=C(n.shape,r.shape);return{a:()=>{const e=t.div(r.toFloat()),a=k(n.shape,s);return a.length>0?e.sum(a).reshape(n.shape):e},b:()=>{let e=t.mul(n.toFloat());const a=k(r.shape,s);a.length>0&&(e=e.sum(a).reshape(r.shape));const i=r.square();return e.div(i.toFloat()).neg()}}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ue=Object(T.a)({sub_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(E.a)(t,"a","sub"),r=Object(E.a)(e,"b","sub");[n,r]=Object(A.makeTypesMatch)(n,r);const s={a:n,b:r};return v.a.runKernelFunc((t,e)=>{const s=t.subtract(n,r);return e([n,r]),s},s,null,O.qb)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qe=Object(T.a)({tile_:function(t,e){const n=Object(E.a)(t,"x","tile",null);j.assert(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const r=[n],s={x:n},a={reps:e};return v.a.runKernelFunc((t,r)=>{const s=t.tile(n,e);return r([n]),s},s,null,O.rb,a,r)}}),Ge={kernelName:O.F,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=e,u=null==o?Object(F.e)(1):o,l=k(a.shape,s.shape),c=[];if(1===a.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=Ue(s,a),d=X(t,u),p=Ut($(i,Object(F.e)(r))),f=X(X(X(p,p),p),Object(F.e)(-.5));return{x:()=>1===a.rank?W(X(X(t,qe(p.as4D(1,1,1,a.shape[0]),c)),u),s.shape):W(X(X(t,p),u),s.shape),mean:()=>{let t=X(X(p,Object(F.e)(-1)),d);return 1===a.rank&&(t=wt(t,l)),W(t,a.shape)},variance:()=>{let t=X(X(f,h),d);return 1===a.rank&&(t=wt(t,l)),W(t,a.shape)},scale:()=>{const e=X(h,p);let n=X(t,e);return 1===a.rank&&(n=wt(n,l)),W(n,a.shape)},offset:()=>{let e=t;return 1===a.rank&&(e=wt(e,l)),W(e,a.shape)}}}},He={kernelName:O.I,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(F.o)(n),b:()=>Object(F.o)(r)}}},Ke={kernelName:O.J,gradFunc:t=>({x:()=>t.toFloat()})};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xe=Object(T.a)({localResponseNormalizationBackprop_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r=5,s=1,a=1,i=.5){const o={x:t,y:e,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return v.a.runKernelFunc(o=>o.LRNGrad(n,t,e,r,s,a,i),o,null,O.M,u)}}),Ye={kernelName:O.L,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>Xe(r,s,t,a,i,o,u)}}},Je={kernelName:O.P,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,[a,i]=e,o=j.parseAxisParam(s,a.shape),u=ut(o,a.rank),l=ht(t,i,a,o,u);return{x:()=>{let t=l.x();return null!=u&&(t=_e(t)),t}}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ze=Object(T.a)({greaterEqual_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(E.a)(t,"a","greaterEqual"),r=Object(E.a)(e,"b","greaterEqual");[n,r]=Object(A.makeTypesMatch)(n,r),C(n.shape,r.shape);const s={a:n,b:r};return v.a.runKernelFunc((t,e)=>{const s=t.greaterEqual(n,r);return e([n,r]),s},s,null,O.I)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qe=Object(T.a)({less_:function(t,e){let n=Object(E.a)(t,"a","less"),r=Object(E.a)(e,"b","less");[n,r]=Object(A.makeTypesMatch)(n,r),C(n.shape,r.shape);const s={a:n,b:r};return v.a.runKernelFunc(t=>t.less(n,r),s,null,O.N)}}),tn={kernelName:O.V,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>X(t,B(Ze(n,r),"float32")),b:()=>X(t,B(Qe(n,r),"float32"))}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const en=Object(T.a)({maxPool3dBackprop_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,s,a=[1,1,1],i,o){const u=Object(E.a)(t,"dy","maxPool3dBackprop"),l=Object(E.a)(e,"input","maxPool3dBackprop"),c=Object(E.a)(n,"output","maxPool3dBackprop");let h=u,d=l,p=c,f=!1;4===l.rank&&(f=!0,h=W(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=W(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=W(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),j.assert(5===h.rank,()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+"."),j.assert(5===d.rank,()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+d.rank+"."),j.assert(5===p.rank,()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+p.rank+"."),j.assert(fe(s,a),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`),null!=o&&j.assert(j.isInt(i),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`);const m={dy:h,input:d,output:p},g={filterSize:r,strides:s,dilations:a,pad:i,dimRoundingMode:o},b=v.a.runKernelFunc(t=>{const e=ae(d.shape,r,s,a,i,o);return t.maxPool3dBackprop(h,d,p,e)},m,null,O.S,g);return f?W(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),nn={kernelName:O.R,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:i,dilations:o,pad:u,dimRoundingMode:l}=n,c=null==o?[1,1,1]:o;return{x:()=>en(t,r,s,a,i,c,u,l)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rn=Object(T.a)({maxPoolBackprop_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,s,a,i){const o=Object(E.a)(t,"dy","maxPoolBackprop"),u=Object(E.a)(e,"input","maxPoolBackprop"),l=Object(E.a)(n,"output","maxPoolBackprop");j.assert(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),j.assert(4===o.rank,()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+o.rank+"."),j.assert(4===u.rank,()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+u.rank+"."),null!=i&&j.assert(j.isInt(a),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const c={dy:o,input:u,output:l},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return v.a.runKernelFunc(t=>{const e=se(u.shape,r,s,1,a,i);return t.maxPoolBackprop(o,u,l,e)},c,null,O.T,h)}}),sn={kernelName:O.Q,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:i,pad:o}=n;return{x:()=>rn(t,r,s,a,i,o)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const an=Object(T.a)({greater_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(E.a)(t,"a","greater"),r=Object(E.a)(e,"b","greater");[n,r]=Object(A.makeTypesMatch)(n,r),C(n.shape,r.shape);const s={a:n,b:r};return v.a.runKernelFunc(t=>t.greater(n,r),s,null,O.H)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const on=Object(T.a)({lessEqual_:function(t,e){let n=Object(E.a)(t,"a","lessEqual"),r=Object(E.a)(e,"b","lessEqual");[n,r]=Object(A.makeTypesMatch)(n,r),C(n.shape,r.shape);const s={a:n,b:r};return v.a.runKernelFunc((t,e)=>{const s=t.lessEqual(n,r);return e([n,r]),s},s,null,O.O)}}),un={kernelName:O.W,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>X(t,B(on(n,r),"float32")),b:()=>X(t,B(an(n,r),"float32"))}}},ln={kernelName:O.X,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=C(n.shape,r.shape);return{a:()=>{const e=k(n.shape,s);return e.length>0?W(wt(t,e),n.shape):t},b:()=>{const e=X(t,Pt(Mt(K(n,r)))),a=k(r.shape,s);return a.length>0?W(wt(e,a),r.shape):e}}}},cn={kernelName:O.Y,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=C(n.shape,r.shape);return{a:()=>{const e=X(t,B(r,"float32")),a=k(n.shape,s);return a.length>0?W(wt(e,a),n.shape):e},b:()=>{const e=X(t,B(n,"float32")),a=k(r.shape,s);return a.length>0?W(wt(e,a),r.shape):e}}}},hn={kernelName:O.cb,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Object(F.n)(n.shape,"float32")}}},dn={kernelName:O.db,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,a=s.map(t=>t[0]);return{x:()=>t.slice(a,r.shape)}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pn(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=z(t,"int32"),s=z([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const a=r.indexToLoc(n[e]),i=e*t.length;s.values.set(a,i)}return s.toTensor()}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fn=Object(T.a)({logicalAnd_:function(t,e){const n=Object(E.a)(t,"a","logicalAnd","bool"),r=Object(E.a)(e,"b","logicalAnd","bool");return C(n.shape,r.shape),v.a.runKernelFunc(t=>t.logicalAnd(n,r),{a:n,b:r},null,"LogicalAnd")}}),mn=Object(T.a)({logicalNot_:function(t){const e=Object(E.a)(t,"x","logicalNot","bool");return v.a.runKernelFunc(t=>t.logicalNot(e),{$x:e})}}),gn=Object(T.a)({logicalOr_:function(t,e){const n=Object(E.a)(t,"a","logicalOr","bool"),r=Object(E.a)(e,"b","logicalOr","bool");return C(n.shape,r.shape),v.a.runKernelFunc(t=>t.logicalOr(n,r),{$a:n,$b:r})}}),bn=Object(T.a)({logicalXor_:function(t,e){const n=Object(E.a)(t,"a","logicalXor","bool"),r=Object(E.a)(e,"b","logicalXor","bool");return C(n.shape,r.shape),gn(t,e).logicalAnd(fn(t,e).logicalNot())}}),yn=Object(T.a)({where_:function(t,e,n){const r=Object(E.a)(e,"a","where"),s=Object(E.a)(n,"b","where"),a=Object(E.a)(t,"condition","where","bool");Object(j.assertShapesMatch)(r.shape,s.shape,"Error in where: "),1===a.rank?Object(j.assert)(a.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."):Object(j.assertShapesMatch)(a.shape,s.shape,"Error in where: ");const i={condition:a,t:r,e:s};return v.a.runKernelFunc((t,e)=>{const n=t.select(a,r,s);return e([a]),n},i,(t,e)=>{const[n]=e;return{condition:()=>Object(F.o)(n).toFloat(),t:()=>t.mul(n.cast(t.dtype)),e:()=>t.mul(n.logicalNot().cast(t.dtype))}},O.kb)}}),xn=async function(t){const e=Object(E.a)(t,"condition","whereAsync","bool"),n=await e.data(),r=pn(e.shape,n);return t!==e&&e.dispose(),r};const wn=Object(T.a)({pow_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(E.a)(t,"base","pow"),r=Object(E.a)(e,"exp","pow");[n,r]=Object(A.makeTypesMatch)(n,r);const s={a:n,b:r};return v.a.runKernelFunc((t,e)=>{const s=t.pow(n,r);return e([n,r,s]),s},s,null,O.fb)}}),vn={kernelName:O.fb,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,a=n,i=r,o=C(a.shape,i.shape);return{a:()=>{const e=B(i,"float32");let n=X(t,X(e,wn(a,Ue(e,Object(F.e)(1)))));const r=k(a.shape,o);return r.length>0&&(n=wt(n,r)),W(n,a.shape)},b:()=>{const e=an(a,0),n=yn(e,zt(a),Object(F.o)(a));let r=X(t,X(s,n));const u=k(i.shape,o);return u.length>0&&(r=wt(r,u)),W(r,i.shape)}}}},On={kernelName:O.gb,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=an(n,0);return{x:()=>yn(s,t,X(t,r)),alpha:()=>{let e=yn(s,Object(F.o)(t),X(t,n));const a=k(r.shape,t.shape);return a.length>0&&(e=wt(e,a)),W(e,r.shape)}}}},Sn={kernelName:O.jb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=X(on(n,6),te(n));return{x:()=>X(t,B(r,"float32"))}}},kn={kernelName:O.ib,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>X(t,B(te(n),"float32"))}}},Cn=1.7580993408473768,Nn=1.0507009873554805,In={kernelName:O.lb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=an(n,Object(F.e)(0)),r=Object(F.e)(Cn),s=Object(F.e)(Nn),a=X(t,s),i=X(X(t,r),_t(B(n,"float32")));return yn(e,a,i)}}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const An=Object(T.a)({batchToSpaceND_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const r=Object(E.a)(t,"x","batchToSpaceND"),s=e.reduce((t,e)=>t*e);j.assert(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),j.assert(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),j.assert(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const a={x:r},i={blockShape:e,crops:n};return v.a.runKernelFunc(t=>t.batchToSpaceND(r,e,n),a,null,O.i,i)}}),En={kernelName:O.mb,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>An(t,r,s)}}},Tn={kernelName:O.nb,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>M(t,r)}}},$n={kernelName:O.ob,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>X(t,X(n.toFloat(),2))}}},Rn={kernelName:O.pb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Object(F.e)(2);return{a:()=>X(t,X(s,Ue(n,r))),b:()=>X(t,X(s,Ue(r,n)))}}},jn={kernelName:O.qb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=C(n.shape,r.shape);return{a:()=>{let e=t;const r=k(n.shape,s);return r.length>0&&(e=wt(e,r)),W(e,n.shape)},b:()=>{let e=t;const n=k(r.shape,s);return n.length>0&&(e=wt(e,n)),W(Pt(e),r.shape)}}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dn=Object(T.a)({pad_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n=0){const r=Object(E.a)(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},a={x:r};return v.a.runKernelFunc((t,s)=>(s([r]),t.pad(r,e,n)),a,null,O.db,s)}});
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _n(t,e,n){j.assert(t.rank===e.length,()=>`Error in slice${t.rank}D: Length of begin ${e} must match the rank of the array (${t.rank}).`),j.assert(t.rank===n.length,()=>`Error in slice${t.rank}D: Length of size ${n} must match the rank of the array (${t.rank}).`);for(let r=0;r<t.rank;++r)j.assert(e[r]+n[r]<=t.shape[r],()=>`Error in slice${t.rank}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`)}function Fn(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Mn(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function zn(t,e,n){const r=[...t];for(let t=0;t<n;t++)0===t?r[e]=1:(r.splice(e,0,1),r.pop());return r}function Ln(t,e,n){const r=[...t];for(let t=0;t<n;t++)0===t?r[e]=0:(r.splice(e,0,0),r.pop());return r}function Bn(t,e,n,r){const s=[...t];for(let t=0;t<n;t++)0===t?s[e]=Number.MAX_SAFE_INTEGER:(s.splice(e,0,Number.MAX_SAFE_INTEGER),s.pop());for(let t=0;t<s.length;t++)s[t]=j.clamp(0,s[t],r[t]);return s}function Pn(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Wn(t,e,n,r,s,a){let i=e[s];const o=n[s]||1;(t&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=j.clamp(0,i,u-1),i}function Vn(t,e,n,r,s,a){let i=e[s];const o=n[s]||1;(t&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=o>0?j.clamp(0,i,u):j.clamp(-1,i,u-1),i}function Un(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function qn(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gn=Object(T.a)({slice_:function(t,e,n){const r=Object(E.a)(t,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");let s,a;s="number"==typeof e?[e,...new Array(r.rank-1).fill(0)]:e.length<r.rank?e.concat(new Array(r.rank-e.length).fill(0)):e.slice(),s.forEach(t=>{j.assert(-1!==t,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(r.rank).fill(-1):"number"==typeof n?[n,...new Array(r.rank-1).fill(-1)]:n.length<r.rank?n.concat(new Array(r.rank-n.length).fill(-1)):n,a=a.map((t,e)=>t>=0?t:(j.assert(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${e}.`),r.shape[e]-s[e])),_n(r,s,a);const i=r.shape,o={begin:s,size:a};return v.a.runKernelFunc(t=>t.slice(r,s,a),{x:r},t=>{const e=[];for(let n=0;n<t.rank;n++)e.push([s[n],i[n]-s[n]-a[n]]);return{x:()=>Dn(t,e)}},"Slice",o)}}),Hn=Object(T.a)({slice1d_:function(t,e,n){const r=Object(E.a)(t,"x","slice1d");return j.assert(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Gn(r,[e],[n])}}),Kn=Object(T.a)({slice2d_:function(t,e,n){const r=Object(E.a)(t,"x","slice2d");return j.assert(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Gn(r,e,n)}}),Xn=Object(T.a)({slice3d_:function(t,e,n){const r=Object(E.a)(t,"x","slice3d");return j.assert(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Gn(r,e,n)}}),Yn=Object(T.a)({slice4d_:function(t,e,n){const r=Object(E.a)(t,"x","slice4d");return j.assert(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Gn(r,e,n)}}),Jn={kernelName:O.rb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=Object(F.o)(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=$(e,Gn(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)e=$(e,Gn(t,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)e=$(e,Gn(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)e=$(e,Gn(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},Zn={kernelName:O.sb,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,a=lt(s);return{x:()=>_e(t,a)}}};var Qn=n(15);
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tr=[N,I,re,xe,be,ve,Se,ke,Ne,Ee,$e,De,Me,Be,Pe,We,Ve,Ge,He,Ke,Ye,hn,dn,Tn,Je,En,Je,tn,sn,nn,un,ln,cn,hn,dn,vn,On,kn,Sn,In,En,Tn,$n,Rn,Jn,Zn,jn];for(const t of tr)Object(Qn.d)(t);var er=n(9);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nr{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got "+e);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}Object(er.c)().get("IS_BROWSER")&&Object(er.c)().setPlatform("browser",new nr);n(55);var rr=n(11);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class sr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==sr.instance&&(sr.instance=new sr),sr.instance}static registerSaveRouter(t){sr.getInstance().saveRouters.push(t)}static registerLoadRouter(t){sr.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return sr.getHandlers(t,"save")}static getLoadHandlers(t,e){return sr.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?sr.getInstance().loadRouters:sr.getInstance().saveRouters).forEach(e=>{const s=e(t,n);null!==s&&r.push(s)}),r}}const ar=t=>sr.registerSaveRouter(t),ir=t=>sr.registerLoadRouter(t),or=t=>sr.getSaveHandlers(t),ur=(t,e)=>sr.getLoadHandlers(t,e)
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */;class lr{constructor(){this.managers={}}static getInstance(){return null==lr.instance&&(lr.instance=new lr),lr.instance}static registerManager(t,e){Object(j.assert)(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Object(j.assert)(t.length>0,()=>"scheme must not be an empty string.");const n=lr.getInstance();Object(j.assert)(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function cr(t){if(-1===t.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+lr.getSchemes().join(","));return{scheme:t.split("://")[0],path:t.split("://")[1]}}async function hr(t,e,n=!1){Object(j.assert)(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=sr.getLoadHandlers(t);Object(j.assert)(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),Object(j.assert)(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const s=r[0],a=sr.getSaveHandlers(e);Object(j.assert)(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),Object(j.assert)(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const i=a[0],o=cr(t).scheme,u=cr(t).path,l=o===cr(t).scheme,c=await s.load();n&&l&&await lr.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await lr.getManager(o).removeModel(u),h.modelArtifactsInfo}async function dr(){const t=lr.getSchemes(),e={};for(const n of t){const t=await lr.getManager(n).listModels();for(const r in t){e[n+"://"+r]=t[r]}}return e}async function pr(t){const e=cr(t);return lr.getManager(e.scheme).removeModel(e.path)}async function fr(t,e){return hr(t,e,!1)}async function mr(t,e){return hr(t,e,!0)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gr(){if(!Object(er.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function br(t){const e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}class yr{constructor(t){if(this.indexedDB=gr(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>br(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction("models_store","readonly"),r=e.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=Object(rr.g)(e),a=s.transaction("model_info_store","readwrite");let i=a.objectStore("model_info_store");const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=s.transaction("models_store","readwrite");const o=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{i=a.objectStore("model_info_store");const e=i.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(o.error)),e.onerror=t=>(s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)})}}yr.URL_SCHEME="indexeddb://";const xr=t=>{return Object(er.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(yr.URL_SCHEME)?(e=t.slice(yr.URL_SCHEME.length),new yr(e)):null;var e};sr.registerSaveRouter(xr),sr.registerLoadRouter(xr);class wr{constructor(){this.indexedDB=gr()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>br(n),n.onsuccess=()=>{const r=n.result,s=r.transaction("model_info_store","readonly"),a=s.objectStore("model_info_store").getAll();a.onsuccess=()=>{const e={};for(const t of a.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},a.onerror=t=>(r.close(),e(a.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(t){var e;return t=(e=t).startsWith(yr.URL_SCHEME)?e.slice(yr.URL_SCHEME.length):e,new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>br(r),r.onsuccess=()=>{const s=r.result,a=s.transaction("model_info_store","readwrite"),i=a.objectStore("model_info_store"),o=i.get(t);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=i.delete(t),a=()=>{u=s.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=a,r.onerror=t=>(a(),s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)})}}if(Object(er.c)().getBool("IS_BROWSER"))try{lr.registerManager(yr.URL_SCHEME,new wr)}catch(t){}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vr="tensorflowjs_models",Or="info",Sr="model_topology",kr="weight_specs",Cr="weight_data",Nr="model_metadata";function Ir(t){return{info:[vr,t,Or].join("/"),topology:[vr,t,Sr].join("/"),weightSpecs:[vr,t,kr].join("/"),weightData:[vr,t,Cr].join("/"),modelMetadata:[vr,t,Nr].join("/")}}function Ar(t){const e=t.split("/");if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join("/")}class Er{constructor(t){if(!Object(er.c)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Ir(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Object(rr.g)(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(rr.a)(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=Object(rr.b)(a),e}}Er.URL_SCHEME="localstorage://";const Tr=t=>{return Object(er.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Er.URL_SCHEME)?(e=t.slice(Er.URL_SCHEME.length),new Er(e)):null;var e};sr.registerSaveRouter(Tr),sr.registerLoadRouter(Tr);class $r{constructor(){Object(j.assert)(Object(er.c)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(j.assert)("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=vr+"/",n="/"+Or;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(e)&&s.endsWith(n)){t[Ar(s)]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){var e;const n=Ir(t=(e=t).startsWith(Er.URL_SCHEME)?e.slice(Er.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}if(Object(er.c)().getBool("IS_BROWSER"))try{lr.registerManager(Er.URL_SCHEME,new $r)}catch(t){}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rr(t){return new Promise(t=>setTimeout(t)).then(t)}class jr{constructor(t){if(!Object(er.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(jr.URL_SCHEME)&&(t=t.slice(jr.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await Rr(()=>a.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Rr(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(rr.g)(t)}}}}jr.URL_SCHEME="downloads://";class Dr{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+t);this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise((n,r)=>{const s=new FileReader;s.onload=s=>{const a=JSON.parse(s.target.result),i=a.modelTopology;if(null==i)return void r(new Error("modelTopology field is missing from file "+t.name));0===e.length&&n({modelTopology:i});const o=a.weightsManifest;if(null==o)return void r(new Error("weightManifest field is missing from file "+t.name));let u;try{u=this.checkManifestAndWeightFiles(o,e)}catch(t){return void r(t)}const l=[],c=[],h=[];o.forEach(t=>{t.paths.forEach(t=>{c.push(t),h.push(null)}),l.push(...t.weights)}),o.forEach(t=>{t.paths.forEach(t=>{const e=new FileReader;e.onload=e=>{const r=e.target.result,s=c.indexOf(t);h[s]=r,-1===h.indexOf(null)&&n({modelTopology:i,weightSpecs:l,weightData:Object(rr.d)(h),format:a.format,generatedBy:a.generatedBy,convertedBy:a.convertedBy,userDefinedMetadata:a.userDefinedMetadata})},e.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),e.readAsArrayBuffer(u[t])})})},s.onerror=e=>r(`Failed to read model topology and weights manifest JSON from file '${t.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(t)})}checkManifestAndWeightFiles(t,e){const n=[],r=e.map(t=>Object(rr.c)(t.name)),s={};for(const a of t)a.paths.forEach(t=>{const a=Object(rr.c)(t);if(-1!==n.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(n.push(a),-1===r.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);s[t]=e[r.indexOf(a)]});if(n.length!==e.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${e.length}).`);return s}}function _r(t){return new Dr(t)}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fr(t,e,n,r){!function(t){Object(j.assert)(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}(t),function(t,e){Object(j.assert)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+t),Object(j.assert)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+e),Object(j.assert)(e>=t,()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction `+e)}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map(a=>(a.then(a=>{const i=n+ ++s/t.length*(r-n);return e(i),a}),a)))}sr.registerSaveRouter(t=>Object(er.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(jr.URL_SCHEME)?function(t="model"){return new jr(t)}(t.slice(jr.URL_SCHEME.length)):null);var Mr=n(28);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function zr(t,e){null==e&&(e={});const n=null==e.fetchFunc?Object(er.c)().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),s=(null==e.onProgress?await Promise.all(r):await Fr(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?await Promise.all(s):await Fr(s,e.onProgress,.5,1)}async function Lr(t,e="",n,r){return Br(t=>zr(t,{requestInit:r}))(t,e,n)}function Br(t){return async(e,n="",r)=>{const s=e.map(()=>!1),a={},i=null!=r?r.map(()=>!1):[],o=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const u="quantization"in t?t.quantization.dtype:t.dtype,l=Mr.a[u]*j.sizeFromShape(t.shape),c=()=>{s[e]=!0,null==a[e]&&(a[e]=[]),a[e].push({manifestEntry:t,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((e,n)=>{e===t.name&&(c(),i[n]=!0)}):c(),o.push(t.name),n+=l})}),!i.every(t=>t)){const t=r.filter((t,e)=>!i[e]);throw new Error("Could not find weights in manifest with names: "+t.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".")}const u=s.reduce((t,e,n)=>(e&&t.push(n),t),[]),l=[];u.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;l.push(e)})});const c=await t(l),h={};let d=0;return u.forEach(t=>{const n=e[t].paths.length;let r=0;for(let t=0;t<n;t++)r+=c[d+t].byteLength;const s=new ArrayBuffer(r),i=new Uint8Array(s);let o=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[d+t]);i.set(e,o),o+=e.byteLength}a[t].forEach(t=>{const e=s.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=Object(rr.e)(e,[t.manifestEntry]);for(const t in n)h[t]=n[t]}),d+=n}),h}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pr{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,null!=e.fetchFunc?(Object(j.assert)("function"==typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=Object(er.c)().platform.fetch,Object(j.assert)(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&Object(j.assert)(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:Object(rr.g)(t),responses:[s]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+s.status+".")}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code `+t.status+". Please verify this URL points to the model JSON of the model to load.");let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,a=e.convertedBy,i=e.format,o=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const t=await this.loadWeights(r);[u,l]=t}return{modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:o,generatedBy:s,convertedBy:a,format:i}}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),s=n>e?t.substring(n):"";return[r+"/",s]}(e),s=this.weightPathPrefix||n,a=[];for(const e of t)a.push(...e.weights);const i=[];t.forEach(t=>{t.paths.forEach(t=>{i.push(s+t+r)})});const o=await zr(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Object(rr.d)(o)]}}function Wr(t){return null!=t.match(Pr.URL_SCHEME_REGEX)}Pr.URL_SCHEME_REGEX=/^https?:\/\//;const Vr=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>Wr(t)):Wr(t),n)return Ur(t,e)}return null};function Ur(t,e){return new Pr(t,e)}function qr(t,e){return Ur(t,e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */sr.registerSaveRouter(Vr),sr.registerLoadRouter(Vr);class Gr{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class Hr{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function Kr(t,e,n,r){if(1===arguments.length){return null!=t.modelTopology||null!=t.weightSpecs?new Gr(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Gr({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Gr({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function Xr(t){return new Hr(t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yr=Object(T.a)({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);let s=Object(E.a)(t,"indices","oneHot","int32");const a=[...s.shape,e];s=s.flatten();const i={indices:s},o={depth:e,onValue:n,offValue:r};return v.a.runKernelFunc((t,i)=>(i([s]),W(t.oneHot(s,e,n,r),a)),i,null,O.cb,o)}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jr=Object(T.a)({confusionMatrix_:function(t,e,n){const r=Object(E.a)(t,"labels","confusionMatrix"),s=Object(E.a)(e,"predictions","confusionMatrix");j.assert(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),j.assert(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),j.assert(1===s.rank,()=>"Expected the rank of predictions to be 1, but got "+s.rank),j.assert(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),j.assert(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const a=Yr(r.asType("int32"),n),i=Yr(s.asType("int32"),n);return a.transpose().matMul(i).asType("int32")}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Zr;async function Qr(t,e){let n=Object(E.a)(t,"img","toPixels");if(!(t instanceof R.a)){const t=n;n=t.toInt(),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+a);const i=await n.data(),o=n.min(),u=n.max(),l=await Promise.all([o.data(),u.data()]),c=l[0],h=l[1],d=c[0],p=h[0];if(o.dispose(),u.dispose(),"float32"===n.dtype){if(d<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but got range [${d} - ${p}].`)}else{if("int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);if(d<0||p>255)throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but got range [${d} - ${p}].`)}const f="float32"===n.dtype?255:1,m=new Uint8ClampedArray(s*r*4);for(let t=0;t<r*s;++t){let e,n,r,s;1===a?(e=i[t]*f,n=i[t]*f,r=i[t]*f,s=255):3===a?(e=i[3*t]*f,n=i[3*t+1]*f,r=i[3*t+2]*f,s=255):4===a&&(e=i[4*t]*f,n=i[4*t+1]*f,r=i[4*t+2]*f,s=i[4*t+3]*f);const o=4*t;m[o+0]=Math.round(e),m[o+1]=Math.round(n),m[o+2]=Math.round(r),m[o+3]=Math.round(s)}if(null!=e){e.width=s,e.height=r;const t=e.getContext("2d"),n=new ImageData(m,s,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),m}const ts=Object(T.a)({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)a=!0;else{if(null==t.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+t.constructor.name);i=!0}if(s){const e=2;if(s&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(Qn.b)(O.E,v.a.backendName)){const n={pixels:t},r={numChannels:e};return v.a.runKernel(O.E,n,r)}const[o,u]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let l,c;if(i?l=t.getContext("2d").getImageData(0,0,o,u).data:r||n?l=t.data:(a||s)&&(null==Zr&&(Zr=document.createElement("canvas").getContext("2d")),Zr.canvas.width=o,Zr.canvas.height=u,Zr.drawImage(t,0,0,o,u),l=Zr.getImageData(0,0,o,u).data),4===e)c=new Int32Array(l);else{const t=o*u;c=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)c[n*e+t]=l[4*n+t]}const h=[u,o,e];return Object(F.i)(c,h,"int32")}});function es(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let s=1;for(let t=0;t<n.length-1;++t)s*=n[t];const a=t.shape,i=n.slice();i.pop();let o=1;for(let e=r;e<t.rank;++e)o*=a[e],i.push(a[e]);const u=[...Object(j.computeStrides)(t.shape).map(t=>t/o),1].slice(0,r);return[i,s,o,u]}function ns(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,a="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${e.shape}, shape: ${t}`+`, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(a+" Output shape length < "+(r+(n.rank-s)));if(n.rank!==s+t.length-r)throw new Error(a+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(a+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(a+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function rs(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}ns(n,e,t)}function ss(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,a=n.length;let i=1;for(let t=s;t<a;++t)i*=n[t];const o=s<1?1:s;return{sliceRank:s,numUpdates:Object(j.sizeFromShape)(e.shape)/o,sliceSize:i,strides:[...Object(j.computeStrides)(n.slice(0,s)),1],outputSize:Object(j.sizeFromShape)(n)}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class as{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class is{constructor(){this.classNameMap={}}static getMap(){return null==is.instance&&(is.instance=new is),is.instance}static register(t){is.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function os(t){Object(j.assert)(null!=t.className,()=>"Class being registered does not have the static className property defined."),Object(j.assert)("string"==typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),Object(j.assert)(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),is.register(t)}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const us=.1;function ls(t,e,n){return null==n&&(n=cs()),hs(t,e,(t,e)=>ms(t,e,n))}function cs(){return 32===v.a.backend.floatPrecision()?.001:us}function hs(t,e,n){let r=!0;if((Object(j.isTypedArray)(t)||Object(j.isTypedArray)(e))&&(r=!1),Object(j.isTypedArray)(t)&&Object(j.isTypedArray)(e)&&(r=!0),r){const n=t.constructor.name,r=e.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(t)&&Array.isArray(e)){const n=Object(E.c)(t),r=Object(E.c)(e);if(!Object(j.arraysEqual)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=Object(j.isTypedArray)(t)?t:Object(j.flatten)(t),a=Object(j.isTypedArray)(e)?e:Object(j.flatten)(e);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let t=0;t<a.length;++t){const e=s[t],r=a[t];if(!n(e,r))throw new Error(`Arrays differ: actual[${t}] = ${e}, expected[${t}] = ${r}.\nActual:   ${s}.\nExpected: ${a}.`)}}function ds(t,e){t().then(()=>e.fail(),()=>e())}function ps(t,e){const n="string"==typeof e||"number"==typeof e||"boolean"==typeof e?[e]:e;return Object(j.isString)(t)||Object(j.isString)(t[0])||Object(j.isString)(e)||Object(j.isString)(e[0])?hs(t,n,(t,e)=>t==e):hs(t,e,(t,e)=>ms(t,e,0))}function fs(t,e,n){if(null==n&&(n=cs()),!ms(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`)}function ms(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function gs(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(`Value out of range:${t[r]} low: ${e}, high: ${n}`)}function bs(t,e){expect(new Float32Array(t)).toEqual(new Float32Array(e))}
/** @license See the LICENSE file. */const ys="2.0.1";
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xs(){Object(er.c)().set("PROD",!0)}function ws(){Object(er.c)().set("DEBUG",!0)}function vs(){Object(er.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Os(t){Object(er.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Ss(){v.a.disposeVariables()}function ks(){return v.a}function Cs(){return v.a.memory()}function Ns(t){return v.a.profile(t)}function Is(t,e){return v.a.tidy(t,e)}function As(t){Object(A.getTensorsInContainer)(t).forEach(t=>t.dispose())}function Es(t){return v.a.keep(t)}function Ts(t){return v.a.time(t)}function $s(t){return v.a.setBackend(t)}function Rs(){return v.a.ready()}function js(){return v.a.backendName}function Ds(t){v.a.removeBackend(t)}function _s(t){return v.a.findBackend(t)}function Fs(t){return v.a.findBackendFactory(t)}function Ms(t,e,n=1){return v.a.registerBackend(t,e,n)}function zs(){return v.a.backend}function Ls(t,e){Object(er.c)().setPlatform(t,e)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(R.d)(Os);const Bs=Object(T.a)({addN_:function(t){j.assert(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),j.assert(t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+t.length);const e=t.map((t,e)=>Object(E.a)(t,"tensors"+e,"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!j.arraysEqual(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return v.a.runKernelFunc((t,n)=>{const r=t.addN(e);return n(e),r},r,null,O.b)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ps=Object(T.a)({atan2_:function(t,e){let n=Object(E.a)(t,"a","atan2"),r=Object(E.a)(e,"b","atan2");[n,r]=Object(A.makeTypesMatch)(n,r);const s={a:n,b:r};return v.a.runKernelFunc((t,e)=>{const s=t.atan2(n,r);return e([n,r]),s},s,null,O.c)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ws=Object(T.a)({avgPool_:function(t,e,n,r,s){const a=Object(E.a)(t,"x","avgPool","float32");j.assert(fe(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=a,o=!1;3===a.rank&&(o=!0,i=W(a,[1,a.shape[0],a.shape[1],a.shape[2]])),j.assert(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),null!=s&&j.assert(j.isInt(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const u={x:i},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let c=v.a.runKernelFunc((t,a)=>{const o=se(i.shape,e,n,1,r,s);return a([i]),1===o.filterWidth&&1===o.filterHeight&&j.arraysEqual(o.inShape,o.outShape)?i.clone():t.avgPool(i,o)},u,null,O.d,l);return c=B(c,a.dtype),o?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vs=Object(T.a)({avgPool3d_:function(t,e,n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:Os("dilations is deprecated, this field will be gone in v3.0.0.");const o=Object(E.a)(t,"x","avgPool3d","float32");let u=o,l=!1;4===o.rank&&(l=!0,u=W(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),j.assert(5===u.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`),j.assert("NDHWC"===a,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),j.assert(fe(n,i),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),null!=s&&j.assert(j.isInt(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const c={x:u},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i};let d=v.a.runKernelFunc((t,o)=>{null==i&&(i=[1,1,1]);const l=ae(u.shape,e,n,i,r,s,a);return o([u]),t.avgPool3d(u,l)},c,null,O.e,h);return d=B(d,u.dtype),l?d.as4D(d.shape[1],d.shape[2],d.shape[3],d.shape[4]):d}});function Us(t){return null==t?null:0===t.rank?t.as1D():1===t.rank?t:2===t.rank?t.as4D(1,1,t.shape[0],t.shape[1]):3===t.rank?t.as4D(1,t.shape[0],t.shape[1],t.shape[2]):t}const qs=Object(T.a)({batchNorm_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,s,a){null==a&&(a=.001);const i=Object(E.a)(t,"x","batchNorm"),o=Object(E.a)(e,"mean","batchNorm"),u=Object(E.a)(n,"variance","batchNorm");let l,c;null!=s&&(l=Object(E.a)(s,"scale","batchNorm")),null!=r&&(c=Object(E.a)(r,"offset","batchNorm")),j.assert(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),j.assert(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),j.assert(null==l||o.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h=function(t){let e;return e=0===t.rank||1===t.rank?t.as4D(1,1,1,t.size):2===t.rank?t.as4D(1,1,t.shape[0],t.shape[1]):3===t.rank?t.as4D(1,t.shape[0],t.shape[1],t.shape[2]):t,e}(i),d={x:h,scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:a},f=v.a.runKernelFunc((t,e)=>(e([h,o,u,l]),t.batchNorm(h,Us(o),Us(u),Us(c),Us(l),a)),d,null,O.F,p);return W(f,i.shape)}});const Gs=Object(T.a)({batchNorm2d_:function(t,e,n,r,s,a){const i=Object(E.a)(t,"x","batchNorm"),o=Object(E.a)(e,"mean","batchNorm"),u=Object(E.a)(n,"variance","batchNorm");let l,c;return null!=s&&(l=Object(E.a)(s,"scale","batchNorm")),null!=r&&(c=Object(E.a)(r,"offset","batchNorm")),j.assert(2===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),j.assert(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),j.assert(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&j.assert(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=c&&j.assert(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),qs(i,o,u,c,l,a)}});const Hs=Object(T.a)({batchNorm3d_:function(t,e,n,r,s,a){const i=Object(E.a)(t,"x","batchNorm"),o=Object(E.a)(e,"mean","batchNorm"),u=Object(E.a)(n,"variance","batchNorm");let l,c;return null!=s&&(l=Object(E.a)(s,"scale","batchNorm")),null!=r&&(c=Object(E.a)(r,"offset","batchNorm")),j.assert(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),j.assert(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),j.assert(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&j.assert(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=c&&j.assert(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),qs(i,o,u,c,l,a)}});const Ks=Object(T.a)({batchNorm4d_:function(t,e,n,r,s,a){const i=Object(E.a)(t,"x","batchNorm"),o=Object(E.a)(e,"mean","batchNorm"),u=Object(E.a)(n,"variance","batchNorm");let l,c;return null!=s&&(l=Object(E.a)(s,"scale","batchNorm")),null!=r&&(c=Object(E.a)(r,"offset","batchNorm")),j.assert(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),j.assert(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),j.assert(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&j.assert(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=c&&j.assert(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),qs(i,o,u,c,l,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xs=Object(T.a)({clone_:function(t){const e=Object(E.a)(t,"x","clone",null);return v.a.runKernelFunc(()=>v.a.makeTensorFromDataId(e.dataId,e.shape,e.dtype),{x:e},null,O.J)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ys=Object(T.a)({broadcastTo_:function(t,e){let n=Object(E.a)(t,"broadcastTo","x");const r=n.shape;if(e.some(t=>!(t>0)||t%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=W(n,t)}const s=n.shape,a=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])a[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===a.map((t,e)=>t>1?e:-1).filter(t=>t>=0).length)return Xs(n);const i={x:n},o={shape:e,inputShape:s};return v.a.runKernelFunc(t=>t.tile(n,a),i,null,O.j,o)}});var Js=n(16);const Zs=Object(T.a)({concat1d_:function(t){return M(t,0)}});const Qs=Object(T.a)({concat2d_:function(t,e){return M(t,e)}});const ta=Object(T.a)({concat3d_:function(t,e){return M(t,e)}});const ea=Object(T.a)({concat4d_:function(t,e){return M(t,e)}});const na=Object(T.a)({conv1d_:function(t,e,n,r,s="NWC",a=1,i){const o=Object(E.a)(t,"x","conv1d"),u=Object(E.a)(e,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=W(o,[1,o.shape[0],o.shape[1]])),j.assert(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),j.assert(3===u.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."),null!=i&&j.assert(j.isInt(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),j.assert(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),j.assert(fe(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),j.assert("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=W(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=W(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=Te(d,h,[1,n],r,"NHWC",[1,a],i);return W(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const ra=Object(T.a)({conv2dTranspose_:function(t,e,n,r,s,a){const i=Object(E.a)(t,"x","conv2dTranspose"),o=Object(E.a)(e,"filter","conv2dTranspose");return Ae(n,i,o,r,s,"NHWC",a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sa=Object(T.a)({conv3d_:function(t,e,n,r,s="NDHWC",a=[1,1,1]){const i=Object(E.a)(t,"x","conv3d"),o=Object(E.a)(e,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=W(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),j.assert(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),j.assert(5===o.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+o.rank+"."),j.assert(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),j.assert(fe(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),j.assert("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=v.a.runKernelFunc((t,e)=>{const s=oe(u.shape,o.shape,n,a,r),i=t.conv3d(u,o,s);return e([u,o]),i},c,null,O.p,h);return l?d.as4D(d.shape[1],d.shape[2],d.shape[3],d.shape[4]):d}});const aa=Object(T.a)({conv3dTranspose_:function(t,e,n,r,s){const a=Object(E.a)(t,"x","conv3dTranspose"),i=Object(E.a)(e,"filter","conv3dTranspose");return je(n,a,i,r,s)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ia=Object(T.a)({depthToSpace_:function(t,e,n="NHWC"){const r=Object(E.a)(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];j.assert(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`),j.assert(a*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${e} for depthToSpace with input shape\n        ${r.shape}`),j.assert(i%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${r.shape}`);const o={x:r},u={blockSize:e,dataFormat:n};return v.a.runKernelFunc(t=>t.depthToSpace(r,e,n),o,null,O.t,u)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oa=Object(T.a)({depthwiseConv2d_:function(t,e,n,r,s="NHWC",a=[1,1],i){const o=Object(E.a)(t,"x","depthwiseConv2d"),u=Object(E.a)(e,"filter","depthwiseConv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=W(o,[1,o.shape[0],o.shape[1],o.shape[2]])),j.assert(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),j.assert(4===u.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."),j.assert(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=i&&j.assert(j.isInt(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const h={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},p=v.a.runKernelFunc((t,e)=>{null==a&&(a=[1,1]),j.assert(fe(n,a),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const s=ie(l.shape,u.shape,n,a,r,i,!0),o=t.depthwiseConv2D(l,u,s);return e([l,u]),o},h,null,O.u,d);return c?W(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ua=Object(T.a)({diag_:function(t){const e=Object(E.a)(t,"x","diag").flatten(),n={x:e};return v.a.runKernelFunc(n=>{const r=n.diag(e),s=[...t.shape,...t.shape];return W(r,s)},n,null,O.x)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const la=Object(T.a)({divNoNan_:function(t,e){let n=Object(E.a)(t,"a","div"),r=Object(E.a)(e,"b","div");[n,r]=Object(A.makeTypesMatch)(n,r);const s=K(n,r),a=Object(F.o)(s),i=r.equal(a);return yn(i,a,s)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ca=Object(T.a)({dot_:function(t,e){const n=Object(E.a)(t,"t1","dot"),r=Object(E.a)(e,"t2","dot");j.assert(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(j.assert(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),1===n.rank&&1===r.rank){const t=W(n,[1,-1]),e=W(r,[-1,1]),s=we(t,e);return W(s,[])}if(1===n.rank&&2===r.rank){const t=W(n,[1,-1]),e=W(r,[r.shape[0],r.shape[1]]),s=we(t,e);return W(s,[s.size])}if(2===n.rank&&1===r.rank){const t=W(r,[-1,1]),e=we(n,t);return W(e,[e.size])}{const t=W(r,[r.shape[0],r.shape[1]]);return we(n,t)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ha=Object(T.a)({elu_:function(t){const e=Object(E.a)(t,"x","elu"),n={x:e};return v.a.runKernelFunc((t,n)=>{const r=t.elu(e);return n([r]),r},n,null,O.z)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const da=Object(T.a)({equal_:function(t,e){let n=Object(E.a)(t,"a","equal"),r=Object(E.a)(e,"b","equal");[n,r]=Object(A.makeTypesMatch)(n,r),C(n.shape,r.shape);const s={a:n,b:r};return v.a.runKernelFunc(t=>t.equal(n,r),s,null,O.B)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pa=Object(T.a)({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=z([t,e],r),a=t<=e?t:e;for(let t=0;t<a;++t)s.set(1,t,t);const i=s.toTensor().as2D(t,e);if(null==n)return i;if(1===n.length)return qe(P(i,0),[n[0],1,1]);if(2===n.length)return qe(P(P(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return qe(P(P(P(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fa(t,e,n){const r={shape:t,value:e,dtype:n};return v.a.runKernelFunc(r=>r.fill(t,e,n),{},null,O.C,r)}var ma=n(23);
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ga=Object(T.a)({maximum_:function(t,e){let n=Object(E.a)(t,"a","maximum"),r=Object(E.a)(e,"b","maximum");[n,r]=Object(A.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=B(n,"int32"),r=B(r,"int32")),C(n.shape,r.shape);const s={a:n,b:r};return v.a.runKernelFunc((t,e)=>{const s=t.maximum(n,r);return e([n,r]),s},s,null,O.V)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ba=Object(T.a)({leakyRelu_:function(t,e=.2){const n=Object(E.a)(t,"x","leakyRelu");return ga(X(Object(F.e)(e),n),n)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ya=Object(T.a)({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const a=Object(E.a)(t,"x","localResponseNormalization");j.assert(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),j.assert(j.isInt(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=a,o=!1;3===a.rank&&(o=!0,i=W(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:i},l={depthRadius:e,bias:n,alpha:r,beta:s},c=v.a.runKernelFunc((t,a)=>{const o=t.localResponseNormalization4D(i,e,n,r,s);return a([i,o]),o},u,null,O.L,l);return o?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xa=Object(T.a)({max_:function(t,e=null,n=!1){const r=Object(E.a)(t,"x","max"),s={x:r},a={reductionIndices:e,keepDims:n},i=v.a.runKernelFunc((t,n)=>{let s=j.parseAxisParam(e,r.shape);const a=ut(s,r.rank);let i=r;null!=a&&(i=_e(r,a),s=ct(s.length,i.rank));const o=t.max(i,s);return n([r,o]),null!=a&&t.disposeData(i.dataId),o},s,null,O.P,a);return n?W(i,it(i.shape,j.parseAxisParam(e,r.shape))):i}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wa=Object(T.a)({maxPool_:function(t,e,n,r,s){const a=Object(E.a)(t,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=W(a,[1,a.shape[0],a.shape[1],a.shape[2]])),j.assert(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),j.assert(fe(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=s&&j.assert(j.isInt(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const u={x:i},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s},c=v.a.runKernelFunc((t,a)=>{const o=se(i.shape,e,n,1,r,s);let u;return u=1===o.filterWidth&&1===o.filterHeight&&j.arraysEqual(o.inShape,o.outShape)?i.clone():t.maxPool(i,o),a([i,u]),u},u,null,O.Q,l);return o?W(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const va=Object(T.a)({maxPool3d_:function(t,e=[1,1,1],n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:Os("dilations is deprecated, this field will be gone in v3.0.0.");const o=Object(E.a)(t,"x","maxPool3d");let u=o,l=!1;4===o.rank&&(l=!0,u=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),j.assert(5===u.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`),j.assert("NDHWC"===a,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),j.assert(fe(n,i),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),null!=s&&j.assert(j.isInt(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const c={x:u},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i},d=v.a.runKernelFunc((t,o)=>{null==i&&(i=[1,1,1]);const l=ae(u.shape,e,n,i,r,s,a),c=t.maxPool3d(u,l);return o([u,c]),c},c,null,O.R,h);return l?W(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oa=Object(T.a)({maxPoolWithArgmax_:function(t,e,n,r,s=!1){const a={x:Object(E.a)(t,"x","maxPoolWithArgmax")},i={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},o=v.a.runKernel(O.U,a,i);return{result:o[0],indexes:o[1]}}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sa=Object(T.a)({minimum_:function(t,e){let n=Object(E.a)(t,"a","minimum"),r=Object(E.a)(e,"b","minimum");[n,r]=Object(A.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=B(n,"int32"),r=B(r,"int32")),C(n.shape,r.shape);const s={a:n,b:r};return v.a.runKernelFunc((t,e)=>{const s=t.minimum(n,r);return e([n,r]),s},s,null,O.W)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ka=Object(T.a)({mod_:function(t,e){let n=Object(E.a)(t,"a","mod"),r=Object(E.a)(e,"b","mod");[n,r]=Object(A.makeTypesMatch)(n,r);const s={a:n,b:r};return v.a.runKernelFunc((t,e)=>{const s=t.mod(n,r);return e([n,r]),s},s,null,O.X)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ca=Object(T.a)({multinomial_:function(t,e,n,r=!1){const s=Object(E.a)(t,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+a+".");if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);n=n||Math.random();const o=1===i?s.as2D(1,-1):s,u=v.a.runKernelFunc(t=>t.multinomial(o,r,e,n),{logits2D:o});return 1===i?u.as1D():u}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Na=Object(T.a)({notEqual_:function(t,e){let n=Object(E.a)(t,"a","notEqual"),r=Object(E.a)(e,"b","notEqual");[n,r]=Object(A.makeTypesMatch)(n,r),C(n.shape,r.shape);const s={a:n,b:r};return v.a.runKernelFunc(t=>t.notEqual(n,r),s,null,O.bb)}});const Ia=Object(T.a)({outerProduct_:function(t,e){const n=Object(E.a)(t,"v1","outerProduct"),r=Object(E.a)(e,"v2","outerProduct");j.assert(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=W(n,[-1,1]),a=W(r,[1,-1]);return we(s,a)}});const Aa=Object(T.a)({pad1d_:function(t,e,n=0){return Object(j.assert)(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),Dn(t,[e],n)}});const Ea=Object(T.a)({pad2d_:function(t,e,n=0){return Object(j.assert)(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Dn(t,e,n)}});const Ta=Object(T.a)({pad3d_:function(t,e,n=0){return Object(j.assert)(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Dn(t,e,n)}});const $a=Object(T.a)({pad4d_:function(t,e,n=0){return Object(j.assert)(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Dn(t,e,n)}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ra=Object(T.a)({pool_:function(t,e,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=Object(E.a)(t,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=W(i,[1,i.shape[0],i.shape[1],i.shape[2]])),j.assert(fe(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);const l=se(o.shape,e,a,s,r),c=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?function(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)).map(t=>t-1),r=n.map(t=>Math.floor(t/2)),s=n.map((t,e)=>t-r[e]);return n.map((t,e)=>[r[e],s[e]])}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(t,e,n){const r=n.map(t=>t[0]),s=n.map(t=>t[1]),a=t.concat(r,s),i=e.map((t,e)=>(t-a[e]%t)%t),o=s.map((t,e)=>t+i[e]),u=e.map((t,e)=>[r[e],o[e]]),l=e.map((t,e)=>[0,i[e]]);return[u,l]}([l.inHeight,l.inWidth],c,h),m=d?r:"valid",g=d?o:Oe(o,c,p),b=("avg"===n?()=>Ws(g,e,a,m):()=>wa(g,e,a,m))(),y=d?b:An(b,c,f);return u?W(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ja=Object(T.a)({prelu_:function(t,e){const n=Object(E.a)(t,"x","prelu"),r=Object(E.a)(e,"alpha","prelu"),s={x:n,alpha:r};return v.a.runKernelFunc((t,e)=>{const s=t.prelu(n,r);return e([n,r]),s},s,null,O.gb)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Da=Object(T.a)({rand_:function(t,e,n){const r=Object(j.sizeFromShape)(t);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);s=new Uint8Array(r)}for(let t=0;t<r;t++)s[t]=e();return v.a.makeTensor(s,t,n)}});var _a=n(18);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fa{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=_a.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Ma{constructor(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;const s=r||Math.random();this.randu=_a.alea(s.toString()),this.randn=new Fa(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-a+Math.log(a)),s=this.randu(),s<e||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class za{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=_a.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const La=Object(T.a)({randomGamma_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const a=new Ma(e,n,r,s),i=z(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ba=Object(T.a)({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const a=new Fa(e,n,r,!1,s),i=z(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pa=Object(T.a)({randomUniform_:function(t,e=0,n=1,r="float32",s){const a=z(t,r),i=new za(e,n,null,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}});var Wa=n(20);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Va=Object(T.a)({relu_:function(t){const e=Object(E.a)(t,"x","relu"),n={x:e};return v.a.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?e.toInt():t.relu(e)),n,null,O.ib)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ua=Object(T.a)({relu6_:function(t){const e=Object(E.a)(t,"x","relu6"),n={x:e};return v.a.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?B(e,"int32"):t.relu6(e)),n,null,O.jb)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qa=Object(T.a)({selu_:function(t){const e=Object(E.a)(t,"x","selu"),n={x:e};return v.a.runKernelFunc((t,n)=>{const r=t.selu(e);return n([e]),r},n,null,O.lb)}});const Ga=Object(T.a)({separableConv2d_:function(t,e,n,r,s,a=[1,1],i="NHWC"){const o=Object(E.a)(t,"x","separableConv2d"),u=Object(E.a)(e,"depthwiseFilter","separableConv2d"),l=Object(E.a)(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");j.assert(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),j.assert(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),j.assert(4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),j.assert(1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),j.assert(1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const d=u.shape[2],p=u.shape[3];j.assert(l.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`);const f=oa(c,u,r,s,i,a),m=Te(f,l,1,"valid",i);return h?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ha=Object(T.a)({squaredDifference_:function(t,e){let n=Object(E.a)(t,"a","squaredDifference"),r=Object(E.a)(e,"b","squaredDifference");[n,r]=Object(A.makeTypesMatch)(n,r),C(n.shape,r.shape);const s={a:n,b:r};return v.a.runKernelFunc((t,e)=>{const s=t.squaredDifference(n,r);return e([n,r]),s},s,null,O.pb,{})}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ka=Object(T.a)({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Fa(e,n,r,!0,s),i=z(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),Xa=30;
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ya(t){return t<=Xa?t:Object(j.nearestDivisor)(t,Math.floor(Math.sqrt(t)))}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ja(t,e){let n,r=!1;for(t<=Xa?(n=t,r=!0):n=Object(j.nearestDivisor)(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=Object(j.nearestDivisor)(t,n+1);return n}function Za(t,e,n){const r=[],s=t.length;for(let a=0;a<s;a++)a!==e?r.push(t[a]):r.push(n);return r}function Qa(t,e,n){const r=t.shape[n],s=[];let a=1,i=1;for(let e=0;e<n;e++)s.push(t.shape[e]),a*=t.shape[e];for(let t=0;t<e.rank;t++)s.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)s.push(t.shape[e]),i*=t.shape[e];return{batchSize:a,sliceSize:i,dimSize:r,outputShape:s}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ti(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function ei(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const ni=Object(T.a)({gather_:function(t,e,n=0){const r=Object(E.a)(t,"x","gather"),s=Object(E.a)(e,"indices","gather","int32");n=Object(j.parseAxisParam)(n,r.shape)[0];const a=Qa(r,s,n);return v.a.runKernelFunc((t,e)=>{const a=t.gather(r,s.flatten(),n);return e([s]),a},{x:r,indices:s},(t,e)=>{const[s]=e;return{x:()=>{const e=r.shape,a=s.size,i=e.slice(0,n),o=i.length,u=e.slice(n,e.length).slice(1),l=u.length,c=ti(0,o),h=ti(o+1,o+1+l),d=ei([i,[a],u]),p=t.reshape(d),f=s.reshape([a]),m=ei([[o],c,h]),g=p.transpose(m);let b=ri(g,f,r.shape[n]);const y=lt(m);return b=b.transpose(y),b},indices:()=>s}},"Gather",{axis:n}).reshape(a.outputShape)}}),ri=Object(T.a)({unsortedSegmentSum_:function(t,e,n){const r=Object(E.a)(t,"x","unsortedSegmentSum"),s=Object(E.a)(e,"segmentIds","unsortedSegmentSum","int32");return Object(j.assert)(Object(j.isInt)(n),()=>"numSegments must be of dtype int"),v.a.runKernelFunc((t,e)=>{const a=t.unsortedSegmentSum(r,s,n);return e([s]),a},{$x:r},(t,e)=>{const[n]=e;return{$x:()=>function(t,e){const n=ga(e,Object(F.o)(e)),r=ni(t,n);let s=Ze(e,Object(F.e)(0,"int32"));const a=r.rank-s.rank;for(let t=0;t<a;++t)s=P(s,t+1);s=fn(s,Object(F.b)(r.shape,"bool"));const i=Object(F.o)(r);return yn(s,r,i)}(t,n)}})}});const si=
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function(t,e,n){const r=Object(E.a)(t,"tensor","boolMask"),s=Object(E.a)(e,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;j.assert(i>0,()=>"mask cannot be scalar"),j.assertShapesMatch(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let t=a;t<a+i;t++)u*=o[t];const l=o.slice(0,a).concat([u],o.slice(a+i)),c=r.reshape(l),h=s.reshape([-1]),d=await xn(h),p=d.squeeze([1]),f=ni(c,p,a);return t!==r&&r.dispose(),e!==s&&s.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f};
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ai=Object(T.a)({reverse_:function(t,e){const n=Object(E.a)(t,"x","reverse");if(0===n.rank)return n.clone();const r=j.parseAxisParam(e,n.shape);return v.a.runKernelFunc(t=>t.reverse(n,r),{$x:n},t=>({$x:()=>t.reverse(r)})).reshapeAs(n)}}),ii=Object(T.a)({reverse1d_:function(t){const e=Object(E.a)(t,"x","reverse");return j.assert(1===e.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),ai(e,0)}}),oi=Object(T.a)({reverse2d_:function(t,e){const n=Object(E.a)(t,"x","reverse");return j.assert(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),ai(n,e)}}),ui=Object(T.a)({reverse3d_:function(t,e){const n=Object(E.a)(t,"x","reverse");return j.assert(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),ai(n,e)}}),li=Object(T.a)({reverse4d_:function(t,e){const n=Object(E.a)(t,"x","reverse");return j.assert(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),ai(n,e)}});const ci=Object(T.a)({equalStrict_:function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","equalStrict"),r=Object(E.a)(e,"b","equalStrict");return Object(j.assertShapesMatch)(n.shape,r.shape,"Error in equalStrict: "),n.equal(r)}}),hi=Object(T.a)({greaterEqualStrict_:function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","greaterEqualStrict"),r=Object(E.a)(e,"b","greaterEqualStrict");return Object(j.assertShapesMatch)(n.shape,r.shape,"Error in greaterEqualStrict: "),n.greaterEqual(r)}}),di=Object(T.a)({greaterStrict_:function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","greaterStrict"),r=Object(E.a)(e,"b","greaterStrict");return Object(j.assertShapesMatch)(n.shape,r.shape,"Error in greaterStrict: "),n.greater(r)}}),pi=Object(T.a)({lessEqualStrict_:function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","lessEqualStrict"),r=Object(E.a)(e,"b","lessEqualStrict");return Object(j.assertShapesMatch)(n.shape,r.shape,"Error in lessEqualStrict: "),n.lessEqual(r)}}),fi=Object(T.a)({lessStrict_:function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","lessStrict"),r=Object(E.a)(e,"b","lessStrict");return Object(j.assertShapesMatch)(n.shape,r.shape,"Error in lessStrict: "),n.less(r)}}),mi=Object(T.a)({notEqualStrict_:
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","notEqualStrict"),r=Object(E.a)(e,"b","notEqualStrict");return Object(j.assertShapesMatch)(n.shape,r.shape,"Error in notEqualStrict: "),n.notEqual(r)}});const gi=Object(T.a)({addStrict_:
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","addStrict"),r=Object(E.a)(e,"b","addStrict");return j.assertShapesMatch(n.shape,r.shape,"Error in addStrict: "),n.add(r)}}),bi=Object(T.a)({divStrict_:function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","div"),r=Object(E.a)(e,"b","div");return j.assertShapesMatch(n.shape,r.shape,"Error in divideStrict: "),n.div(r)}}),yi=Object(T.a)({maximumStrict_:function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","maximumStrict"),r=Object(E.a)(e,"b","maximumStrict");return j.assertShapesMatch(n.shape,r.shape,"Error in maximumStrict: "),n.maximum(r)}}),xi=Object(T.a)({minimumStrict_:function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","minimumStrict"),r=Object(E.a)(e,"b","minimumStrict");return j.assertShapesMatch(n.shape,r.shape,"Error in minimumStrict: "),n.minimum(r)}}),wi=Object(T.a)({modStrict_:function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","modStrict"),r=Object(E.a)(e,"b","modStrict");return j.assertShapesMatch(n.shape,r.shape,"Error in modStrict: "),n.mod(r)}}),vi=Object(T.a)({mulStrict_:function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","mul"),r=Object(E.a)(e,"b","mul");return j.assertShapesMatch(n.shape,r.shape,"Error in multiplyStrict: "),n.mul(r)}}),Oi=Object(T.a)({powStrict_:function(t,e){return Os("strict variants of ops have been deprecated and will be removed in future"),j.assertShapesMatch(t.shape,e.shape,"Error in powStrict: "),t.pow(e)}}),Si=Object(T.a)({squaredDifferenceStrict_:function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","squaredDifferenceStrict"),r=Object(E.a)(e,"b","squaredDifferenceStrict");return j.assertShapesMatch(n.shape,r.shape,"Error in squaredDifferenceStrict: "),n.squaredDifference(r)}}),ki=Object(T.a)({subStrict_:function(t,e){Os("strict variants of ops have been deprecated and will be removed in future");const n=Object(E.a)(t,"a","subStrict"),r=Object(E.a)(e,"b","subStrict");return j.assertShapesMatch(n.shape,r.shape,"Error in subStrict: "),n.sub(r)}});const Ci=Object(T.a)({softmax_:
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=-1){const n=Object(E.a)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);return v.a.runKernelFunc((t,r)=>{const s=t.softmax(n,e);return r([s]),s},{logits:n},(t,n)=>{const[r]=n,s=t.mul(r);return{logits:()=>s.sub(s.sum([e],!0).mul(r))}},"Softmax",{dim:e},[],[!0])}}),Ni=Object(T.a)({logSoftmax_:function(t,e=-1){const n=Object(E.a)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return et((t,n)=>{const r=t.max(e,!0),s=t.sub(r),a=s.toFloat().sub(s.exp().sum(e,!0).log());n([a]);return{value:a,gradFunc:(t,n)=>{const[r]=n,s=r.exp();return t.sub(t.sum(e,!0).mul(s))}}})(n)}});const Ii=Object(T.a)({norm_:
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e="euclidean",n=null,r=!1){const s=function t(e,n,r=null){if(0===e.rank)return e.abs();if(1!==e.rank&&null===r)return t(e.reshape([-1]),n,r);if(1===e.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return e.abs().sum(r);if(n===1/0)return e.abs().max(r);if(n===-1/0)return e.abs().min(r);if("euclidean"===n||2===n)return e.abs().pow(Object(F.e)(2,"int32")).sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return e.abs().sum(r[0]).max(r[1]-1);if(n===1/0)return e.abs().sum(r[1]).max(r[0]);if(n===-1/0)return e.abs().sum(r[1]).min(r[0]);if("fro"===n||"euclidean"===n)return e.square().sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(t=Object(E.a)(t,"x","norm"),e,n);let a=s.shape;if(r){const e=Object(j.parseAxisParam)(n,t.shape);a=it(s.shape,e)}return s.reshape(a)}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ai=Object(T.a)({basicLSTMCell_:function(t,e,n,r,s,a){const i=Object(E.a)(t,"forgetBias","basicLSTMCell"),o=Object(E.a)(e,"lstmKernel","basicLSTMCell"),u=Object(E.a)(n,"lstmBias","basicLSTMCell"),l=Object(E.a)(r,"data","basicLSTMCell"),c=Object(E.a)(s,"c","basicLSTMCell"),h=Object(E.a)(a,"h","basicLSTMCell"),d=l.concat(h,1).matMul(o).add(u),p=d.shape[0],f=d.shape[1]/4,m=[p,f],g=d.slice([0,0],m),b=d.slice([0,f],m),y=d.slice([0,2*f],m),x=d.slice([0,3*f],m),w=g.sigmoid().mul(b.tanh()).add(c.mul(i.add(y).sigmoid())),v=w.tanh().mul(x.sigmoid());return[w,v]}}),Ei=Object(T.a)({multiRNNCell_:function(t,e,n,r){const s=Object(E.a)(e,"data","multiRNNCell"),a=Object(E.b)(n,"c","multiRNNCell"),i=Object(E.b)(r,"h","multiRNNCell");let o=s;const u=[];for(let e=0;e<t.length;e++){const n=t[e](o,a[e],i[e]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let t=0;t<u.length;t+=2)l.push(u[t]),c.push(u[t+1]);return[l,c]}});const Ti=Object(T.a)({movingAverage_:
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,s=!0){const a=Object(E.a)(t,"v","movingAverage"),i=Object(E.a)(e,"x","movingAverage"),o=Object(E.a)(n,"decay","movingAverage");Object(A.assertTypesMatch)(a,i),j.assert(j.arraysEqual(a.shape,i.shape),()=>"Shape mismatch in v and x");const u=Object(F.e)(1),l=u.sub(o);let c=i.sub(a).mul(l);if(s){j.assert(null!=r,()=>"When using zeroDebias: true, step is required.");const t=Object(E.a)(r,"step","movingAverage");c=c.div(u.sub(wn(o,t)))}return a.add(c)}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $i=Object(T.a)({stridedSlice_:function(t,e,n,r,s=0,a=0,i=0,o=0,u=0){null==r&&(r=new Array(e.length));const l=Fn(i);if(l.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let c=Object(E.a)(t,"x","stridedSlice");const h=c.rank-e.length,d=Fn(o),p=c.shape.slice();d.forEach(t=>{e[t]=0,n[t]=1,p.splice(t,0,1)}),c=c.reshape(p);for(let t=0;t<c.rank;t++)e[t]=Wn(s,e,r,c.shape,t,i),n[t]=Vn(a,n,r,c.shape,t,i),r[t]=Pn(r,t,i);if(l.length&&h>0){const t=l[0],s=h+1;e=Ln(e,t,s),n=Bn(n,t,s,c.shape),r=zn(r,t,s)}const f=Fn(u);f.forEach(t=>{n[t]=e[t]+1,r[t]=1});const m=Mn(e,n,r),g=m.filter((t,e)=>-1===f.indexOf(e));return r.every(t=>1===t)?Gn(c,e,m).reshape(g):v.a.runKernelFunc(t=>t.stridedSlice(c,e,n,r),{$x:c}).reshape(g)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ri=Object(T.a)({topk_:function(t,e=1,n=!0){const r=Object(E.a)(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got `+e);const[a,i]=v.a.runKernelFunc(t=>t.topk(r,e,n),{$x:r});return{values:a,indices:i}}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ji=Object(T.a)({scatterND_:function(t,e,n){const r=Object(E.a)(t,"indices","scatterND","int32"),s=Object(E.a)(e,"updates","scatterND");return rs(s,r,n),v.a.runKernelFunc(t=>t.scatterND(r,s,n),{indices:r,updates:s},null,"ScatterNd",{shape:n})}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Di=Object(T.a)({fft_:function(t){Object(j.assert)("complex64"===t.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e=t.shape[t.shape.length-1],n=t.size/e,r=t.as2D(n,e);return v.a.runKernelFunc(t=>t.fft(r),{input:t}).reshape(t.shape)}}),_i=Object(T.a)({ifft_:function(t){Object(j.assert)("complex64"===t.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e=t.shape[t.shape.length-1],n=t.size/e,r=t.as2D(n,e);return v.a.runKernelFunc(t=>t.ifft(r),{input:t}).reshape(t.shape)}}),Fi=Object(T.a)({rfft_:function(t,e){Object(j.assert)("float32"===t.dtype,()=>"The dtype for rfft() must be real value but got "+t.dtype);let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map(t=>0),a=t.shape.map(t=>t);a[t.shape.length-1]=e,s=t.slice(r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,s=t.concat(Object(F.n)(r),t.shape.length-1),n=e}else s=t;const a=s.zerosLike(),i=Object(Js.a)(s,a).as2D(r,n),o=Di(i),u=Math.floor(n/2)+1,l=Object(Wa.a)(o),c=Object(ma.a)(o),h=l.split([u,n-u],l.shape.length-1),d=c.split([u,n-u],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,Object(Js.a)(h[0],d[0]).reshape(p)}}),Mi=Object(T.a)({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;if(e<=2){const r=t.as2D(n,e),s=_i(r);return Object(Wa.a)(s)}{const r=[n,2*(e-1)],s=Object(Wa.a)(t).as2D(n,e),a=Object(ma.a)(t).as2D(n,e),i=s.slice([0,1],[n,e-2]).reverse(1),o=a.slice([0,1],[n,e-2]).reverse(1).mul(Object(F.e)(-1)),u=s.concat(i,1),l=a.concat(o,1),c=Object(Js.a)(u,l).as2D(r[0],r[1]),h=_i(c);return Object(Wa.a)(h)}}});const zi=Object(T.a)({sparseToDense_:
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r=0){const s=Object(E.a)(t,"sparseIndices","sparseToDense","int32"),a=Object(E.a)(e,"sparseValues","sparseToDense"),i=Object(E.a)(r,"defaultValue","sparseToDense",a.dtype);return function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i),v.a.runKernelFunc(t=>t.sparseToDense(s,a,n,i),{$sparseIndices:s,$sparseValues:a,$defaultValue:i})}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Li=Object(T.a)({gatherND_:function(t,e){const n=Object(E.a)(e,"indices","gatherND","int32"),r=Object(E.a)(t,"x","gatherND"),s={params:r,indices:n};return v.a.runKernelFunc(t=>t.gatherND(r,n),s,null,O.G)}});
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bi=Object(T.a)({dropout_:
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r){const s=Object(E.a)(t,"x","dropout");if(j.assert("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),j.assert(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return t instanceof R.a?s.clone():s;const a=function(t,e){if(null==e)return t.shape.slice();if(j.arraysEqual(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),i=1-e,o=Pa(a,0,1,"float32",r).add(i).floor().div(i);return s.mul(o)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pi(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let a=0;a<t;++a){const i=2*Math.PI*a/(t+r-1);s[a]=e-n*Math.cos(i)}return Object(F.g)(s,"float32")}const Wi=Object(T.a)({hannWindow_:function(t){return Pi(t,.5,.5)}}),Vi=Object(T.a)({hammingWindow_:function(t){return Pi(t,.54,.46)}}),Ui=Object(T.a)({frame_:function(t,e,n,r=!1,s=0){let a=0;const i=[];for(;a+e<=t.size;)i.push(Gn(t,a,e)),a+=n;if(r)for(;a<t.size;){const r=a+e-t.size,o=M([Gn(t,a,e-r),fa([r],s)]);i.push(o),a+=n}return 0===i.length?Object(F.h)([],[0,e]):M(i).as2D(i.length,e)}}),qi=Object(T.a)({stft_:function(t,e,n,r,s=Wi){var a;null==r&&(a=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Ui(t,e,n),o=X(i,s(e)),u=[];for(let t=0;t<i.shape[0];t++)u.push(Fi(o.slice([t,0],[1,e]),r));return M(u)}});const Gi=
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function(t,e,n=1){const r=Object(E.a)(t,"predictions","inTopK"),s=Object(E.a)(e,"targets","inTopK");Object(j.assert)(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),Object(j.assert)(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),Object(j.assertShapesMatch)(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];Object(j.assert)(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);const i=await r.data(),o=await s.data(),[u,l]=[i.length/a,a],c=Object(j.getTypedArrayFromDType)("bool",u);for(let t=0;t<u;t++){const e=t*l,r=i.subarray(e,e+l),s=[];for(let t=0;t<r.length;t++)s.push({value:r[t],index:t});s.sort((t,e)=>e.value-t.value),c[t]=0;for(let e=0;e<n;e++)if(s[e].index===o[t]){c[t]=1;break}}return t!==r&&r.dispose(),e!==s&&s.dispose(),Object(F.f)(c,s.shape,"bool")};
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Hi;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Hi||(Hi={}));const Ki=Object(T.a)({absoluteDifference_:function(t,e,n,r=Hi.SUM_BY_NONZERO_WEIGHTS){const s=Object(E.a)(t,"labels","absoluteDifference"),a=Object(E.a)(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=Object(E.a)(n,"weights","absoluteDifference")),Object(j.assertShapesMatch)(s.shape,a.shape,"Error in absoluteDifference: ");const o=s.sub(a).abs();return Xi(o,i,r)}}),Xi=Object(T.a)({computeWeightedLoss_:function(t,e,n=Hi.SUM_BY_NONZERO_WEIGHTS){const r=Object(E.a)(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=Object(E.a)(e,"weights","computeWeightedLoss"));const a=null==s?r:r.mul(s);if(n===Hi.NONE)return a;if(n===Hi.SUM)return a.sum();if(n===Hi.MEAN){if(null==s)return a.mean();{const t=r.size/s.size,e=a.sum().div(s.sum());return t>1?e.div(Object(F.e)(t)):e}}if(n===Hi.SUM_BY_NONZERO_WEIGHTS){if(null==s)return a.sum().div(Object(F.e)(r.size));{const t=s.mul(Object(F.b)(r.shape)).notEqual(Object(F.e)(0)).sum().toFloat();return a.sum().div(t)}}throw Error("Unknown reduction: "+n)}}),Yi=Object(T.a)({cosineDistance_:function(t,e,n,r,s=Hi.SUM_BY_NONZERO_WEIGHTS){const a=Object(E.a)(t,"labels","cosineDistance"),i=Object(E.a)(e,"predictions","cosineDistance");let o=null;null!=r&&(o=Object(E.a)(r,"weights","cosineDistance")),Object(j.assertShapesMatch)(a.shape,i.shape,"Error in cosineDistance: ");const u=Object(F.e)(1).sub(a.mul(i).sum(n,!0));return Xi(u,o,s)}}),Ji=Object(T.a)({hingeLoss_:function(t,e,n,r=Hi.SUM_BY_NONZERO_WEIGHTS){let s=Object(E.a)(t,"labels","hingeLoss");const a=Object(E.a)(e,"predictions","hingeLoss");let i=null;null!=n&&(i=Object(E.a)(n,"weights","hingeLoss")),Object(j.assertShapesMatch)(s.shape,a.shape,"Error in hingeLoss: ");const o=Object(F.e)(1);s=Object(F.e)(2).mul(s).sub(o);const u=o.sub(s.mul(a)).relu();return Xi(u,i,r)}}),Zi=Object(T.a)({huberLoss_:function(t,e,n,r=1,s=Hi.SUM_BY_NONZERO_WEIGHTS){const a=Object(E.a)(t,"labels","huberLoss"),i=Object(E.a)(e,"predictions","huberLoss");let o=null;null!=n&&(o=Object(E.a)(n,"weights","huberLoss")),Object(j.assertShapesMatch)(a.shape,i.shape,"Error in huberLoss: ");const u=Object(F.e)(r),l=i.sub(a).abs(),c=Sa(l,u),h=l.sub(c),d=Object(F.e)(.5).mul(c.square()).add(u.mul(h));return Xi(d,o,s)}}),Qi=Object(T.a)({logLoss_:function(t,e,n,r=1e-7,s=Hi.SUM_BY_NONZERO_WEIGHTS){const a=Object(E.a)(t,"labels","logLoss"),i=Object(E.a)(e,"predictions","logLoss");let o=null;null!=n&&(o=Object(E.a)(n,"weights","logLoss")),Object(j.assertShapesMatch)(a.shape,i.shape,"Error in logLoss: ");const u=Object(F.e)(1),l=Object(F.e)(r),c=a.mul(i.add(l).log()).neg().sub(u.sub(a).mul(u.sub(i).add(l).log()));return Xi(c,o,s)}}),to=Object(T.a)({meanSquaredError_:function(t,e,n,r=Hi.SUM_BY_NONZERO_WEIGHTS){const s=Object(E.a)(t,"labels","meanSquaredError"),a=Object(E.a)(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=Object(E.a)(n,"weights","meanSquaredError")),Object(j.assertShapesMatch)(s.shape,a.shape,"Error in meanSquaredError: ");const o=s.squaredDifference(a);return Xi(o,i,r)}}),eo=Object(T.a)({sigmoidCrossEntropy_:function(t,e,n,r=0,s=Hi.SUM_BY_NONZERO_WEIGHTS){let a=Object(E.a)(t,"multiClassLabels","sigmoidCrossEntropy");const i=Object(E.a)(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Object(E.a)(n,"weights","sigmoidCrossEntropy")),Object(j.assertShapesMatch)(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Object(F.e)(r),e=Object(F.e)(1),n=Object(F.e)(.5);a=a.mul(e.sub(t)).add(n.mul(t))}const u=function(t,e){const n=Object(E.a)(t,"labels","sigmoidCrossEntropyWithLogits"),r=Object(E.a)(e,"logits","sigmoidCrossEntropyWithLogits");Object(j.assertShapesMatch)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=r.relu(),a=r.mul(n),i=r.abs().neg().exp().log1p();return s.sub(a).add(i)}(a,i);return Xi(u,o,s)}}),no=Object(T.a)({softmaxCrossEntropy_:function(t,e,n,r=0,s=Hi.SUM_BY_NONZERO_WEIGHTS){let a=Object(E.a)(t,"onehotLabels","softmaxCrossEntropy");const i=Object(E.a)(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Object(E.a)(n,"weights","softmaxCrossEntropy")),Object(j.assertShapesMatch)(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Object(F.e)(r),e=Object(F.e)(1),n=Object(F.e)(a.shape[1]);a=a.mul(e.sub(t)).add(t.div(n))}const u=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was `+n);return et((t,e,r)=>{const s=e.logSumExp([n],!0),a=e.toFloat().sub(s);r([t,a]);return{value:a.mul(t).neg().sum([n]),gradFunc:(t,e)=>{const[r,s]=e,a=it(t.shape,[n]);return[t.reshape(a).mul(r.toFloat().sub(s.exp())),t.reshape(a).mul(s.exp().sub(r.toFloat()))]}}})(t,e)}(a,i);return Xi(u,o,s)}});function ro(t,e=!1){return v.a.tidy(()=>{if(2!==t.shape.length)throw new Error(`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let s=pa(n),a=t.clone();const i=Object(F.h)([[1]],[1,1]);let o=i.clone();const u=n>=r?r:n;for(let t=0;t<u;++t){const e=a,u=o,l=s;[o,a,s]=v.a.tidy(()=>{const e=a.slice([t,t],[n-t,1]),u=e.norm(),l=a.slice([t,t],[1,1]),c=Object(F.h)([[-1]]).where(l.greater(0),Object(F.h)([[1]])),h=l.sub(c.mul(u)),d=e.div(h);o=1===d.shape[0]?i.clone():i.concat(d.slice([1,0],[d.shape[0]-1,d.shape[1]]),0);const p=c.matMul(h).div(u).neg(),f=a.slice([t,0],[n-t,r]),m=p.mul(o),g=o.transpose();if(0===t)a=f.sub(m.matMul(g.matMul(f)));else{const e=f.sub(m.matMul(g.matMul(f)));a=a.slice([0,0],[t,r]).concat(e,0)}const b=m.transpose(),y=s.slice([0,t],[n,s.shape[1]-t]);if(0===t)s=y.sub(y.matMul(o).matMul(b));else{const e=y.sub(y.matMul(o).matMul(b));s=s.slice([0,0],[n,t]).concat(e,1)}return[o,a,s]}),As([e,u,l])}return!e&&n>r&&(s=s.slice([0,0],[n,r]),a=a.slice([0,0],[r,r])),[s,a]})}const so=Object(T.a)({bandPart_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){if(e%1!=0)throw new Error(`bandPart(): numLower must be an integer, got ${e}.`);if(n%1!=0)throw new Error(`bandPart(): numUpper must be an integer, got ${n}.`);const r=Object(E.a)(t,"a","bandPart");if(r.rank<2)throw new Error(`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[a,i]=r.shape.slice(-2);if(!(e<=a))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=a),n<0&&(n=i);const o=Object(F.d)(0,a,1,"int32").reshape([-1,1]),u=Object(F.d)(0,i,1,"int32"),l=Ue(o,u),c=fn(l.lessEqual(Object(F.e)(+e,"int32")),l.greaterEqual(Object(F.e)(-n,"int32"))),h=Object(F.n)([a,i],r.dtype);return U(q(r.reshape([-1,a,i])).map(t=>yn(c,t,h))).reshape(s)}}),ao=Object(T.a)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Object(j.assert)(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)Object(j.assert)(t[e].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`)}else e=!0,t=Ce(t,t.shape[0],0).map(t=>V(t,[0]));Object(j.assert)(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let e=0;e<t.length;++e)n.push(v.a.tidy(()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=wt(n[r].mul(t)).mul(n[r]);t=t.sub(e)}return t.div(Ii(t,"euclidean"))}));return e?U(n,0):n}}),io=Object(T.a)({qr_:function(t,e=!1){if(t.rank<2)throw new Error("qr() requires input tensor to have a rank >= 2, but got rank "+t.rank);if(2===t.rank)return ro(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=q(t.reshape([n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],a=[];r.forEach(t=>{const[n,r]=ro(t,e);s.push(n),a.push(r)});return[U(s,0).reshape(t.shape),U(a,0).reshape(t.shape)]}}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oo(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(e,t[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t,e,n||uo)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function uo(t,e){return t>e?1:t<e?-1:0}function lo(t,e,n,r,s){const a=ho(t,e,n,r,s,0);return a.selectedScores.dispose(),a.numValidOutputs.dispose(),a.selectedIndices}function co(t,e,n,r,s,a){const i=ho(t,e,n,r,s,a,!0);return i.numValidOutputs.dispose(),{selectedIndices:i.selectedIndices,selectedScores:i.selectedScores}}function ho(t,e,n,r,s,a,i=!1,o=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>s&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(mo);const l=a>0?-.5/a:0,c=[],h=[];for(;c.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=e;if(n<s)break;let o=!1;for(let n=c.length-1;n>=i;--n){const i=po(t,a,c[n]);if(i>=r){o=!0;break}if(e.score=e.score*fo(r,l,i),e.score<=s)break}e.suppressBeginIndex=c.length,o||(e.score===n?(c.push(a),h.push(e.score)):e.score>s&&oo(u,e,mo))}const d=c.length;return o&&(c.fill(0,d),h.fill(0,d)),{selectedIndices:Object(F.g)(c,"int32"),selectedScores:Object(F.g)(h,"float32"),numValidOutputs:Object(F.e)(d,"int32")}}function po(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),b=Math.min(o,h),y=Math.min(u,d),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(p+f-x)}function fo(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function mo(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function go(t,e,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=t.shape[0];return n=Math.min(n,i),j.assert(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),j.assert(2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),j.assert(4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+t.shape[1]),j.assert(1===e.rank,()=>"scores must be a 1D tensor"),j.assert(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+e.shape[0]),j.assert(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bo=Object(T.a)({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Object(E.a)(t,"boxes","nonMaxSuppression"),i=Object(E.a)(e,"scores","nonMaxSuppression"),o=go(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return v.a.runKernelFunc(t=>t.nonMaxSuppression(a,i,n,r,s),{boxes:a,scores:i},null,O.Z,u)}});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yo=Object(T.a)({resizeBilinear_:function(t,e,n=!1){const r=Object(E.a)(t,"images","resizeBilinear");j.assert(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),j.assert(2===e.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+e+".");let s=r,a=!1;3===r.rank&&(a=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));const[i,o]=e,u=v.a.runKernelFunc((t,e)=>(e([s]),t.resizeBilinear(s,i,o,n)),{x:s},(t,e)=>({x:()=>v.a.runKernelFunc(r=>r.resizeBilinearBackprop(t,e[0],n),{})}),"ResizeBilinear",{alignCorners:n,newHeight:i,newWidth:o});return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),xo=Object(T.a)({resizeNearestNeighbor_:function(t,e,n=!1){const r=Object(E.a)(t,"images","resizeNearestNeighbor");j.assert(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),j.assert(2===e.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+"."),j.assert("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype");let s=r,a=!1;3===r.rank&&(a=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));const[i,o]=e,u=v.a.runKernelFunc((t,e)=>(e([s]),t.resizeNearestNeighbor(s,i,o,n)),{batchImages:s},(t,e)=>({batchImages:()=>v.a.runKernelFunc(r=>r.resizeNearestNeighborBackprop(t,e[0],n),{})}));return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),wo=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Object(E.a)(t,"boxes","nonMaxSuppressionAsync"),i=Object(E.a)(e,"scores","nonMaxSuppressionAsync"),o=go(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=lo(u[0],u[1],n,r,s);return a!==t&&a.dispose(),i!==e&&i.dispose(),l},vo=Object(T.a)({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Object(E.a)(t,"boxes","nonMaxSuppression"),o=Object(E.a)(e,"scores","nonMaxSuppression"),u=go(i,o,n,r,s,a),l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},c=v.a.runKernel("NonMaxSuppressionV5",{boxes:i,scores:o},l);return{selectedIndices:c[0],selectedScores:c[1]}}}),Oo=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Object(E.a)(t,"boxes","nonMaxSuppressionAsync"),o=Object(E.a)(e,"scores","nonMaxSuppressionAsync"),u=go(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=co(l[0],l[1],n,r,s,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),c},So=Object(T.a)({cropAndResize_:function(t,e,n,r,s,a){const i=Object(E.a)(t,"image","cropAndResize"),o=Object(E.a)(e,"boxes","cropAndResize","float32"),u=Object(E.a)(n,"boxInd","cropAndResize","int32");s=s||"bilinear",a=a||0;const l=o.shape[0];return j.assert(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),j.assert(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`),j.assert(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`),j.assert(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),j.assert(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),j.assert("bilinear"===s||"nearest"===s,()=>"method must be bilinear or nearest, but was "+s),v.a.runKernelFunc((t,e)=>t.cropAndResize(i,o,u,r,s,a),{images:i,boxes:o,boxInd:u},null,"CropAndResize",{method:s,extrapolationValue:a,cropSize:r})}}),ko=(t,e)=>!(t>0)||"linear"===e,Co=(t,e,n)=>{if(null==n||"linear"===n)return t;if("relu"===n)return t.mul(e.step());throw new Error(`Gradient for activation ${n} has not been implemented yet.`)},No=(t,e)=>{let n=e;const r=k(t.shape,e.shape);return r.length>0&&(n=n.sum(r)),n.reshape(t.shape)},Io=(t,e,n)=>{if("linear"===e)return t;if("relu"===e)return Va(t);if("elu"===e)return ha(t);if("relu6"===e)return Ua(t);if("prelu"===e)return ja(t,n);throw new Error(`Unknown fused activation ${e}.`)};const Ao=Object(T.a)({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i}){if(!1===ko(v.a.state.gradientDepth,a)){let o=we(t,e,n,r);return null!=s&&(o=$(o,s)),Io(o,a,i)}let o=Object(E.a)(t,"a","fused matMul"),u=Object(E.a)(e,"b","fused matMul");[o,u]=Object(A.makeTypesMatch)(o,u);const l=n?o.shape[o.rank-2]:o.shape[o.rank-1],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?o.shape[o.rank-1]:o.shape[o.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],p=o.shape.slice(0,-2),f=u.shape.slice(0,-2),m=j.sizeFromShape(p),g=j.sizeFromShape(f);j.assert(o.rank>=2&&u.rank>=2&&o.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${u.rank}.`),j.assert(j.arraysEqual(p,f),()=>`Error in fused matMul: outer dimensions (${p}) and (${f}) of Tensors with shapes ${o.shape} and `+u.shape+" must match."),j.assert(l===c,()=>`Error in fused matMul: inner shapes (${l}) and (${c}) of Tensors with shapes ${o.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=o.shape.slice(0,-2).concat([h,d]),y=n?o.as3D(m,l,h):o.as3D(m,h,l),x=r?u.as3D(g,d,c):u.as3D(g,c,d);let w,O;null!=s&&(w=Object(E.a)(s,"bias","fused matMul"),[w]=Object(A.makeTypesMatch)(w,o),C(b,w.shape)),null!=i&&(O=Object(E.a)(i,"prelu weights","fused matMul"));const S={a:y,b:x};null!=s&&(S.bias=w),null!=i&&(S.preluActivationWeights=O);const k=[y,x];return v.a.runKernelFunc((t,e)=>{const s=t.fusedBatchMatMul({a:y,b:x,transposeA:n,transposeB:r,bias:w,activation:a,preluActivationWeights:O});return e([y,x,s]),s},S,(t,e)=>{const[i,o,u]=e,l=Co(t,u,a);let c={};return null!=s&&(c={bias:()=>No(w,l)}),n||r?!n&&r?Object.assign({a:()=>l.matMul(o,!1,!1),b:()=>l.matMul(i,!0,!1)},c):n&&!r?Object.assign({a:()=>o.matMul(l,!1,!0),b:()=>i.matMul(l,!1,!1)},c):Object.assign({a:()=>o.matMul(l,!0,!0),b:()=>l.matMul(i,!0,!0)},c):Object.assign({a:()=>l.matMul(o,!1,!0),b:()=>i.matMul(l,!0,!1)},c)},"_FusedMatMul",{transposeA:n,transposeB:r,activation:a},k,[!0]).reshape(b)}}),Eo=Object(T.a)({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l}){if(u=u||"linear",!1===ko(v.a.state.gradientDepth,u)){let c=Te(t,e,n,r,s,a,i);return null!=o&&(c=$(c,o)),Io(c,u,l)}const c=Object(E.a)(t,"x","conv2d"),h=Object(E.a)(e,"filter","conv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=c.as4D(1,c.shape[0],c.shape[1],c.shape[2])),j.assert(4===d.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+d.rank+"."),j.assert(4===h.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+h.rank+"."),null!=i&&j.assert(j.isInt(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),j.assert(d.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${h.shape[2]}.`),j.assert(fe(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),j.assert("NHWC"===s,()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);const f=ie(d.shape,h.shape,n,a,r,i);let m,g;null!=o&&(m=Object(E.a)(o,"bias","fused conv2d"),[m]=Object(A.makeTypesMatch)(m,c),C(f.outShape,m.shape)),null!=l&&(g=Object(E.a)(l,"prelu weights","fused conv2d"));const b={x:d,filter:h};null!=o&&(b.bias=m),null!=l&&(b.preluActivationWeights=g);const y=[h,d],x=v.a.runKernelFunc((t,e)=>{const n=t.fusedConv2d({input:d,filter:h,convInfo:f,bias:m,activation:u,preluActivationWeights:g});return e([h,d,n]),n},b,(t,e)=>{const[s,i,l]=e,c=Co(t,l,u);j.assert(pe(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let h={};return null!=o&&(h={bias:()=>No(m,c)}),Object.assign({x:()=>Ae(i.shape,c,s,n,r),filter:()=>Ie(i,c,s.shape,n,r)},h)},"FusedConv2D",{convInfo:f,activation:u},y,[!0]);return p?x.as3D(x.shape[1],x.shape[2],x.shape[3]):x}}),To=Object(T.a)({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l}){if(!1===ko(v.a.state.gradientDepth,u)){let c=oa(t,e,n,r,s,a,i);return null!=o&&(c=$(c,o)),Io(c,u,l)}const c=Object(E.a)(t,"x","depthwiseConv2d"),h=Object(E.a)(e,"filter","depthwiseConv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=c.as4D(1,c.shape[0],c.shape[1],c.shape[2])),j.assert(4===d.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),j.assert(4===h.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),j.assert(d.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),null==a&&(a=[1,1]),j.assert(fe(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),null!=i&&j.assert(j.isInt(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const f=ie(d.shape,h.shape,n,a,r,i,!0);let m,g;null!=o&&(m=Object(E.a)(o,"bias","fused conv2d"),[m]=Object(A.makeTypesMatch)(m,c),C(f.outShape,m.shape)),null!=l&&(g=Object(E.a)(l,"prelu weights","fused depthwiseConv2d"));const b={x:d,filter:h};null!=o&&(b.bias=m),null!=l&&(b.preluActivationWeights=g);const y=[h,d],x=v.a.runKernelFunc((t,e)=>{const n=t.fusedDepthwiseConv2D({input:d,filter:h,convInfo:f,bias:m,activation:u,preluActivationWeights:g});return e([h,d,n]),n},b,(t,e)=>{j.assert(pe(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[n,r,s]=e,i=Co(t,s,u);let l={};return null!=o&&(l={bias:()=>No(m,i)}),Object.assign({x:()=>Le(r.shape,i,n,f),filter:()=>ze(r,i,n.shape,f)},l)},"FusedDepthwiseConv2D",{convInfo:f,activation:u},y,[!0]);return p?x.as3D(x.shape[1],x.shape[2],x.shape[3]):x}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $o extends as{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:s[t.name]}));this.applyGradients(t)}else this.applyGradients(s);return As(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return tt(t,e)}dispose(){null!=this.iterations_&&As(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(F.e)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty($o,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ro extends $o{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=v.a.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=v.a.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:e+"/accum_grad",variable:Is(()=>Object(F.o)(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:e+"/accum_var",variable:Is(()=>Object(F.o)(r).variable(!1))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Is(()=>{const t=a.mul(this.rho).add(s.square().mul(1-this.rho)),e=i.add(this.epsilon).sqrt().div(a.add(this.epsilon).sqrt()).mul(s),n=i.mul(this.rho).add(e.square().mul(1-this.rho));a.assign(t),i.assign(n);const o=e.mul(-this.learningRate).add(r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(As(this.accumulatedGrads.map(t=>t.variable)),As(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Ro.className="Adadelta",os(Ro);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jo extends $o{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=v.a.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:e+"/accumulator",variable:Is(()=>fa(r.shape,this.initialAccumulatorValue).variable(t))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable;Is(()=>{const t=a.add(s.square());a.assign(t);const e=s.div(t.add(v.a.backend.epsilon()).sqrt()).mul(-this.learningRate).add(r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&As(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}jo.className="Adagrad",os(jo);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Do extends $o{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Is(()=>{this.accBeta1=Object(F.e)(e).variable(),this.accBeta2=Object(F.e)(n).variable()}),null==r&&(this.epsilon=v.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Is(()=>{const n=Ue(1,this.accBeta1),r=Ue(1,this.accBeta2);e.forEach((e,s)=>{const a=v.a.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:e+"/m",variable:Is(()=>Object(F.o)(a).variable(!1))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:e+"/v",variable:Is(()=>Object(F.o)(a).variable(!1))});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=o.mul(this.beta1).add(i.mul(1-this.beta1)),c=u.mul(this.beta2).add(i.square().mul(1-this.beta2)),h=l.div(n),d=c.div(r);o.assign(l),u.assign(c);const p=h.div(d.sqrt().add(this.epsilon)).mul(-this.learningRate).add(a);a.assign(p)}),this.accBeta1.assign(this.accBeta1.mul(this.beta1)),this.accBeta2.assign(this.accBeta2.mul(this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&As(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&As(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),Is(()=>{this.accBeta1.assign(wn(this.beta1,this.iterations_+1)),this.accBeta2.assign(wn(this.beta2,this.iterations_+1))});const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Do.className="Adam",os(Do);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class _o extends $o{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Is(()=>{this.iteration=Object(F.e)(0).variable(),this.accBeta1=Object(F.e)(e).variable()}),null==r&&(this.epsilon=v.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Is(()=>{const n=Ue(1,this.accBeta1),r=K(-this.learningRate,this.iteration.mul(this.decay).add(1));e.forEach((e,s)=>{const a=v.a.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:e+"/m",variable:Object(F.o)(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:e+"/v",variable:Object(F.o)(a).variable(!1)});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=o.mul(this.beta1).add(i.mul(1-this.beta1)),c=u.mul(this.beta2),h=i.abs(),d=c.maximum(h);o.assign(l),u.assign(d);const p=r.div(n).mul(l.div(d.add(this.epsilon))).add(a);a.assign(p)}),this.iteration.assign(this.iteration.add(1)),this.accBeta1.assign(this.accBeta1.mul(this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&As(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&As(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}_o.className="Adamax",os(_o);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Fo extends $o{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=v.a.registeredVariables[e];Is(()=>{const t=this.c.mul(r).add(s);s.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Es(Object(F.e)(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Fo.className="SGD",os(Fo);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Mo extends Fo{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Object(F.e)(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=v.a.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:e+"/momentum",variable:Is(()=>Object(F.o)(r).variable(t))}}const s=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[e];null!=a&&Is(()=>{let t;const e=this.m.mul(s).add(a);t=this.useNesterov?this.c.mul(a.add(e.mul(this.m))).add(r):this.c.mul(e).add(r),s.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&As(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Mo.className="Momentum",os(Mo);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zo extends $o{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=v.a.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=v.a.registeredVariables[e];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:e+"/rms",variable:Is(()=>Object(F.o)(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:e+"/momentum",variable:Is(()=>Object(F.o)(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:e+"/mg",variable:Is(()=>Object(F.o)(r).variable(!1))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Is(()=>{const t=a.mul(this.decay).add(s.square().mul(1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,o=e.mul(this.decay).add(s.mul(1-this.decay)),u=i.mul(this.momentum).add(s.mul(this.learningRate).div(t.sub(o.square().add(this.epsilon)).sqrt()));a.assign(t),e.assign(o),i.assign(u);const l=r.sub(u);r.assign(l)}else{const t=a.mul(this.decay).add(s.square().mul(1-this.decay)),e=i.mul(this.momentum).add(s.mul(this.learningRate).div(t.add(this.epsilon).sqrt()));a.assign(t),i.assign(e);const n=r.sub(e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&As(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&As(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&As(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}zo.className="RMSProp",os(zo);var Lo=n(21);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bo{static sgd(t){return new Fo(t)}static momentum(t,e,n=!1){return new Mo(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new zo(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new Do(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new Ro(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new _o(t,e,n,r,s)}static adagrad(t,e=.1){return new jo(t,e)}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Po={sgd:Bo.sgd,momentum:Bo.momentum,adadelta:Bo.adadelta,adagrad:Bo.adagrad,rmsprop:Bo.rmsprop,adamax:Bo.adamax,adam:Bo.adam};var Wo=n(34);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vo(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function Uo(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function qo(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function Go(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Ho(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ko=.3275911,Xo=.254829592,Yo=-.284496736,Jo=1.421413741,Zo=-1.453152027,Qo=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tu(...t){Object(er.c)().getBool("IS_TEST")||console.warn(...t)}function eu(...t){Object(er.c)().getBool("IS_TEST")||console.log(...t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nu(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function ru(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function su(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function au(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function iu(t,e){return{real:t[2*e],imag:t[2*e+1]}}function ou(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function uu(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const a=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function lu(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cu(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Object(F.n)(t.shape),r=t.toFloat(),s=n.complex(r,e);return e.dispose(),r.dispose(),s}if(!Object(j.hasEncodingLoss)(t.dtype,e))return v.a.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),s=r.cast(e);return r.dispose(),s}if("int32"===e)return n.int(t);if("bool"===e){const e=Object(F.e)(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function hu(t,e){return v.a.makeTensorFromDataId(t.dataId,e,t.dtype)}function du(t,e,n){const r=(e-t)/(n-1),s=Object(j.makeZerosTypedArray)(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return Object(F.g)(s,"float32")}var pu=n(31);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fu(t,e,n){const r=new Array(t.rank).fill(0),s=t.shape.slice();return e.map(e=>{const a=[...s];a[n]=e;const i=t.slice(r,a);return r[n]+=e,i})}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mu(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=z(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const a=t.locToIndex(s);r.values[e]=t.values[a]}return r.toTensor()}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gu(t,e,n,r,s){const a=e[e.length-1],[i,o]=[t.length/a,a],u=Object(j.getTypedArrayFromDType)(n,i*r),l=Object(j.getTypedArrayFromDType)("int32",i*r);for(let e=0;e<i;e++){const n=e*o,s=t.subarray(n,n+o),a=[];for(let t=0;t<s.length;t++)a.push({value:s[t],index:t});a.sort((t,e)=>e.value-t.value);const i=e*r,c=u.subarray(i,i+r),h=l.subarray(i,i+r);for(let t=0;t<r;t++)c[t]=a[t].value,h[t]=a[t].index}const c=e.slice();return c[c.length-1]=r,[Object(F.f)(u,c,n),Object(F.f)(l,c,"int32")]}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bu{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class yu{time(t){return xu("time")}read(t){return xu("read")}readSync(t){return xu("readSync")}numDataIds(){return xu("numDataIds")}disposeData(t){return xu("disposeData")}write(t,e,n){return xu("write")}move(t,e,n,r){return xu("move")}memory(){return xu("memory")}floatPrecision(){return xu("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return xu("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){return xu("fusedBatchMatMul")}slice(t,e,n){return xu("slice")}stridedSlice(t,e,n,r){return xu("stridedSlice")}unstack(t,e){return xu("unstack")}reverse(t,e){return xu("reverse")}concat(t,e){return xu("concat")}neg(t){return xu("neg")}add(t,e){return xu("add")}addN(t){return xu("addN")}subtract(t,e){return xu("subtract")}multiply(t,e){return xu("multiply")}realDivide(t,e){return xu("realDivide")}floorDiv(t,e){return xu("floorDiv")}sum(t,e){return xu("sum")}prod(t,e){return xu("prod")}unsortedSegmentSum(t,e,n){return xu("unsortedSegmentSum")}argMin(t,e){return xu("argMin")}argMax(t,e){return xu("argMax")}equal(t,e){return xu("equal")}notEqual(t,e){return xu("notEqual")}less(t,e){return xu("less")}lessEqual(t,e){return xu("lessEqual")}greater(t,e){return xu("greater")}greaterEqual(t,e){return xu("greaterEqual")}logicalNot(t){return xu("logicalNot")}logicalAnd(t,e){return xu("logicalAnd")}logicalOr(t,e){return xu("logicalOr")}where(t){return xu("where")}select(t,e,n){return xu("select")}topk(t,e,n){return xu("topk")}min(t,e){return xu("min")}minimum(t,e){return xu("minimum")}mod(t,e){return xu("mod")}max(t,e){return xu("max")}maximum(t,e){return xu("maximum")}all(t,e){return xu("all")}any(t,e){return xu("any")}squaredDifference(t,e){return xu("squaredDifference")}ceil(t){return xu("ceil")}floor(t){return xu("floor")}round(t){return xu("round")}sign(t){return xu("sign")}isNaN(t){return xu("isNaN")}isInf(t){return xu("isInf")}isFinite(t){return xu("isFinite")}pow(t,e){return xu("pow")}exp(t){return xu("exp")}expm1(t){return xu("expm1")}softmax(t,e){return xu("softmax")}log(t){return xu("log")}log1p(t){return xu("log1p")}sqrt(t){return xu("sqrt")}rsqrt(t){return xu("rsqrt")}square(t){return xu("square")}reciprocal(t){return xu("reciprocal")}relu(t){return xu("relu")}relu6(t){return xu("relu6")}prelu(t,e){return xu("prelu")}elu(t){return xu("elu")}eluDer(t,e){return xu("eluDer")}selu(t){return xu("selu")}int(t){return xu("int")}clip(t,e,n){return xu("clip")}abs(t){return xu("abs")}complexAbs(t){return xu("complexAbs")}sigmoid(t){return xu("sigmoid")}softplus(t){return xu("softplus")}sin(t){return xu("sin")}cos(t){return xu("cos")}tan(t){return xu("tan")}asin(t){return xu("asin")}acos(t){return xu("acos")}atan(t){return xu("atan")}atan2(t,e){return xu("atan2")}sinh(t){return xu("sinh")}cosh(t){return xu("cosh")}tanh(t){return xu("tanh")}asinh(t){return xu("asinh")}acosh(t){return xu("acosh")}atanh(t){return xu("atanh")}erf(t){return xu("erf")}step(t,e){return xu("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return xu("fusedConv2d")}conv2d(t,e,n){return xu("conv2d")}conv2dDerInput(t,e,n){return xu("conv2dDerInput")}conv2dDerFilter(t,e,n){return xu("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return xu("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return xu("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return xu("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return xu("depthwiseConv2DDerFilter")}conv3d(t,e,n){return xu("conv3d")}conv3dDerInput(t,e,n){return xu("conv3dDerInput")}conv3dDerFilter(t,e,n){return xu("conv3dDerFilter")}maxPool(t,e){return xu("maxPool")}maxPoolBackprop(t,e,n,r){return xu("maxPoolBackprop")}avgPool(t,e){return xu("avgPool")}avgPoolBackprop(t,e,n){return xu("avgPoolBackprop")}avgPool3d(t,e){return xu("avgPool3d")}avgPool3dBackprop(t,e,n){return xu("avgPool3dBackprop")}maxPool3d(t,e){return xu("maxPool3d")}maxPool3dBackprop(t,e,n,r){return xu("maxPool3dBackprop")}reshape(t,e){return xu("reshape")}cast(t,e){return xu("cast")}tile(t,e){return xu("tile")}pad(t,e,n){return xu("pad")}transpose(t,e){return xu("transpose")}gather(t,e,n){return xu("gather")}gatherND(t,e){return xu("gatherND")}scatterND(t,e,n){return xu("scatterND")}batchToSpaceND(t,e,n){return xu("batchToSpaceND")}spaceToBatchND(t,e,n){return xu("spaceToBatchND")}resizeBilinear(t,e,n,r){return xu("resizeBilinear")}resizeBilinearBackprop(t,e,n){return xu("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return xu("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return xu("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,s,a){return xu("batchNorm")}localResponseNormalization4D(t,e,n,r,s){return xu("localResponseNormalization4D")}LRNGrad(t,e,n,r,s,a,i){return xu("LRNGrad")}multinomial(t,e,n,r){return xu("multinomial")}oneHot(t,e,n,r){return xu("oneHot")}cumsum(t,e,n,r){return xu("cumsum")}nonMaxSuppression(t,e,n,r,s){return xu("nonMaxSuppression")}fft(t){return xu("fft")}ifft(t){return xu("ifft")}complex(t,e){return xu("complex")}real(t){return xu("real")}imag(t){return xu("imag")}cropAndResize(t,e,n,r,s,a){return xu("cropAndResize")}depthToSpace(t,e,n){return xu("depthToSpace")}split(t,e,n){return xu("split")}sparseToDense(t,e,n,r){return xu("sparseToDense")}diag(t){return xu("diag")}fill(t,e,n){return xu("fill")}onesLike(t){return xu("onesLike")}zerosLike(t){return xu("zerosLike")}linspace(t,e,n){return xu("linspace")}dispose(){return xu("dispose")}}function xu(t){throw new Error(`'${t}' not yet implemented or not found in the registry. Did you forget to import the kernel?`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */R.a.prototype.add=function(t){return this.throwIfDisposed(),$(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.atan2=function(t){return this.throwIfDisposed(),Ps(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Ws(this,t,e,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),qs(this,t,e,n,r,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Ys(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),An(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof R.a&&(t=[t]),M([this,...t],e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.conv1d=function(t,e,n,r,s,a){return this.throwIfDisposed(),na(this,t,e,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.conv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Te(this,t,e,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),ra(this,t,e,n,r,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Fe(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),ia(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.depthwiseConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),oa(this,t,e,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.depthwiseConv2D=function(t,e,n,r,s,a){return Os("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),oa(this,t,e,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.div=function(t){return this.throwIfDisposed(),K(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.divNoNan=function(t){return this.throwIfDisposed(),la(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.dot=function(t){return this.throwIfDisposed(),ca(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.elu=function(){return this.throwIfDisposed(),ha(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.equal=function(t){return this.throwIfDisposed(),da(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.floorDiv=function(t){return this.throwIfDisposed(),H(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.greater=function(t){return this.throwIfDisposed(),an(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Ze(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.leakyRelu=function(t){return this.throwIfDisposed(),ba(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.less=function(t){return this.throwIfDisposed(),Qe(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.lessEqual=function(t){return this.throwIfDisposed(),on(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),ya(this,t,e,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),we(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.max=function(t,e){return this.throwIfDisposed(),xa(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),wa(this,t,e,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.maximum=function(t){return this.throwIfDisposed(),ga(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.minimum=function(t){return this.throwIfDisposed(),Sa(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.mod=function(t){return this.throwIfDisposed(),ka(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.mul=function(t){return this.throwIfDisposed(),X(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.notEqual=function(t){return this.throwIfDisposed(),Na(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Yr(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.pad=function(t,e){return this.throwIfDisposed(),Dn(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),Ra(this,t,e,n,r,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.pow=function(t){return this.throwIfDisposed(),wn(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.prelu=function(t){return this.throwIfDisposed(),ja(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.relu=function(){return this.throwIfDisposed(),Va(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.relu6=function(){return this.throwIfDisposed(),Ua(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.selu=function(){return this.throwIfDisposed(),qa(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.separableConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Ga(this,t,e,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.split=function(t,e){return this.throwIfDisposed(),Ce(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Ha(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Oe(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.sub=function(t){return this.throwIfDisposed(),Ue(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.tile=function(t){return this.throwIfDisposed(),qe(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
R.a.prototype.transpose=function(t){return this.throwIfDisposed(),_e(this,t)},
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(R.e)(y)},function(t,e,n){"use strict";n.r(e),n.d(e,"shuffle",(function(){return s})),n.d(e,"clamp",(function(){return a})),n.d(e,"nearestLargerEven",(function(){return i})),n.d(e,"sum",(function(){return o})),n.d(e,"randUniform",(function(){return u})),n.d(e,"distSquared",(function(){return l})),n.d(e,"assert",(function(){return c})),n.d(e,"assertShapesMatch",(function(){return h})),n.d(e,"assertNonNull",(function(){return d})),n.d(e,"flatten",(function(){return p})),n.d(e,"sizeFromShape",(function(){return f})),n.d(e,"isScalarShape",(function(){return m})),n.d(e,"arraysEqual",(function(){return g})),n.d(e,"isInt",(function(){return b})),n.d(e,"tanh",(function(){return y})),n.d(e,"sizeToSquarishShape",(function(){return x})),n.d(e,"createShuffledIndices",(function(){return w})),n.d(e,"rightPad",(function(){return v})),n.d(e,"repeatedTry",(function(){return O})),n.d(e,"inferFromImplicitShape",(function(){return S})),n.d(e,"parseAxisParam",(function(){return k})),n.d(e,"squeezeShape",(function(){return C})),n.d(e,"getTypedArrayFromDType",(function(){return N})),n.d(e,"getArrayFromDType",(function(){return I})),n.d(e,"checkConversionForErrors",(function(){return A})),n.d(e,"isValidDtype",(function(){return E})),n.d(e,"hasEncodingLoss",(function(){return T})),n.d(e,"isTypedArray",(function(){return $})),n.d(e,"bytesPerElement",(function(){return R})),n.d(e,"bytesFromStringArray",(function(){return j})),n.d(e,"isString",(function(){return D})),n.d(e,"isBoolean",(function(){return _})),n.d(e,"isNumber",(function(){return F})),n.d(e,"inferDtype",(function(){return M})),n.d(e,"isFunction",(function(){return z})),n.d(e,"nearestDivisor",(function(){return L})),n.d(e,"computeStrides",(function(){return B})),n.d(e,"toTypedArray",(function(){return P})),n.d(e,"toNestedArray",(function(){return W})),n.d(e,"makeOnesTypedArray",(function(){return V})),n.d(e,"makeZerosTypedArray",(function(){return U})),n.d(e,"now",(function(){return q})),n.d(e,"assertNonNegativeIntegerDimensions",(function(){return G})),n.d(e,"fetch",(function(){return H})),n.d(e,"encodeString",(function(){return K})),n.d(e,"decodeString",(function(){return X})),n.d(e,"locToIndex",(function(){return Y})),n.d(e,"indexToLoc",(function(){return J}));var r=n(9);
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function a(t,e,n){return Math.max(t,Math.min(e,n))}function i(t){return t%2==0?t:t+1}function o(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function u(t,e){const n=Math.random();return e*n+(1-n)*t}function l(t,e){let n=0;for(let r=0;r<t.length;r++){const s=Number(t[r])-Number(e[r]);n+=s*s}return n}function c(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function h(t,e,n=""){c(g(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function d(t){c(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function p(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||$(t)&&!n)for(let r=0;r<t.length;++r)p(t[r],e,n);else e.push(t);return e}function f(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function m(t){return 0===t.length}function g(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function b(t){return t%1==0}function y(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function x(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function w(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return s(e),e}function v(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function O(t,e=(t=>0),n){return new Promise((r,s)=>{let a=0;const i=()=>{if(t())return void r();a++;const o=e(a);null!=n&&a>=n?s():setTimeout(i,o)};i()})}function S(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function k(t,e){const n=e.length;return c((t=null==t?e.map((t,e)=>e):[].concat(t)).every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+t),c(t.every(t=>b(t)),()=>"All values in axis param must be integers but got axis "+t),t.map(t=>t<0?n+t:t)}function C(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||s?null:k(e,t).sort();let i=0;for(let e=0;e<t.length;++e){if(null!=a){if(a[i]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==a[i]||a[i]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),a[i]<=e&&i++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function N(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function I(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function A(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function E(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function T(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function $(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function R(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function j(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function D(t){return"string"==typeof t||t instanceof String}function _(t){return"boolean"==typeof t}function F(t){return"number"==typeof t}function M(t){return Array.isArray(t)?M(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":F(t)?"float32":D(t)?"string":_(t)?"bool":"float32"}function z(t){return!!(t&&t.constructor&&t.call&&t.apply)}function L(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function B(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function P(t,e,n){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=p(t)),n&&A(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type "+e)}function W(t,e){if(0===t.length)return e[0];const n=t.reduce((t,e)=>t*e);if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size.`);return function t(e,n,r){const s=new Array;if(1===n.length){const t=n[0];for(let n=0;n<t;n++)s[n]=r[e+n]}else{const a=n[0],i=n.slice(1),o=i.reduce((t,e)=>t*e);for(let n=0;n<a;n++)s[n]=t(e+n*o,i,r)}return s}(0,t,e)}function V(t,e){const n=U(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function U(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function q(){return Object(r.c)().platform.now()}function G(t){t.forEach(e=>{c(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function H(t,e){return Object(r.c)().platform.fetch(t,e)}function K(t,e="utf-8"){return e=e||"utf-8",Object(r.c)().platform.encode(t,e)}function X(t,e="utf-8"){return e=e||"utf-8",Object(r.c)().platform.decode(t,e)}function Y(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function J(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}},function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(t,e,n,r){const a=e.inputParams[t];if(a&&void 0!==a.inputIndexStart){const t=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?t+1:a.inputIndexEnd;if("tensor"===a.type)return s(e.inputNames[a.inputIndexStart],n,r);if("tensors"===a.type){return e.inputNames.slice(t,i).map(t=>s(t,n,r))}const o=Array.prototype.slice.call(s(e.inputNames.slice(t)[0],n,r).dataSync());return"number"===a.type?o[0]:o}const i=e.attrParams[t];return i&&i.value}function s(t,e,n){const[r,s]=u(t),a=n.currentContextIds.find(t=>!!e[o(r,t)]);return void 0!==a?e[o(r,a)][s]:void 0}function a(t,e,n){return e[o(t,n.currentContextId)]}function i(t,e){const[n,r]=u(t);return[o(n,e&&e.currentContextId),r]}function o(t,e){return e?`${t}-${e}`:t}function u(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function l(t,e){const n=[];for(let r=0;r<t.length;r+=e)n.push(t.slice(r,r+e));return n}n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return a})),n.d(e,"a",(function(){return i})),n.d(e,"e",(function(){return u})),n.d(e,"f",(function(){return l}))},function(t,e,n){"use strict";n.d(e,"c",(function(){return o})),n.d(e,"a",(function(){return l})),n.d(e,"b",(function(){return c}));var r=n(5),s=n(9),a=n(7),i=n(1);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e){let n=t;if(Object(i.isTypedArray)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Object(i.isTypedArray)(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Object(s.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(e,n,r){if(r=r||[],!Array.isArray(e)&&!Object(i.isTypedArray)(e))return void Object(i.assert)(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);Object(i.assert)(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${e.length} elements`),Object(i.assert)(e.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${e.length} elements`);const s=n.slice(1);for(let n=0;n<e.length;++n)t(e[n],s,r.concat(n))}(t,r,[]),r}function u(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function l(t,e,n,l="numeric"){if(t instanceof a.a)return u(l,t.dtype,e,n),t;let c=Object(i.inferDtype)(t);if("string"!==c&&["bool","int32","float32"].indexOf(l)>=0&&(c=l),u(l,c,e,n),null==t||!Object(i.isTypedArray)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const h=o(t,c);Object(i.isTypedArray)(t)||Array.isArray(t)||(t=[t]);const d="string"!==c?Object(i.toTypedArray)(t,c,Object(s.c)().getBool("DEBUG")):Object(i.flatten)(t,[],!0);return r.a.makeTensor(d,h,c)}function c(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((t,r)=>l(t,`${e}[${r}]`,n),r)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(5);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));const a=(...t)=>{r.a.startScope(n);try{const e=s(...t);return e instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(e),e}catch(t){throw r.a.endScope(null),t}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}},function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n(9),s=n(27),a=n(15),i=n(1);
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class o{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new u)}profileKernel(t,e,n){let r;const s=this.backendTimer.time(()=>{r=n()});return r.forEach(n=>{n.data().then(r=>{!function(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}}(r,n.dtype,t),s.then(s=>{let a="";null!=s.getExtraProfileInfo&&(a=s.getExtraProfileInfo()),this.logger.logKernelProfile(t,n,r,s.kernelMs,e,a)})})}),r}}class u{logKernelProfile(t,e,n,r,s,a){const o="number"==typeof r?i.rightPad(r+"ms",9):r.error,u=i.rightPad(t,25),l=e.rank,c=e.size,h=i.rightPad(e.shape.toString(),14);let d="";for(const t in s){const n=s[t].shape||e.shape,r=n.length;d+=`${t}: ${r}D ${r>0?n:""} `}console.log(`%c${u}\t%c${o}\t%c${l}D ${h}\t%c${c}\t%c${d}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var l=n(7),c=n(10);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class h{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class d{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new h}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(t+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new o(this.backendInstance),!0}setupRegisteredKernels(){Object(a.c)(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Object(a.c)(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(Promise.resolve(n)===n){const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(t+" backend not found in registry");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return d.nextTensorId++}nextVariableId(){return d.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x:()=>t.toFloat()}),[],{}),e}runKernel(t,e,n,r,s){return this.runKernelFunc(null,e,null,t,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach(t=>{s+="complex64"===t.dtype?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,s,i,o){let u,l=[];const c=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const h=this.state.numBytes,d=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const f=Object(a.b)(r,this.backendName);let m;if(null!=f)p=()=>{const t=this.backend.numDataIds();m=f.kernelFunc({inputs:e,attrs:s,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const a=n.map(({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n));if(c){let t=this.getTensorsForGradient(r,e,a);if(null==t){null==o&&(o=[]);const e=a.filter((t,e)=>o[e]);t=(i||[]).slice().concat(e)}l=this.saveTensorsForBackwardMode(t)}return a};else{const e=t=>{c&&(l=t.map(t=>this.keep(this.clone(t))))};p=()=>{const n=this.backend.numDataIds();m=this.tidy(()=>t(this.backend,e));const s=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{u=this.ENV.getBool("DEBUG")?this.profiler.profileKernel(r,e,()=>p()):p()}),c&&this.addTapeNode(r,e,u,n,l,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-h,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-d,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(t=>e[t].shape),outputShapes:u.map(t=>t.shape)}),Array.isArray(m)?u:u[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=Object(a.a)(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(i.assert(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(t=>e[t])):a=t.map(t=>e[t]);const o=n.filter((t,e)=>s[e]);return a.concat(o)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&i.isString(t[0])&&(s=t.map(t=>i.encodeString(t)));const a=r.write(s,e,n),o=new l.a(e,n,a,this.nextTensorId());if(this.incRef(o,r),"string"===n){const t=this.state.tensorInfo.get(a),e=Object(i.bytesFromStringArray)(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return o}makeTensorFromDataId(t,e,n,r){n=n||"float32";const s=new l.a(e,n,t,this.nextTensorId());return this.incRef(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.asType(r));const s=new l.c(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*i.bytesPerElement(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof l.c||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;return this.state.activeProfile.kernels=[],this.state.activeProfile.result=t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n,this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,o){const u={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},l=Object(a.a)(t);null!=l&&(r=l.gradFunc),null!=r&&(u.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=i.makeZerosTypedArray(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],s,o))),this.state.activeTape.push(u)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Object(c.getTensorsInContainer)(t),n=new Set(e.map(t=>t.id));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n,r=!1){if(i.assert(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));i.assert(s instanceof l.a,()=>"The result y returned by f() must be a tensor.");const a=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const a=t[n],i=a.inputs;for(const t in i){const n=i[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){a.outputs.forEach(t=>r[t.id]=!0),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(a[n.outputs[t].id]){for(const t in r)a[r[t].id]=!0,i[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&i[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,s);if(!r&&0===a.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[s.id]=null==n?function(t){const e=Object(i.makeOnesTypedArray)(Object(i.sizeFromShape)(t),"float32");return p.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n){for(let r=e.length-1;r>=0;r--){const s=e[r],a=[];if(s.outputs.forEach(e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(a);for(const e in s.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const r=n(()=>o[e]());if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${r.dtype}'`);const a=s.inputs[e];if(!i.arraysEqual(r.shape,a.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${e}' has shape '${r.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=r;else{const e=t[a.id];t[a.id]=e.add(r),e.dispose()}}}}(t,a,t=>this.tidy(t));const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(t){return i.assert(i.isFunction(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;i.assert(e.every(t=>t instanceof l.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return e.forEach((t,e)=>{r[e]=t}),this.runKernelFunc((r,s)=>(n=t(...e,s),i.assert(n.value instanceof l.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),i.assert(i.isFunction(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(t,r)=>{const s=n.gradFunc(t,r),a=Array.isArray(s)?s:[s];i.assert(a.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),i.assert(a.every(t=>t instanceof l.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const o={};return a.forEach((t,e)=>{o[e]=()=>t}),o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Object(i.now)(),n=await this.backend.time(t);return n.wallMs=Object(i.now)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new h;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}d.nextTensorId=0,d.nextVariableId=0;const p=function(){const t=Object(s.b)();if(null==t._tfengine){const e=new r.b(t);t._tfengine=new d(e)}return Object(r.d)(t._tfengine.ENV),Object(l.f)(()=>t._tfengine),t._tfengine}()},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return a})),n.d(e,"d",(function(){return i})),n.d(e,"g",(function(){return o})),n.d(e,"e",(function(){return u})),n.d(e,"f",(function(){return l})),n.d(e,"h",(function(){return c})),n.d(e,"i",(function(){return h})),n.d(e,"j",(function(){return d})),n.d(e,"k",(function(){return p})),n.d(e,"l",(function(){return f})),n.d(e,"m",(function(){return m})),n.d(e,"n",(function(){return g})),n.d(e,"o",(function(){return b})),n.d(e,"p",(function(){return y})),n.d(e,"q",(function(){return x})),n.d(e,"r",(function(){return w})),n.d(e,"s",(function(){return v})),n.d(e,"t",(function(){return O})),n.d(e,"u",(function(){return S})),n.d(e,"v",(function(){return k})),n.d(e,"w",(function(){return C})),n.d(e,"x",(function(){return N})),n.d(e,"y",(function(){return I})),n.d(e,"z",(function(){return A})),n.d(e,"A",(function(){return E})),n.d(e,"B",(function(){return T})),n.d(e,"D",(function(){return $})),n.d(e,"C",(function(){return R})),n.d(e,"F",(function(){return j})),n.d(e,"G",(function(){return D})),n.d(e,"H",(function(){return _})),n.d(e,"I",(function(){return F})),n.d(e,"J",(function(){return M})),n.d(e,"K",(function(){return z})),n.d(e,"N",(function(){return L})),n.d(e,"O",(function(){return B})),n.d(e,"L",(function(){return P})),n.d(e,"M",(function(){return W})),n.d(e,"P",(function(){return V})),n.d(e,"V",(function(){return U})),n.d(e,"Q",(function(){return q})),n.d(e,"T",(function(){return G})),n.d(e,"R",(function(){return H})),n.d(e,"S",(function(){return K})),n.d(e,"U",(function(){return X})),n.d(e,"W",(function(){return Y})),n.d(e,"X",(function(){return J})),n.d(e,"Y",(function(){return Z})),n.d(e,"bb",(function(){return Q})),n.d(e,"Z",(function(){return tt})),n.d(e,"ab",(function(){return et})),n.d(e,"cb",(function(){return nt})),n.d(e,"db",(function(){return rt})),n.d(e,"eb",(function(){return st})),n.d(e,"fb",(function(){return at})),n.d(e,"gb",(function(){return it})),n.d(e,"hb",(function(){return ot})),n.d(e,"ib",(function(){return ut})),n.d(e,"jb",(function(){return lt})),n.d(e,"kb",(function(){return ct})),n.d(e,"lb",(function(){return ht})),n.d(e,"mb",(function(){return dt})),n.d(e,"nb",(function(){return pt})),n.d(e,"pb",(function(){return ft})),n.d(e,"ob",(function(){return mt})),n.d(e,"qb",(function(){return gt})),n.d(e,"rb",(function(){return bt})),n.d(e,"sb",(function(){return yt})),n.d(e,"E",(function(){return xt}));const r="Add",s="AddN",a="Atan2",i="AvgPool",o="AvgPoolBackprop",u="AvgPool3D",l="AvgPool3DBackprop",c="BatchMatMul",h="BatchToSpaceND",d="BroadcastTo",p="Complex",f="Concat",m="Conv2D",g="Conv2DBackpropFilter",b="Conv2DBackpropInput",y="Conv3D",x="Conv3DBackpropFilterV2",w="Conv3DBackpropInputV2",v="Cumsum",O="DepthToSpace",S="DepthwiseConv2dNative",k="DepthwiseConv2dNativeBackpropFilter",C="DepthwiseConv2dNativeBackpropInput",N="Diag",I="Div",A="Elu",E="EluGrad",T="Equal",$="FloorDiv",R="Fill",j="FusedBatchNorm",D="GatherNd",_="Greater",F="GreaterEqual",M="Identity",z="Imag",L="Less",B="LessEqual",P="LRN",W="LRNBackprop",V="Max",U="Maximum",q="MaxPool",G="MaxPoolBackprop",H="MaxPool3D",K="MaxPool3DBackprop",X="MaxPoolWithArgmax",Y="Minimum",J="Mod",Z="Multiply",Q="NotEqual",tt="NonMaxSuppressionV3",et="NonMaxSuppressionV5",nt="OneHot",rt="PadV2",st="Pool",at="Pow",it="Prelu",ot="Real",ut="Relu",lt="Relu6",ct="SelectV2",ht="Selu",dt="SpaceToBatchND",pt="SplitV",ft="SquaredDifference",mt="Square",gt="Sub",bt="Tile",yt="Transpose",xt="FromPixels"},function(t,e,n){"use strict";n.d(e,"b",(function(){return u})),n.d(e,"f",(function(){return d})),n.d(e,"e",(function(){return p})),n.d(e,"d",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"c",(function(){return g}));var r=n(1);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s(t,e,n,s){const u=Object(r.computeStrides)(e),l=function(t,e,n,s){const i=Object(r.sizeFromShape)(e),u=s[s.length-1],l=new Array(u).fill(0),c=e.length,h="complex64"===n?o(t):t;if(c>1)for(let t=0;t<i/u;t++){const e=t*u;for(let t=0;t<u;t++)l[t]=Math.max(l[t],a(h[e+t],0,n).length)}return l}(t,e,n,u),c=e.length,h=function t(e,n,r,s,u,l=!0){const c="complex64"===r?2:1,h=n[0],d=n.length;if(0===d){if("complex64"===r){return[a(o(e)[0],0,r)]}return"bool"===r?[i(e[0])]:[e[0].toString()]}if(1===d){if(h>20){const t=3*c;let n=Array.from(e.slice(0,t)),s=Array.from(e.slice((h-3)*c,h*c));return"complex64"===r&&(n=o(n),s=o(s)),["["+n.map((t,e)=>a(t,u[e],r)).join(", ")+", ..., "+s.map((t,e)=>a(t,u[h-3+e],r)).join(", ")+"]"]}return["["+("complex64"===r?o(e):Array.from(e)).map((t,e)=>a(t,u[e],r)).join(", ")+"]"]}const p=n.slice(1),f=s.slice(1),m=s[0]*c,g=[];if(h>20){for(let n=0;n<3;n++){const s=n*m,a=s+m;g.push(...t(e.slice(s,a),p,r,f,u,!1))}g.push("...");for(let n=h-3;n<h;n++){const s=n*m,a=s+m;g.push(...t(e.slice(s,a),p,r,f,u,n===h-1))}}else for(let n=0;n<h;n++){const s=n*m,a=s+m;g.push(...t(e.slice(s,a),p,r,f,u,n===h-1))}const b=2===d?",":"";g[0]="["+g[0]+b;for(let t=1;t<g.length-1;t++)g[t]=" "+g[t]+b;let y=",\n";for(let t=2;t<d;t++)y+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(l?"":y),g}(t,e,n,u,l),d=["Tensor"];return s&&(d.push("  dtype: "+n),d.push("  rank: "+c),d.push(`  shape: [${e}]`),d.push("  values:")),d.push(h.map(t=>"    "+t).join("\n")),d.join("\n")}function a(t,e,n){let s;return s=Array.isArray(t)?parseFloat(t[0].toFixed(7))+" + "+parseFloat(t[1].toFixed(7))+"j":Object(r.isString)(t)?`'${t}'`:"bool"===n?i(t):parseFloat(t.toFixed(7)).toString(),Object(r.rightPad)(s,e)}function i(t){return 0===t?"false":"true"}function o(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=r.sizeFromShape(t),null!=n){const t=n.length;r.assert(t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.getArrayFromDType(e,this.size),this.strides=Object(r.computeStrides)(t)}set(t,...e){0===e.length&&(e=[0]),r.assert(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=`+this.shape;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return l().makeTensor(this.values,this.shape,this.dtype)}}let l=null,c=null,h=null;function d(t){l=t}function p(t){c=t}function f(t){h=t}class m{constructor(t,e,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=r.sizeFromShape(t),this.strides=Object(r.computeStrides)(t),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}flatten(){return this.throwIfDisposed(),this.as1D()}asScalar(){return this.throwIfDisposed(),r.assert(1===this.size,()=>"The array must have only 1 element."),this.reshape([])}as1D(){return this.throwIfDisposed(),this.reshape([this.size])}as2D(t,e){return this.throwIfDisposed(),this.reshape([t,e])}as3D(t,e,n){return this.throwIfDisposed(),this.reshape([t,e,n])}as4D(t,e,n,r){return this.throwIfDisposed(),this.reshape([t,e,n,r])}as5D(t,e,n,r,s){return this.throwIfDisposed(),this.reshape([t,e,n,r,s])}asType(t){return this.throwIfDisposed(),c.cast(this,t)}get rank(){return this.shape.length}async buffer(){const t=await this.data();return c.buffer(this.shape,this.dtype,t)}bufferSync(){return c.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Object(r.toNestedArray)(this.shape,t)}arraySync(){return Object(r.toNestedArray)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=l().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map(t=>r.decodeString(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=l().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>r.decodeString(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await l().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(l().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}toFloat(){return this.asType("float32")}toInt(){return this.asType("int32")}toBool(){return this.asType("bool")}print(t=!1){return c.print(this,t)}reshape(t){return this.throwIfDisposed(),c.reshape(this,t)}reshapeAs(t){return this.throwIfDisposed(),this.reshape(t.shape)}expandDims(t=0){return c.expandDims(this,t)}squeeze(t){return this.throwIfDisposed(),c.squeeze(this,t)}clone(){return this.throwIfDisposed(),c.clone(this)}toString(t=!1){return s(this.dataSync(),this.shape,this.dtype,t)}gather(t,e=0){return this.throwIfDisposed(),c.gather(this,t,e)}norm(t="euclidean",e=null,n=!1){return this.throwIfDisposed(),c.norm(this,t,e,n)}slice(t,e){return this.throwIfDisposed(),c.slice(this,t,e)}reverse(t){return this.throwIfDisposed(),c.reverse(this,t)}stack(t,e=0){return c.stack([this,t],e)}unstack(t=0){return c.unstack(this,t)}all(t=null,e=!1){return this.throwIfDisposed(),c.all(this,t,e)}any(t=null,e=!1){return this.throwIfDisposed(),c.any(this,t,e)}logSumExp(t=null,e=!1){return this.throwIfDisposed(),c.logSumExp(this,t,e)}sum(t=null,e=!1){return this.throwIfDisposed(),c.sum(this,t,e)}prod(t=null,e=!1){return this.throwIfDisposed(),c.prod(this,t,e)}mean(t=null,e=!1){return this.throwIfDisposed(),c.mean(this,t,e)}min(t=null,e=!1){return this.throwIfDisposed(),c.min(this,t,e)}argMin(t=null){return this.throwIfDisposed(),c.argMin(this,t)}argMax(t=null){return this.throwIfDisposed(),c.argMax(this,t)}cast(t){return this.throwIfDisposed(),c.cast(this,t)}addStrict(t){return this.throwIfDisposed(),c.addStrict(this,t)}subStrict(t){return this.throwIfDisposed(),c.subStrict(this,t)}powStrict(t){return this.throwIfDisposed(),c.powStrict(this,t)}mulStrict(t){return this.throwIfDisposed(),c.mulStrict(this,t)}divStrict(t){return this.throwIfDisposed(),c.divStrict(this,t)}minimumStrict(t){return this.throwIfDisposed(),c.minimumStrict(this,t)}maximumStrict(t){return this.throwIfDisposed(),c.maximumStrict(this,t)}modStrict(t){return this.throwIfDisposed(),c.modStrict(this,t)}squaredDifferenceStrict(t){return this.throwIfDisposed(),c.squaredDifferenceStrict(this,t)}notEqualStrict(t){return this.throwIfDisposed(),c.notEqualStrict(this,t)}lessStrict(t){return this.throwIfDisposed(),c.lessStrict(this,t)}equalStrict(t){return this.throwIfDisposed(),c.equalStrict(this,t)}lessEqualStrict(t){return this.throwIfDisposed(),c.lessEqualStrict(this,t)}greaterStrict(t){return this.throwIfDisposed(),c.greaterStrict(this,t)}greaterEqualStrict(t){return this.throwIfDisposed(),c.greaterEqualStrict(this,t)}logicalAnd(t){return this.throwIfDisposed(),c.logicalAnd(this,t)}logicalOr(t){return this.throwIfDisposed(),c.logicalOr(this,t)}logicalNot(){return this.throwIfDisposed(),c.logicalNot(this)}logicalXor(t){return this.throwIfDisposed(),c.logicalXor(this,t)}where(t,e){return this.throwIfDisposed(),c.where(t,this,e)}neg(){return this.throwIfDisposed(),c.neg(this)}ceil(){return this.throwIfDisposed(),c.ceil(this)}floor(){return this.throwIfDisposed(),c.floor(this)}sign(){return this.throwIfDisposed(),c.sign(this)}isNaN(){return this.throwIfDisposed(),c.isNaN(this)}isInf(){return this.throwIfDisposed(),c.isInf(this)}isFinite(){return this.throwIfDisposed(),c.isFinite(this)}exp(){return this.throwIfDisposed(),c.exp(this)}expm1(){return this.throwIfDisposed(),c.expm1(this)}log(){return this.throwIfDisposed(),c.log(this)}log1p(){return this.throwIfDisposed(),c.log1p(this)}sqrt(){return this.throwIfDisposed(),c.sqrt(this)}rsqrt(){return this.throwIfDisposed(),c.rsqrt(this)}square(){return this.throwIfDisposed(),c.square(this)}reciprocal(){return this.throwIfDisposed(),c.reciprocal(this)}abs(){return this.throwIfDisposed(),c.abs(this)}clipByValue(t,e){return this.throwIfDisposed(),c.clipByValue(this,t,e)}sigmoid(){return this.throwIfDisposed(),c.sigmoid(this)}logSigmoid(){return this.throwIfDisposed(),c.logSigmoid(this)}softplus(){return this.throwIfDisposed(),c.softplus(this)}zerosLike(){return this.throwIfDisposed(),c.zerosLike(this)}onesLike(){return this.throwIfDisposed(),c.onesLike(this)}sin(){return this.throwIfDisposed(),c.sin(this)}cos(){return this.throwIfDisposed(),c.cos(this)}tan(){return this.throwIfDisposed(),c.tan(this)}asin(){return this.throwIfDisposed(),c.asin(this)}acos(){return this.throwIfDisposed(),c.acos(this)}atan(){return this.throwIfDisposed(),c.atan(this)}sinh(){return this.throwIfDisposed(),c.sinh(this)}cosh(){return this.throwIfDisposed(),c.cosh(this)}tanh(){return this.throwIfDisposed(),c.tanh(this)}asinh(){return this.throwIfDisposed(),c.asinh(this)}acosh(){return this.throwIfDisposed(),c.acosh(this)}atanh(){return this.throwIfDisposed(),c.atanh(this)}erf(){return this.throwIfDisposed(),c.erf(this)}round(){return this.throwIfDisposed(),c.round(this)}step(t=0){return this.throwIfDisposed(),c.step(this,t)}softmax(t=-1){return this.throwIfDisposed(),c.softmax(this,t)}logSoftmax(t=-1){return this.throwIfDisposed(),c.logSoftmax(this,t)}resizeBilinear(t,e=!1){return this.throwIfDisposed(),c.image.resizeBilinear(this,t,e)}resizeNearestNeighbor(t,e=!1){return this.throwIfDisposed(),c.image.resizeNearestNeighbor(this,t,e)}variable(t=!0,e,n){return this.throwIfDisposed(),l().makeVariable(this,t,e,n)}unsortedSegmentSum(t,e){return this.throwIfDisposed(),c.unsortedSegmentSum(this,t,e)}topk(t=1,e=!0){return this.throwIfDisposed(),c.topk(this,t,e)}stridedSlice(t,e,n,r=0,s=0,a=0,i=0,o=0){return this.throwIfDisposed(),c.stridedSlice(this,t,e,n,r,s,a,i,o)}fft(){return this.throwIfDisposed(),c.spectral.fft(this)}ifft(){return this.throwIfDisposed(),c.spectral.ifft(this)}rfft(){return this.throwIfDisposed(),c.spectral.rfft(this)}irfft(){return this.throwIfDisposed(),c.spectral.irfft(this)}}Object.defineProperty(m,Symbol.hasInstance,{value:t=>!!t&&null!=t.dataId&&null!=t.shape&&null!=t.dtype});class g extends m{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!r.arraysEqual(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);l().disposeTensor(this),this.dataId=t.dataId,l().incRef(this,null)}dispose(){l().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(g,Symbol.hasInstance,{value:t=>t instanceof m&&null!=t.assign&&t.assign instanceof Function})},function(t,e,n){"use strict";n.d(e,"a",(function(){return S})),n.d(e,"b",(function(){return v})),n.d(e,"d",(function(){return k})),n.d(e,"e",(function(){return p})),n.d(e,"f",(function(){return h})),n.d(e,"g",(function(){return f})),n.d(e,"h",(function(){return m})),n.d(e,"i",(function(){return g})),n.d(e,"j",(function(){return b})),n.d(e,"k",(function(){return y})),n.d(e,"l",(function(){return x})),n.d(e,"m",(function(){return w})),n.d(e,"n",(function(){return O})),n.d(e,"c",(function(){return C})),n.d(e,"o",(function(){return N}));var r=n(5),s=n(9),a=n(3),i=n(1),o=n(16),u=n(23),l=n(4),c=n(20);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function h(t,e,n){return d(t,e,Object(a.c)(t,n),n)}function d(t,e,n,a){if(null==a&&(a=Object(i.inferDtype)(t)),"complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(i.isTypedArray)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(i.assertNonNegativeIntegerDimensions)(e);const t=Object(i.sizeFromShape)(e),r=Object(i.sizeFromShape)(n);Object(i.assert)(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==Object(i.sizeFromShape)(e.slice(t));Object(i.assert)(n[t]===e[t]||!s,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return Object(i.isTypedArray)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==a?Object(i.toTypedArray)(t,a,Object(s.c)().getBool("DEBUG")):Object(i.flatten)(t,[],!0),r.a.makeTensor(t,e,a)}function p(t,e){if((Object(i.isTypedArray)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(i.isTypedArray)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return d(t,[],[],e)}function f(t,e){Object(i.assertNonNull)(t);const n=Object(a.c)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return d(t,null,n,e)}function m(t,e,n){if(Object(i.assertNonNull)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(a.c)(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return d(t,e,r,n)}function g(t,e,n){if(Object(i.assertNonNull)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Object(a.c)(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return d(t,e,r,n)}function b(t,e,n){if(Object(i.assertNonNull)(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(a.c)(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return d(t,e,r,n)}function y(t,e,n){if(Object(i.assertNonNull)(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(a.c)(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return d(t,e,r,n)}function x(t,e,n){if(Object(i.assertNonNull)(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(a.c)(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return d(t,e=e||r,r,n)}function w(t,e=!0,n,s){return r.a.makeVariable(t,e,n,s)}function v(t,e="float32"){if("complex64"===e){const e=v(t,"float32"),n=O(t,"float32");return Object(o.a)(e,n)}const n=Object(i.makeOnesTypedArray)(Object(i.sizeFromShape)(t),e);return r.a.makeTensor(n,t,e)}function O(t,e="float32"){if("complex64"===e){const e=O(t,"float32"),n=O(t,"float32");return Object(o.a)(e,n)}const n=Object(i.makeZerosTypedArray)(Object(i.sizeFromShape)(t),e);return r.a.makeTensor(n,t,e)}function S(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");return r.a.runKernelFunc(r=>r.linspace(t,e,n),{})}function k(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");if(t===e||t<e&&n<0||e<t&&n>1)return O([0],r);const s=Math.abs(Math.ceil((e-t)/n)),a=Object(i.makeZerosTypedArray)(s,r);e<t&&1===n&&(n=-1),a[0]=t;for(let t=1;t<a.length;t++)a[t]=a[t-1]+n;return f(a,r)}const C=Object(l.a)({onesLike_:function(t){const e=Object(a.a)(t,"x","onesLike");if("complex64"===e.dtype){const t=C(Object(c.a)(e)),n=N(Object(u.a)(e));return Object(o.a)(t,n)}return r.a.runKernelFunc(t=>t.onesLike(e),{x:e},(t,e)=>({x:()=>N(t)}),"OnesLike")}}),N=Object(l.a)({zerosLike_:function(t){const e=Object(a.a)(t,"x","zerosLike");return r.a.runKernelFunc(t=>t.zerosLike(e),{x:e},(t,e)=>({x:()=>N(t)}),"ZerosLike")}})},function(t,e,n){"use strict";n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return s})),n.d(e,"a",(function(){return a})),n.d(e,"d",(function(){return i}));class r{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(e instanceof Promise)throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("="))),e}(this.global.location.search);if("tfjsflags"in t){t.tfjsflags.split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)})}}}function s(){return a}let a=null;function i(t){a=t}},function(t,e,n){"use strict";n.r(e),n.d(e,"makeTypesMatch",(function(){return i})),n.d(e,"assertTypesMatch",(function(){return o})),n.d(e,"isTensorInList",(function(){return u})),n.d(e,"getTensorsInContainer",(function(){return l}));var r=n(7),s=n(21),a=n(1);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e){if(t.dtype===e.dtype)return[t,e];const n=Object(s.c)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function o(t,e){Object(a.assert)(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function u(t,e){return e.some(e=>e.id===t.id)}function l(t){const e=[];return function t(e,n,s){if(null==e)return;if(e instanceof r.a)return void n.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const i=e;for(const e in i){const r=i[e];s.has(r)||(s.add(r),t(r,n,s))}}(t,e,new Set),e}},function(t,e,n){"use strict";(function(t){n.d(e,"f",(function(){return o})),n.d(e,"e",(function(){return u})),n.d(e,"a",(function(){return d})),n.d(e,"b",(function(){return p})),n.d(e,"d",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"g",(function(){return g}));var r=n(16),s=n(8),a=n(1),i=n(28);async function o(t,e){const n=[],r=[],s=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(t)?t[a].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise(async t=>{const e=await o.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}t(r)});r.push(t)}else r.push(o.data());null!=e&&(u.group=e),n.push(u)}return{data:l(await Promise.all(r)),specs:n}}function u(t,e){const n={};let o,u=0;for(const l of e){const e=l.name,c=l.dtype,h=l.shape,d=Object(a.sizeFromShape)(h);let p;if("quantization"in l){const n=l.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${l.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${l.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==c)throw new Error(`Weight ${l.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${c}.`)}const r=i.a[n.dtype],s=t.slice(u,u+d*r),a="uint8"===n.dtype?new Uint8Array(s):new Uint16Array(s);if("float32"===c)if("uint8"===n.dtype||"uint16"===n.dtype){p=new Float32Array(a.length);for(let t=0;t<a.length;t++){const e=a[t];p[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===o&&(o=b()),p=o(a)}else{if("int32"!==c)throw new Error(`Unsupported dtype in weight '${e}': ${c}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);p=new Int32Array(a.length);for(let t=0;t<a.length;t++){const e=a[t];p[t]=Math.round(e*n.scale+n.min)}}u+=d*r}else if("string"===c){const e=Object(a.sizeFromShape)(l.shape);p=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(u,u+4))[0];u+=4;const n=new Uint8Array(t.slice(u,u+e));p.push(n),u+=e}}else{const a=i.a[c],o=t.slice(u,u+d*a);if("float32"===c)p=new Float32Array(o);else if("int32"===c)p=new Int32Array(o);else if("bool"===c)p=new Uint8Array(o);else{if("complex64"!==c)throw new Error(`Unsupported dtype in weight '${e}': ${c}`);{p=new Float32Array(o);const t=new Float32Array(p.length/2),a=new Float32Array(p.length/2);for(let e=0;e<t.length;e++)t[e]=p[2*e],a[e]=p[2*e+1];const i=Object(s.f)(t,h,"float32"),u=Object(s.f)(a,h,"float32");n[e]=Object(r.a)(i,u)}}u+=d*a}"complex64"!==c&&(n[e]=Object(s.f)(p,h,c))}return n}function l(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)});const r=new Uint8Array(e);let s=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength}),r.buffer}const c=void 0!==t&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function h(e){return c?t.byteLength(e):new Blob([e]).size}function d(e){if(c)return t.from(e).toString("base64");const n=new Uint8Array(e);let r="";for(let t=0,e=n.length;t<e;t++)r+=String.fromCharCode(n[t]);return btoa(r)}function p(e){if(c){const n=t.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(e),r=new Uint8Array(n.length);for(let t=0;t<n.length;++t)r.set([n.charCodeAt(t)],t);return r.buffer}function f(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function m(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function g(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:h(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:h(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function b(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=t[n[i>>10]+(1023&i)]+e[i>>10];a[s]=o}return new Float32Array(s)}}}).call(this,n(33).Buffer)},function(t,e,n){"use strict";n.d(e,"f",(function(){return c})),n.d(e,"e",(function(){return h})),n.d(e,"d",(function(){return d})),n.d(e,"g",(function(){return p})),n.d(e,"a",(function(){return f})),n.d(e,"b",(function(){return C})),n.d(e,"c",(function(){return r}));var r,s=n(0),a=n(18),i=n(17);function o(t){return t instanceof s.Tensor?{value:t.clone(),recurse:!1}:Object(i.e)(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class u{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class l extends u{constructor(){super(l.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function c(t){return new m(t)}function h(t){return new g(t)}function d(t,e){return new I(t,e)}function p(t,e=r.FAIL){return new A(t,e)}l.INITIAL_CAPACITY=32;class f{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new S(this,t)}filter(t){return new v(this,t)}map(t){return new O(this,t)}mapAsync(t){return new k(this,t)}serialMapAsync(t){return new k(this,t).serial()}flatmap(t){return new N(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(t=>!0===t)}rowMajorBatch(t,e=!0){return new w(this,t,e)}columnMajorBatch(t,e=!0,n=i.f){return this.rowMajorBatch(t,e).map(t=>Object(i.d)(t,n))}concatenate(t,e){return new I(c([this,t]),e)}take(t){return t<0||null==t?this:new x(this,t)}skip(t){return t<0||null==t?this:new y(this,t)}prefetch(t){return new E(this,t)}shuffle(t,e){return new T(this,t,e)}serial(){return new b(this)}}class m extends f{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,Object(i.b)(e,o)),done:!1};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var e}}class g extends f{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: "+t.message,t}}}class b extends f{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class y extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;s.dispose(t.value)}return this.upstream.next()}}class x extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class w extends f{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class v extends f{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;s.dispose(t.value)}}}class O extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Map"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=s.tensor_util.getTensorsInContainer(t.value),n=this.transform(t.value),r=s.tensor_util.getTensorsInContainer(n);for(const t of e)s.tensor_util.isTensorInList(t,r)||t.dispose();return{value:n,done:!1}}}class S extends f{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class k extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=s.tensor_util.getTensorsInContainer(t.value),n=await this.transform(t.value),r=s.tensor_util.getTensorsInContainer(n);for(const t of e)s.tensor_util.isTensorInList(t,r)||t.dispose();return{value:n,done:!1}}}class C extends f{constructor(){super(),this.outputQueue=new l,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class N extends C{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=s.tensor_util.getTensorsInContainer(t.value),n=this.transform(t.value),r=s.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const t of e)s.tensor_util.isTensorInList(t,r)||t.dispose();return!0}}class I extends f{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(r||(r={}));class A extends f{constructor(t,e=r.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;const s=await Object(i.c)(this.iterators,(function(t){if(t instanceof f){return{value:t.next().then(t=>(e++,t.done&&n++,t.value)),recurse:!1}}return{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class E extends f{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new u(e)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class T extends E{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=a.alea(n||s.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return S})),n.d(e,"i",(function(){return C})),n.d(e,"c",(function(){return N})),n.d(e,"f",(function(){return I})),n.d(e,"e",(function(){return T})),n.d(e,"d",(function(){return $})),n.d(e,"k",(function(){return j})),n.d(e,"g",(function(){return D})),n.d(e,"h",(function(){return _})),n.d(e,"j",(function(){return F})),n.d(e,"b",(function(){return M}));var r=n(0),s=n(19),a=n(22),i=n(2),o=n(35),u=n(36),l=n(37),c=n(38),h=n(39),d=n(40),p=n(41),f=n(42),m=n(43),g=n(44),b=n(45),y=n(46),x=n(47),w=n(48),v=n(49),O=n(50);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class S{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[o,u,l,c,h,d,p,g,m,f,b,y,x,w,v,O].map(t=>t.json));this.opMappers=t.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t,e={}){const n=t.node,r=[],s=[],a=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")&&r.push(t[e.name]),"Const"===e.op&&s.push(t[e.name]),t),{});let o=[];const u=[];let l={},c={};null!=e&&(l=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(a);h.forEach(t=>{const e=a[t];e.inputNames.forEach(t=>{const[n]=Object(i.a)(t);e.inputs.push(a[n]),a[n].children.push(e)})}),0===Object.keys(c).length?h.forEach(t=>{const e=a[t];0===e.children.length&&u.push(e)}):Object.keys(c).forEach(t=>{const[e]=Object(i.a)(t),n=a[e];null!=n&&(n.signatureKey=c[t],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(t=>{const[e]=Object(i.a)(t),n=a[e];n&&(n.signatureKey=l[t],o.push(n))}):o=r;let d={};return null!=t.library&&null!=t.library.function&&(d=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{})),{nodes:a,inputs:o,outputs:u,weights:s,placeholders:r,signature:e,functions:d}}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=Object(a.a)(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.substr(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const r=n.type;let s=void 0;switch(n.type){case"string":s=C(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=C(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=_(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=_(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=I(t.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=I(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=D(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=D(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=N(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=N(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=M(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=M(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=j(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=j(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=F(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=F(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=T(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=T(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=$(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=$(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=E(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=E(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:s,type:r},e},{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t),{}));const s=[],a=[];t.signature.inputArg.forEach(t=>{const[e]=Object(i.a)(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:A(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,s.push(n),r[e]=n});Object.keys(r).forEach(t=>{const e=r[t];e.inputNames.forEach(t=>{const[n]=Object(i.a)(t);e.inputs.push(r[n]),r[n].children.push(e)})});const o=t.ret;t.signature.outputArg.forEach(t=>{const[e,n]=Object(i.a)(o[t.name]),s=r[e];null!=s&&(s.defaultOutput=n,a.push(s))});const u=this.mapArgsToSignature(t);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:u}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function k(e,n){const s=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const n=Object(r.env)().global;if(void 0!==n.atob)return n.atob(e);if(void 0!==t)return new t(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return n?s:s.toLowerCase()}function C(t,e,n,r=!1){const s=t[e];return null!=s?k(s.s,r):n}function N(t,e,n){const r=t[e];return r?r.b:n}function I(t,e,n){const r=t[e]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function A(t){switch("string"==typeof t&&(t=s.a[t]),t){case s.a.DT_FLOAT:return"float32";case s.a.DT_INT32:case s.a.DT_INT64:case s.a.DT_INT8:case s.a.DT_UINT8:return"int32";case s.a.DT_BOOL:return"bool";case s.a.DT_DOUBLE:return"float32";case s.a.DT_STRING:return"string";default:return null}}function E(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function T(t,e,n){const r=t[e];return r&&r.type?A(r.type):n}function $(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>A(t)):n}function R(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"==typeof t.size?t.size:parseInt(t.size,10)):[]}function j(t,e,n){const r=t[e];return r&&r.shape?R(r.shape):n}function D(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"==typeof t?t:parseInt(t,10)):n}function _(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map(t=>k(t,r)):n}function F(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>R(t)):n}function M(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n(33).Buffer)},function(t,e){t.exports=function(){throw new Error("define cannot be used indirect")}},function(t,e,n){"use strict";n.d(e,"b",(function(){return i})),n.d(e,"a",(function(){return o})),n.d(e,"c",(function(){return u})),n.d(e,"e",(function(){return l})),n.d(e,"d",(function(){return c})),n.d(e,"g",(function(){return h})),n.d(e,"f",(function(){return d}));var r=n(27);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s=Object(r.a)("kernelRegistry",()=>new Map),a=Object(r.a)("gradRegistry",()=>new Map);function i(t,e){const n=p(t,e);return s.get(n)}function o(t){return a.get(t)}function u(t){const e=s.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===t&&n.push(i)}return n}function l(t){const{kernelName:e,backendName:n}=t,r=p(e,n);s.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),s.set(r,t)}function c(t){const{kernelName:e}=t;a.has(e)&&console.warn(`Overriding the gradient for '${e}'`),a.set(e,t)}function h(t,e){const n=p(t,e);if(!s.has(n))throw new Error(`The kernel '${t}' for backend '${e}' is not registered`);s.delete(n)}function d(t){if(!a.has(t))throw new Error(`The gradient '${t}' for backend is not registered`);a.delete(t)}function p(t,e){return`${e}_${t}`}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),s=n(6),a=n(3),i=n(1),o=n(4);const u=Object(o.a)({complex_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n=Object(a.a)(t,"real","complex"),o=Object(a.a)(e,"imag","complex");i.assertShapesMatch(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.a.runKernelFunc(t=>t.complex(n,o),u,null,s.k)}})},function(t,e,n){"use strict";n.d(e,"b",(function(){return s})),n.d(e,"d",(function(){return i})),n.d(e,"f",(function(){return o})),n.d(e,"c",(function(){return u})),n.d(e,"e",(function(){return l})),n.d(e,"a",(function(){return c}));var r=n(0);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function s(t,e){return a(t,e)}function a(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(l(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const o=a(t[i],e,n,r);s[i]=o}return r.delete(t),s}throw new Error("Can't recurse into non-iterable type: "+t)}return n.set(t,s.value),s.value}function i(t,e=o){return function t(e,n,r=new Set){const s=e[0];if(r.has(s))throw new Error("Circular references are not supported.");const a=n(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(l(s)){const a=Array.isArray(s)?[]:{};r.add(s);for(const i in s){const s=e.map(t=>t[i]),o=t(s,n,r);a[i]=o}return r.delete(s),a}throw new Error("Can't recurse into non-iterable type: "+s)}return a.value}(t,e)}function o(t){return null===t?null:l(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function u(t,e){const n=new Map;a(t,e,n);for(const t of Array.from(n.keys())){const e=n.get(t);if(e instanceof Promise){const r=await e;n.set(t,r)}}return a(t,e,n)}function l(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof r.Tensor))}function c(t){return null==t||(null===(e=t)||"object"!=typeof e&&"function"!=typeof e)||Array.isArray(t)||"object"==typeof t&&t instanceof r.Tensor||r.util.isTypedArray(t);var e}},function(t,e,n){var r=n(61),s=n(62),a=n(63),i=n(64),o=n(65),u=n(66),l=n(67);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,t.exports=l},function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var r,s;n.d(e,"a",(function(){return r})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(r||(r={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(s||(s={}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(5),s=n(6),a=n(3),i=n(4);const o=Object(i.a)({real_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e=Object(a.a)(t,"input","real"),n={input:e};return r.a.runKernelFunc(t=>t.real(e),n,null,s.hb)}})},function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r,s,a,i,o;n.d(e,"a",(function(){return r})),n.d(e,"c",(function(){return l})),n.d(e,"b",(function(){return c})),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(r||(r={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(s||(s={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(a||(a={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(i||(i={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(o||(o={}));const u={float32:i,int32:s,bool:a,complex64:o};function l(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return u[t][e]}function c(t){return l(t,"int32")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={};function s(t){return r[t]}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(5),s=n(6),a=n(3),i=n(4);const o=Object(i.a)({imag_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e=Object(a.a)(t,"input","imag"),n={input:e};return r.a.runKernelFunc(t=>t.imag(e),n,null,s.K)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return x})),n.d(e,"b",(function(){return w}));var r=n(0),s=n(13),a=n(2);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class i{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(t=>this.getInput(t)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((t,e)=>(t[e]=this.getAttr(e),t),{}))}getInput(t){return Object(a.c)(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return Object(a.c)(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(s.f)(this.node.rawAttrs,t,e);if(null!=n.s)return Object(s.i)(this.node.rawAttrs,t,e);if(null!=n.b)return Object(s.c)(this.node.rawAttrs,t,e);if(null!=n.shape)return Object(s.k)(this.node.rawAttrs,t,e);if(null!=n.type)return Object(s.e)(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(s.g)(this.node.rawAttrs,t,e);if(null!=n.list.s)return Object(s.h)(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Object(s.j)(this.node.rawAttrs,t,e);if(null!=n.list.b)return Object(s.b)(this.node.rawAttrs,t,e);if(null!=n.list.type)return Object(s.d)(this.node.rawAttrs,t,e)}return e}}var o=n(22);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n=""){r.util.assert(function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t,e),()=>n+` Shapes ${t} and ${e} must match`)}class l{constructor(t,e,n,r,s,a,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.id=l.nextId++}get closed(){return this.closed_}clearAndClose(){this.tensors.forEach(t=>t.tensor.dispose()),this.tensors=[],this.closed_=!0}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),u(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n&&n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n&&n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((t,n)=>this.write(t,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Object(r.tensor)([],[0].concat(this.elementShape));const n=this.readMany(t);return u(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(r.stack)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return Object(r.tensor)([],[0].concat(this.elementShape));const e=[];for(let t=0;t<this.size();t++)e.push(t);const n=this.readMany(e);return u(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(r.concat)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Object(r.unstack)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const s=t.map(t=>(n+=t,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:e.size/n,i=[];Object(r.tidy)(()=>{e=e.reshape([1,n,a]);for(let n=0;n<t.length;++n){const o=[0,0===n?0:s[n-1],0],u=[1,t[n],a];i[n]=Object(r.slice)(e,o,u).reshape(this.elementShape)}return i});const o=[];for(let e=0;e<t.length;e++)o[e]=e;this.writeMany(o,i)}}l.nextId=0;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e,n){const s=((t,e,n)=>{switch(t.category){case"arithmetic":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"AddN":return[r.addN(Object(a.b)("tensors",t,e,n))];case"FloorMod":case"Mod":return[r.mod(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"Mul":return[r.mul(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"RealDiv":case"Div":return[r.div(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"DivNoNan":return[r.divNoNan(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"FloorDiv":return[r.floorDiv(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"Sub":return[r.sub(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"Minimum":return[r.minimum(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"Maximum":return[r.maximum(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"Pow":return[r.pow(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"SquaredDifference":return[r.squaredDifference(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"basic_math":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[r.abs(Object(a.b)("x",t,e,n))];case"Acos":return[r.acos(Object(a.b)("x",t,e,n))];case"Acosh":return[r.acosh(Object(a.b)("x",t,e,n))];case"Asin":return[r.asin(Object(a.b)("x",t,e,n))];case"Asinh":return[r.asinh(Object(a.b)("x",t,e,n))];case"Atan":return[r.atan(Object(a.b)("x",t,e,n))];case"Atan2":return[r.atan2(Object(a.b)("x",t,e,n),Object(a.b)("y",t,e,n))];case"Atanh":return[r.atanh(Object(a.b)("x",t,e,n))];case"Ceil":return[r.ceil(Object(a.b)("x",t,e,n))];case"Complex":return[r.complex(Object(a.b)("real",t,e,n),Object(a.b)("imag",t,e,n))];case"Cos":return[r.cos(Object(a.b)("x",t,e,n))];case"Cosh":return[r.cosh(Object(a.b)("x",t,e,n))];case"Elu":return[r.elu(Object(a.b)("x",t,e,n))];case"Erf":return[r.erf(Object(a.b)("x",t,e,n))];case"Exp":return[r.exp(Object(a.b)("x",t,e,n))];case"Expm1":return[r.expm1(Object(a.b)("x",t,e,n))];case"Floor":return[r.floor(Object(a.b)("x",t,e,n))];case"Log":return[r.log(Object(a.b)("x",t,e,n))];case"Log1p":return[r.log1p(Object(a.b)("x",t,e,n))];case"Imag":return[r.imag(Object(a.b)("x",t,e,n))];case"Neg":return[r.neg(Object(a.b)("x",t,e,n))];case"Reciprocal":return[r.reciprocal(Object(a.b)("x",t,e,n))];case"Real":return[r.real(Object(a.b)("x",t,e,n))];case"Relu":return[r.relu(Object(a.b)("x",t,e,n))];case"Round":return[r.round(Object(a.b)("x",t,e,n))];case"Selu":return[r.selu(Object(a.b)("x",t,e,n))];case"Sigmoid":return[r.sigmoid(Object(a.b)("x",t,e,n))];case"Sin":return[r.sin(Object(a.b)("x",t,e,n))];case"Sign":return[r.sign(Object(a.b)("x",t,e,n))];case"Sinh":return[r.sinh(Object(a.b)("x",t,e,n))];case"Softplus":return[r.softplus(Object(a.b)("x",t,e,n))];case"Sqrt":return[r.sqrt(Object(a.b)("x",t,e,n))];case"Square":return[r.square(Object(a.b)("x",t,e,n))];case"Tanh":return[r.tanh(Object(a.b)("x",t,e,n))];case"Tan":return[r.tan(Object(a.b)("x",t,e,n))];case"Relu6":case"ClipByValue":return[r.clipByValue(Object(a.b)("x",t,e,n),Object(a.b)("clipValueMin",t,e,n),Object(a.b)("clipValueMax",t,e,n))];case"Rsqrt":return[r.rsqrt(Object(a.c)(t.inputNames[0],e,n))];case"Prod":return[r.prod(Object(a.b)("x",t,e,n),Object(a.b)("axes",t,e,n))];case"LeakyRelu":return[r.leakyRelu(Object(a.b)("x",t,e,n),Object(a.b)("alpha",t,e,n))];case"Prelu":return[r.prelu(Object(a.b)("x",t,e,n),Object(a.b)("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"control":return(async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=Object(a.b)("thenBranch",t,e,n),s=Object(a.b)("elseBranch",t,e,n),i=Object(a.b)("cond",t,e,n),o=Object(a.b)("args",t,e,n);return(await i.data())[0]?n.functionMap[r].executeFunctionAsync(o):n.functionMap[s].executeFunctionAsync(o)}case"While":case"StatelessWhile":{const r=Object(a.b)("body",t,e,n),s=Object(a.b)("cond",t,e,n),i=Object(a.b)("args",t,e,n),o=(await n.functionMap[s].executeFunctionAsync(i))[0];let u=await o.data(),l=i;for(;u[0];){l=await n.functionMap[r].executeFunctionAsync(l);const t=(await n.functionMap[s].executeFunctionAsync(l))[0];u=await t.data()}return l}case"LoopCond":return[Object(a.b)("pred",t,e,n).clone()];case"Switch":{const r=Object(a.b)("pred",t,e,n),s=Object(a.b)("data",t,e,n);return(await r.data())[0]?[void 0,s.clone()]:[s.clone(),void 0]}case"Merge":const s=t.inputNames.find(t=>void 0!==Object(a.c)(t,e,n));return s?[Object(a.c)(s,e,n).clone()]:void 0;case"Enter":const i=Object(a.b)("frameName",t,e,n),o=Object(a.b)("tensor",t,e,n);return n.enterFrame(i),[o.clone()];case"Exit":const u=Object(a.b)("tensor",t,e,n);return n.exitFrame(),[u.clone()];case"NextIteration":const c=Object(a.b)("tensor",t,e,n);return n.nextIteration(),[c.clone()];case"TensorArrayV3":const h=Object(a.b)("size",t,e,n),d=Object(a.b)("dtype",t,e,n),p=Object(a.b)("elementShape",t,e,n),f=Object(a.b)("dynamicSize",t,e,n),m=Object(a.b)("clearAfterRead",t,e,n),g=Object(a.b)("identicalElementShapes",t,e,n),b=Object(a.b)("name",t,e,n),y=new l(b,d,h,p,g,f,m);return n.addTensorArray(y),[Object(r.scalar)(y.id),Object(r.scalar)(1)];case"TensorArrayWriteV3":const x=Object(a.b)("tensorArrayId",t,e,n),w=Object(a.b)("index",t,e,n),v=Object(a.b)("tensor",t,e,n);return n.getTensorArray(x).write(w,v),[Object(r.scalar)(1)];case"TensorArrayReadV3":const O=Object(a.b)("tensorArrayId",t,e,n),S=Object(a.b)("index",t,e,n);return[n.getTensorArray(O).read(S)];case"TensorArrayGatherV3":const k=Object(a.b)("tensorArrayId",t,e,n),C=Object(a.b)("indices",t,e,n),N=Object(a.b)("dtype",t,e,n);return[n.getTensorArray(k).gather(C,N)];case"TensorArrayScatterV3":const I=Object(a.b)("tensorArrayId",t,e,n),A=Object(a.b)("indices",t,e,n),E=Object(a.b)("tensor",t,e,n);return n.getTensorArray(I).scatter(A,E),[Object(r.scalar)(1)];case"TensorArrayConcatV3":const T=Object(a.b)("tensorArrayId",t,e,n),$=n.getTensorArray(T),R=Object(a.b)("dtype",t,e,n);return[$.concat(R)];case"TensorArraySplitV3":const j=Object(a.b)("tensorArrayId",t,e,n),D=Object(a.b)("tensor",t,e,n),_=Object(a.b)("lengths",t,e,n);return n.getTensorArray(j).split(_,D),[Object(r.scalar)(1)];case"TensorArraySizeV3":const F=Object(a.b)("tensorArrayId",t,e,n),M=n.getTensorArray(F);return[Object(r.scalar)(M.size(),"int32")];case"TensorArrayCloseV3":const z=Object(a.b)("tensorArrayId",t,e,n);return n.getTensorArray(z).clearAndClose(),[Object(r.scalar)(0)];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"convolution":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const s=Object(a.b)("stride",t,e,n),i=Object(a.b)("pad",t,e,n),o=Object(a.b)("dataFormat",t,e,n).toUpperCase(),u=Object(a.b)("dilation",t,e,n);return[r.conv1d(Object(a.b)("x",t,e,n),Object(a.b)("filter",t,e,n),s,i,o,u)]}case"Conv2D":{const s=Object(a.b)("strides",t,e,n),i=Object(a.b)("pad",t,e,n),o=Object(a.b)("dataFormat",t,e,n).toUpperCase(),u=Object(a.b)("dilations",t,e,n);return[r.conv2d(Object(a.b)("x",t,e,n),Object(a.b)("filter",t,e,n),[s[1],s[2]],i,o,[u[1],u[2]])]}case"_FusedConv2D":case"FusedDepthwiseConv2dNative":{const[s,i]=Object(a.b)("fusedOps",t,e,n),o="biasadd"===s,u="prelu"===i,l="fusedbatchnorm"===s,c=Object(a.b)("numArgs",t,e,n);if(o){if(u&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!u&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const h=Object(a.b)("strides",t,e,n),d=Object(a.b)("pad",t,e,n),p=Object(a.b)("dataFormat",t,e,n).toUpperCase(),f=Object(a.b)("dilations",t,e,n),[m,g]=Object(a.b)("args",t,e,n);return[("_FusedConv2D"===t.op?r.fused.conv2d:r.fused.depthwiseConv2d)({x:Object(a.b)("x",t,e,n),filter:Object(a.b)("filter",t,e,n),strides:[h[1],h[2]],pad:d,dataFormat:p,dilations:[f[1],f[2]],bias:m,activation:i,preluActivationWeights:g})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=Object(a.b)("outputShape",t,e,n),i=Object(a.b)("strides",t,e,n),o=Object(a.b)("pad",t,e,n);return[r.conv2dTranspose(Object(a.b)("x",t,e,n),Object(a.b)("filter",t,e,n),s,[i[1],i[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=Object(a.b)("strides",t,e,n),i=Object(a.b)("pad",t,e,n),o=Object(a.b)("dilations",t,e,n),u=Object(a.b)("dataFormat",t,e,n).toUpperCase();return[r.depthwiseConv2d(Object(a.b)("input",t,e,n),Object(a.b)("filter",t,e,n),[s[1],s[2]],i,u,[o[1],o[2]])]}case"Conv3D":{const s=Object(a.b)("strides",t,e,n),i=Object(a.b)("pad",t,e,n),o=Object(a.b)("dataFormat",t,e,n).toUpperCase(),u=Object(a.b)("dilations",t,e,n);return[r.conv3d(Object(a.b)("x",t,e,n),Object(a.b)("filter",t,e,n),[s[1],s[2],s[3]],i,o,[u[1],u[2],u[3]])]}case"AvgPool":{const s=Object(a.b)("strides",t,e,n),i=Object(a.b)("pad",t,e,n),o=Object(a.b)("kernelSize",t,e,n);return[r.avgPool(Object(a.b)("x",t,e,n),[o[1],o[2]],[s[1],s[2]],i)]}case"MaxPool":{const s=Object(a.b)("strides",t,e,n),i=Object(a.b)("pad",t,e,n),o=Object(a.b)("kernelSize",t,e,n);return[r.maxPool(Object(a.b)("x",t,e,n),[o[1],o[2]],[s[1],s[2]],i)]}case"MaxPoolWithArgmax":{const s=Object(a.b)("strides",t,e,n),i=Object(a.b)("pad",t,e,n),o=Object(a.b)("kernelSize",t,e,n),u=Object(a.b)("includeBatchInIndex",t,e,n),{result:l,indexes:c}=r.maxPoolWithArgmax(Object(a.b)("x",t,e,n),[o[1],o[2]],[s[1],s[2]],i,u);return[l,c]}case"AvgPool3D":{const s=Object(a.b)("strides",t,e,n),i=Object(a.b)("pad",t,e,n),o=Object(a.b)("kernelSize",t,e,n);return[r.avgPool3d(Object(a.b)("x",t,e,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],i)]}case"MaxPool3D":{const s=Object(a.b)("strides",t,e,n),i=Object(a.b)("pad",t,e,n),o=Object(a.b)("kernelSize",t,e,n);return[r.maxPool3d(Object(a.b)("x",t,e,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"creation":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Fill":{const s=Object(a.b)("shape",t,e,n),i=Object(a.b)("dtype",t,e,n),o=Object(a.b)("value",t,e,n);return[r.fill(s,o,i)]}case"LinSpace":{const s=Object(a.b)("start",t,e,n),i=Object(a.b)("stop",t,e,n),o=Object(a.b)("num",t,e,n);return[r.linspace(s,i,o)]}case"Multinomial":{const s=Object(a.b)("logits",t,e,n),i=Object(a.b)("numSamples",t,e,n),o=Object(a.b)("seed",t,e,n);return[r.multinomial(s,i,o)]}case"OneHot":{const s=Object(a.b)("indices",t,e,n),i=Object(a.b)("depth",t,e,n),o=Object(a.b)("onValue",t,e,n),u=Object(a.b)("offValue",t,e,n);return[r.oneHot(s,i,o,u)]}case"Ones":return[r.ones(Object(a.b)("shape",t,e,n),Object(a.b)("dtype",t,e,n))];case"OnesLike":return[r.onesLike(Object(a.b)("x",t,e,n))];case"RandomUniform":return[r.randomUniform(Object(a.b)("shape",t,e,n),Object(a.b)("minval",t,e,n),Object(a.b)("maxval",t,e,n),Object(a.b)("dtype",t,e,n))];case"Range":{const s=Object(a.b)("start",t,e,n),i=Object(a.b)("stop",t,e,n),o=Object(a.b)("step",t,e,n);return[r.range(s,i,o,Object(a.b)("dtype",t,e,n))]}case"TruncatedNormal":{const s=Object(a.b)("shape",t,e,n),i=Object(a.b)("mean",t,e,n),o=Object(a.b)("stdDev",t,e,n),u=Object(a.b)("seed",t,e,n);return[r.truncatedNormal(s,i,o,Object(a.b)("dtype",t,e,n),u)]}case"Zeros":return[r.zeros(Object(a.b)("shape",t,e,n),Object(a.b)("dtype",t,e,n))];case"ZerosLike":return[r.zerosLike(Object(a.b)("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const s=Object(a.b)("boxes",t,e,n),i=Object(a.b)("scores",t,e,n),o=Object(a.b)("maxOutputSize",t,e,n),u=Object(a.b)("iouThreshold",t,e,n),l=Object(a.b)("scoreThreshold",t,e,n);if("NonMaxSuppressionV5"===t.op){const c=Object(a.b)("softNmsSigma",t,e,n),h=await r.image.nonMaxSuppressionWithScoreAsync(s,i,o,u,l,c);return[h.selectedIndices,h.selectedScores]}return[await r.image.nonMaxSuppressionAsync(s,i,o,u,l)]}case"Where":{const s=Object(a.b)("condition",t,e,n).asType("bool"),i=[await r.whereAsync(s)];return s.dispose(),i}case"ListDiff":return r.setdiff1dAsync(Object(a.b)("x",t,e,n),Object(a.b)("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const s=Object(a.b)("x",t,e,n),i=Object(a.b)("k",t,e,n),o=Object(a.b)("sorted",t,e,n),u=r.topk(s,i,o);return[u.values,u.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"image":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const s=Object(a.b)("images",t,e,n),i=Object(a.b)("size",t,e,n),o=Object(a.b)("alignCorners",t,e,n);return[r.image.resizeBilinear(s,[i[0],i[1]],o)]}case"ResizeNearestNeighbor":{const s=Object(a.b)("images",t,e,n),i=Object(a.b)("size",t,e,n),o=Object(a.b)("alignCorners",t,e,n);return[r.image.resizeNearestNeighbor(s,[i[0],i[1]],o)]}case"CropAndResize":{const s=Object(a.b)("image",t,e,n),i=Object(a.b)("boxes",t,e,n),o=Object(a.b)("boxInd",t,e,n),u=Object(a.b)("cropSize",t,e,n),l=Object(a.b)("method",t,e,n),c=Object(a.b)("extrapolationValue",t,e,n);return[r.image.cropAndResize(s,i,o,u,l,c)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"graph":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const s=Object(a.b)("default",t,e,n);return[Object(a.c)(t.name,e,n)||s];case"Placeholder":return[Object(a.c)(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[Object(a.b)("x",t,e,n).clone()];case"IdentityN":return Object(a.b)("x",t,e,n).map(t=>t.clone());case"Snapshot":return[Object(a.b)("x",t,e,n).clone()];case"Shape":return[r.tensor1d(Object(a.b)("x",t,e,n).shape,"int32")];case"ShapeN":return Object(a.b)("x",t,e,n).map(t=>r.tensor1d(t.shape));case"Size":return[r.scalar(Object(a.b)("x",t,e,n).size,"int32")];case"Rank":return[r.scalar(Object(a.b)("x",t,e,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const i=Object(a.b)("x",t,e,n),o=Object(a.b)("data",t,e,n),u=Object(a.b)("message",t,e,n),l=Object(a.b)("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let t=0;t<o.length;t++)console.log(Array.prototype.slice.call(o[t].dataSync()).slice(0,l));return[i];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"logical":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Equal":return[r.equal(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"NotEqual":return[r.notEqual(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"Greater":return[r.greater(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"GreaterEqual":return[r.greaterEqual(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"Less":return[r.less(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"LessEqual":return[r.lessEqual(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"LogicalAnd":return[r.logicalAnd(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"LogicalNot":return[r.logicalNot(Object(a.b)("a",t,e,n))];case"LogicalOr":return[r.logicalOr(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];case"Select":case"SelectV2":return[r.where(Object(a.b)("condition",t,e,n),Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"matrices":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(Object(a.b)("a",t,e,n),Object(a.b)("b",t,e,n),Object(a.b)("transposeA",t,e,n),Object(a.b)("transposeB",t,e,n))];case"Transpose":return[r.transpose(Object(a.b)("x",t,e,n),Object(a.b)("perm",t,e,n))];case"_FusedMatMul":const[s,i]=Object(a.b)("fusedOps",t,e,n),o="biasadd"===s,u="prelu"===i,l=Object(a.b)("numArgs",t,e,n);if(o){if(u&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!u&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=Object(a.b)("args",t,e,n);return[r.fused.matMul({a:Object(a.b)("a",t,e,n),b:Object(a.b)("b",t,e,n),transposeA:Object(a.b)("transposeA",t,e,n),transposeB:Object(a.b)("transposeB",t,e,n),bias:c,activation:i,preluActivationWeights:h})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"normalization":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(Object(a.b)("x",t,e,n),Object(a.b)("mean",t,e,n),Object(a.b)("variance",t,e,n),Object(a.b)("offset",t,e,n),Object(a.b)("scale",t,e,n),Object(a.b)("epsilon",t,e,n))];case"LRN":return[r.localResponseNormalization(Object(a.b)("x",t,e,n),Object(a.b)("radius",t,e,n),Object(a.b)("bias",t,e,n),Object(a.b)("alpha",t,e,n),Object(a.b)("beta",t,e,n))];case"Softmax":return[r.softmax(Object(a.b)("x",t,e,n))];case"LogSoftmax":return[r.logSoftmax(Object(a.b)("x",t,e,n))];case"SparseToDense":return[r.sparseToDense(Object(a.b)("sparseIndices",t,e,n),Object(a.b)("outputShape",t,e,n),Object(a.b)("sparseValues",t,e,n),Object(a.b)("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"reduction":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Max":{const s=Object(a.b)("axis",t,e,n),i=Object(a.b)("keepDims",t,e,n);return[r.max(Object(a.b)("x",t,e,n),s,i)]}case"Mean":{const s=Object(a.b)("axis",t,e,n),i=Object(a.b)("keepDims",t,e,n);return[r.mean(Object(a.b)("x",t,e,n),s,i)]}case"Min":{const s=Object(a.b)("axis",t,e,n),i=Object(a.b)("keepDims",t,e,n);return[r.min(Object(a.b)("x",t,e,n),s,i)]}case"Sum":{const s=Object(a.b)("axis",t,e,n),i=Object(a.b)("keepDims",t,e,n);return[r.sum(Object(a.b)("x",t,e,n),s,i)]}case"All":{const s=Object(a.b)("axis",t,e,n),i=Object(a.b)("keepDims",t,e,n);return[r.all(Object(a.b)("x",t,e,n),s,i)]}case"Any":{const s=Object(a.b)("axis",t,e,n),i=Object(a.b)("keepDims",t,e,n);return[r.any(Object(a.b)("x",t,e,n),s,i)]}case"ArgMax":{const s=Object(a.b)("axis",t,e,n);return[r.argMax(Object(a.b)("x",t,e,n),s)]}case"ArgMin":{const s=Object(a.b)("axis",t,e,n);return[r.argMin(Object(a.b)("x",t,e,n),s)]}case"Prod":{const s=Object(a.b)("axis",t,e,n),i=Object(a.b)("keepDims",t,e,n);return[r.prod(Object(a.b)("x",t,e,n),s,i)]}case"Cumsum":{const s=Object(a.b)("axis",t,e,n),i=Object(a.b)("exclusive",t,e,n),o=Object(a.b)("reverse",t,e,n);return[r.cumsum(Object(a.b)("x",t,e,n),s,i,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"slice_join":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const s=Object(a.b)("n",t,e,n),i=Object(a.b)("axis",t,e,n);let o=Object(a.b)("tensors",t,e,n);return o=o.slice(0,s),[r.concat(o,i)]}case"GatherV2":case"Gather":{const s=Object(a.b)("axis",t,e,n),i=Object(a.b)("x",t,e,n),o=Object(a.b)("indices",t,e,n);return[r.gather(i,o.asType("int32"),s)]}case"ReverseV2":case"Reverse":{const s=Object(a.b)("axis",t,e,n),i=Object(a.b)("x",t,e,n);return[r.reverse(i,s)]}case"Slice":{const s=Object(a.b)("begin",t,e,n),i=Object(a.b)("size",t,e,n);return[r.slice(Object(a.b)("x",t,e,n),s,i)]}case"StridedSlice":{const s=Object(a.b)("begin",t,e,n),i=Object(a.b)("end",t,e,n),o=Object(a.b)("strides",t,e,n),u=Object(a.b)("beginMask",t,e,n),l=Object(a.b)("endMask",t,e,n),c=Object(a.b)("ellipsisMask",t,e,n),h=Object(a.b)("newAxisMask",t,e,n),d=Object(a.b)("shrinkAxisMask",t,e,n),p=Object(a.b)("x",t,e,n);if(1===s.length&&p.shape.length>1)for(let t=1;t<p.shape.length;t++)s.push(0),i.push(p.shape[t]),o.push(o[0]);return[r.stridedSlice(p,s,i,o,u,l,c,h,d)]}case"Pack":return r.tidy(()=>{const s=Object(a.b)("axis",t,e,n),i=Object(a.b)("tensors",t,e,n),o=i[0].shape,u=i[0].squeeze().shape,l=i.map(t=>{const e=r.util.arraysEqual(t.shape,o);if(!e&&!r.util.arraysEqual(t.squeeze().shape,u))throw new Error("the input tensors shape does not match");return e?t:t.reshape(o)});return[r.stack(l,s)]});case"Unpack":return r.tidy(()=>{const s=Object(a.b)("axis",t,e,n),i=Object(a.b)("tensor",t,e,n);return r.unstack(i,s)});case"Tile":{const s=Object(a.b)("reps",t,e,n);return[r.tile(Object(a.b)("x",t,e,n),s)]}case"Split":case"SplitV":{const s=Object(a.b)("axis",t,e,n),i=Object(a.b)("numOrSizeSplits",t,e,n);return r.split(Object(a.b)("x",t,e,n),i,s)}case"ScatterNd":{const s=Object(a.b)("indices",t,e,n),i=Object(a.b)("values",t,e,n),o=Object(a.b)("shape",t,e,n);return[r.scatterND(s,i,o)]}case"GatherNd":{const s=Object(a.b)("x",t,e,n),i=Object(a.b)("indices",t,e,n);return[r.gatherND(s,i)]}case"SparseToDense":{const s=Object(a.b)("sparseIndices",t,e,n),i=Object(a.b)("outputShape",t,e,n),o=Object(a.b)("sparseValues",t,e,n),u=Object(a.b)("defaultValue",t,e,n);return[r.sparseToDense(s,o,i,o.dtype===u.dtype?u:u.asType(o.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"spectral":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"FFT":return[r.fft(Object(a.b)("x",t,e,n))];case"IFFT":return[r.ifft(Object(a.b)("x",t,e,n))];case"RFFT":return[r.rfft(Object(a.b)("x",t,e,n))];case"IRFFT":return[r.irfft(Object(a.b)("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"transformation":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Cast":return[r.cast(Object(a.b)("x",t,e,n),Object(a.b)("dtype",t,e,n))];case"ExpandDims":{const s=Object(a.b)("axis",t,e,n);return[r.expandDims(Object(a.b)("x",t,e,n),s)]}case"Squeeze":{const s=Object(a.b)("axis",t,e,n);return[r.squeeze(Object(a.b)("x",t,e,n),s)]}case"Reshape":return[r.reshape(Object(a.b)("x",t,e,n),Object(a.b)("shape",t,e,n))];case"PadV2":case"Pad":return[r.pad(Object(a.b)("x",t,e,n),Object(a.f)(Object(a.b)("padding",t,e,n),2),Object(a.b)("constantValue",t,e,n))];case"SpaceToBatchND":{const s=Object(a.b)("blockShape",t,e,n),i=Object(a.f)(Object(a.b)("paddings",t,e,n),2);return[r.spaceToBatchND(Object(a.b)("x",t,e,n),s,i)]}case"BatchToSpaceND":{const s=Object(a.b)("blockShape",t,e,n),i=Object(a.f)(Object(a.b)("crops",t,e,n),2);return[r.batchToSpaceND(Object(a.b)("x",t,e,n),s,i)]}case"DepthToSpace":{const s=Object(a.b)("blockSize",t,e,n),i=Object(a.b)("dataFormat",t,e,n).toUpperCase();return[r.depthToSpace(Object(a.b)("x",t,e,n),s,i)]}case"BroadcastTo":return[r.broadcastTo(Object(a.b)("x",t,e,n),Object(a.b)("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"custom":const s=Object(o.a)(t.op);if(s&&s.customExecutor)return s.customExecutor(new i(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return s instanceof Promise?s.then(t=>[].concat(t)):[].concat(s)}class h{constructor(t,e,n={}){this.weightMap=t,this.tensorArrayMap=e,this.functionMap=n,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d(t,e,n){const r=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(t).map(t=>Object(a.e)(t)[0]),c=[...e];for(;c.length>0;){const t=c.pop();(m(t)||g(t))&&null==i&&(i=t,o=i.children.map(t=>t.name).filter(t=>r.has(t))),r.add(t.name),null==n[t.name]&&(-1===l.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach(t=>{u.has(t.name)||(u.add(t.name),c.push(t))}):s.push(t.name)))}return{inputs:t,outputs:e,usedNodes:r,missingInputs:s,dynamicNode:i,syncInputs:o}}const p=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile"],f=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"];function m(t){return p.indexOf(t.op)>=0}function g(t){return f.indexOf(t.op)>=0}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this._functionExecutorMap[e]=new b(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(e=>t[e].map(t=>t.id));this._weightIds=[].concat(...e),this._weightMap=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){const n=t.map(t=>t.name).sort(),r=e.map(t=>t.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=d(t,e,this.weightMap),{missingInputs:r,dynamicNode:s,syncInputs:i}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const n=e.map(t=>t.name),s=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:s}=n,i=[];Object.keys(s).map(t=>Object(a.e)(t)[0]).map(e=>t.nodes[e]).forEach(t=>{r.has(t.name)&&i.push(t)}),t.weights.forEach(t=>{r.has(t.name)&&i.push(t)});const o=new Set,u=[];for(;i.length>0;){const t=i.pop();o.add(t.name),e[t.name]||u.push(t),t.children.forEach(t=>{!o.has(t.name)&&r.has(t.name)&&t.inputs.every(t=>o.has(t.name))&&i.push(t)})}return u}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const s=n.map(t=>this.graph.nodes[Object(a.e)(t)[0]]),i=e.map(t=>this.graph.nodes[Object(a.e)(t)[0]]),o=this.getCompilationKey(s,i);let u=this.compiledMap.get(o);null==u&&(u=this.compile(t,i),this.compiledMap.set(o,u));const l={};return Object(r.tidy)(()=>{const n=new h(this.weightMap,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,s]=Object(a.e)(e),i=[];i[s]=t[e],r[n]=i});const s=this.getFrozenTensorIds(r),i={};for(let t=0;t<u.length;t++){const a=u[t];if(!r[a.name]){const t=c(a,r,n);if(t instanceof Promise)throw new Error(`The execution of the op '${a.op}' returned a promise. Please use model.executeAsync() instead.`);r[a.name]=t,this.checkTensorForDisposal(a.name,a,r,n,s,e,i)}}return e.map(t=>Object(a.c)(t,r,n))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(t=>t.map(t=>t.id)));return new Set(e)}checkTensorForDisposal(t,e,n,r,s,i,o){"control"!==e.category&&-1===i.indexOf(t)&&(n[t].forEach(t=>{null!=t&&(o[t.id]=(o[t.id]||0)+e.children.length)}),e.inputs.forEach(t=>{if("control"!==t.category){const e=Object(a.d)(t.name,n,r);null!=e&&e.forEach(t=>{if(t&&!s.has(t.id)){const e=o[t.id];1===e?(t.dispose(),delete o[t.id]):null!=e&&o[t.id]--}})}}))}async executeAsync(t,e,n=!1){t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=new h(this.weightMap,{},this.functionExecutorMap),s=await this.executeWithControlFlow(t,r,e,n),i=e.map(t=>Object(a.c)(t,s,r)),o=new Set(i.map(t=>t.id)),u=new Set(Object.keys(t).map(e=>t[e].id));return Object.keys(s).forEach(t=>{s[t].forEach(t=>{!t||t.isDisposed||o.has(t.id)||u.has(t.id)||-1!==this.weightIds.indexOf(t.id)||t.dispose()})}),i}async executeFunctionAsync(t){const e=t.reduce((t,e,n)=>(t[this.inputs[n].name]=e,t),{});return this.executeAsync(e,this.outputNodes,!0)}async executeWithControlFlow(t,e,n,r){const s=Object.keys(t),i=s.map(t=>this.graph.nodes[Object(a.e)(t)[0]]),o=n.map(t=>this.graph.nodes[Object(a.e)(t)[0]]),{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=d(t,o,this.weightMap),p=[...i,...this.graph.weights].map(t=>({node:t,contexts:e.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=Object(a.e)(e),s=[];s[r]=t[e],f[n]=s});const g={},b=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const t=this.processStack(i,p,e,f,y,b,n,g,u);await Promise.all(t)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const x=o.filter(t=>!m(t)&&!Object(a.c)(t.name,f,e)).map(t=>t.name);if(x.length>0){let t="";throw null!=c&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${t}`)}return f}processStack(t,e,n,r,s,i,o,u,l){const h=[];for(;e.length>0;){const d=e.pop();n.currentContext=d.contexts;let p="";if("Enter"===d.node.op&&Object(a.b)("isConstant",d.node,r,n)&&([p]=Object(a.a)(d.node.name,n)),-1===t.indexOf(d.node)){const t=c(d.node,r,n);p||([p]=Object(a.a)(d.node.name,n));const f=n.currentContext;t instanceof Promise?h.push(t.then(t=>(r[p]=t,n.currentContext=f,this.checkTensorForDisposal(p,d.node,r,n,i,o,u),this.processChildNodes(d.node,e,n,r,s,l),t))):(r[p]=t,this.checkTensorForDisposal(p,d.node,r,n,i,o,u),this.processChildNodes(d.node,e,n,r,s,l))}else this.processChildNodes(d.node,e,n,r,s,l)}return h}processChildNodes(t,e,n,r,s,i){t.children.forEach(t=>{const[o]=Object(a.a)(t.name,n);!s[o]&&i.has(t.name)&&("Merge"===t.op?t.inputNames.some(t=>!!Object(a.c)(t,r,n))&&(s[o]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(t=>!!Object(a.c)(t,r,n))&&(s[o]=!0,e.push({contexts:n.currentContext,node:t})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(t=>t.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const n=t[e],[s]=Object(a.e)(e),i=this.graph.nodes[s];if(i.attrParams.shape&&i.attrParams.shape.value){const t=i.attrParams.shape.value,e=t.length===n.shape.length&&n.shape.every((e,n)=>-1===t[n]||t[n]===e);r.util.assert(e,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&r.util.assert(n.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter(t=>{const[e]=Object(a.e)(t);return null==this.graph.nodes[e]});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t},{})}checkOutputs(t){t.forEach(t=>{const[e]=Object(a.e)(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)})}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={})}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=r.io.browserHTTPRequest(t,this.loadOptions);else{const e=r.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(r.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const a=r.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);return this.executor=new b(s.a.Instance.transformGraph(e,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),!0}async save(t,e){if("string"==typeof t){const e=r.io.getSaveHandlers(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof r.Tensor||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,n,r)=>(e[n]=t[r],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose()}}async function x(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t+="model.json?tfjs-format=file");const n=new y(t,e);return await n.load(),n}
/** @license See the LICENSE file. */const w="2.0.1";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e){(function(e){t.exports=e}).call(this,{})},function(t,e,n){"use strict";(function(t,r){
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let s;function a(){if(null==s){let e;if("undefined"!=typeof window)e=window;else if(void 0!==t)e=t;else if(void 0!==r)e=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}s=e}return s}function i(t,e){const n=function(){const t=a();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,"b",(function(){return a})),n.d(e,"a",(function(){return i}))}).call(this,n(29),n(30))},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e){var n,r,s=t.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function o(t){if(n===setTimeout)return setTimeout(t,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:a}catch(t){n=a}try{r="function"==typeof clearTimeout?clearTimeout:i}catch(t){r=i}}();var u,l=[],c=!1,h=-1;function d(){c&&u&&(c=!1,u.length?l=u.concat(l):h=-1,l.length&&p())}function p(){if(!c){var t=o(d);c=!0;for(var e=l.length;e;){for(u=l,l=[];++h<e;)u&&u[h].run();h=-1,e=l.length}u=null,c=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function m(){}s.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];l.push(new f(t,e)),1!==l.length||c||o(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=m,s.addListener=m,s.once=m,s.off=m,s.removeListener=m,s.removeAllListeners=m,s.emit=m,s.prependListener=m,s.prependOnceListener=m,s.listeners=function(t){return[]},s.binding=function(t){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(t){throw new Error("process.chdir is not supported")},s.umask=function(){return 0}},function(t,e,n){"use strict";function r(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function s(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(e),n.d(e,"isMobile",(function(){return r})),n.d(e,"isBrowser",(function(){return s}))},function(t,e,n){"use strict";n.d(e,"b",(function(){return gt})),n.d(e,"a",(function(){return Et})),n.d(e,"c",(function(){return Ct}));var r=n(0),s=n(24),a=function(t,e){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function i(t,e){function n(){this.constructor=t}a(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var o=function(){return(o=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var s in e=arguments[n])Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t}).apply(this,arguments)};function u(t,e,n,r){return new(n||(n=Promise))((function(s,a){function i(t){try{u(r.next(t))}catch(t){a(t)}}function o(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){t.done?s(t.value):new n((function(e){e(t.value)})).then(i,o)}u((r=r.apply(t,e||[])).next())}))}function l(t,e){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(s=(s=i.trys).length>0&&s[s.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}function c(t){var e=t.shape[2],n=t.argMax(2).reshape([-1]);return Object(r.oneHot)(n,e)}function h(t,e){return Object(r.tidy)((function(){return t.greater(Object(r.scalar)(e)).toInt()}))}function d(t,e){var n=e.shape,s=n[0],a=n[1],i=n[2];return Object(r.tidy)((function(){var n=c(e),o=Object(r.range)(0,i,1,"int32").expandDims(1);return function(t,e){return t.mul(e)}(n.matMul(o).toInt().reshape([s,a]).add(Object(r.scalar)(1,"int32")),t).sub(Object(r.scalar)(1,"int32"))}))}function p(t){var e=t.shape,n=e[0],s=e[1],a=e[2];return Object(r.tidy)((function(){var e=c(t),i=Object(r.range)(0,a,1,"int32").expandDims(1);return e.matMul(i).toInt().reshape([n,s])}))}var f=function(){function t(t,e){this.model=t,this.outputStride=e;var n=this.model.inputs[0].shape;r.util.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}))}return t.prototype.predict=function(t){var e=this;return Object(r.tidy)((function(){var n=e.preprocessInput(t.toFloat()).expandDims(0),r=e.model.predict(n).map((function(t){return t.squeeze([0])})),s=e.nameOutputResults(r);return{heatmapScores:s.heatmap.sigmoid(),offsets:s.offsets,displacementFwd:s.displacementFwd,displacementBwd:s.displacementBwd,segmentation:s.segmentation,partHeatmaps:s.partHeatmaps,longOffsets:s.longOffsets,partOffsets:s.partOffsets}}))},t.prototype.dispose=function(){this.model.dispose()},t}(),m=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i(e,t),e.prototype.preprocessInput=function(t){return Object(r.tidy)((function(){return Object(r.div)(t,127.5).sub(1)}))},e.prototype.nameOutputResults=function(t){return{offsets:t[0],segmentation:t[1],partHeatmaps:t[2],longOffsets:t[3],heatmap:t[4],displacementFwd:t[5],displacementBwd:t[6],partOffsets:t[7]}},e}(f),g=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],b=g.length,y=g.reduce((function(t,e,n){return t[e]=n,t}),{});[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((function(t){var e=t[0],n=t[1];return[y[e],y[n]]}));function x(t,e,n){var r=t[0],s=t[1],a=e[0],i=e[1],o=n.top,u=n.bottom;return[i/(n.left+n.right+s),a/(o+u+r)]}function w(t,e,n,r){return{y:r.get(t,e,n),x:r.get(t,e,n+b)}}function v(t,e,n){var r=w(t.heatmapY,t.heatmapX,t.id,n),s=r.y,a=r.x;return{x:t.heatmapX*e+a,y:t.heatmapY*e+s}}function O(t,e,n){return t<e?e:t>n?n:t}function S(t,e){return{x:t.x+e.x,y:t.y+e.y}}function k(t,e,n){void 0===n&&(n=.3);for(var r=0,s=0,a=0;a<t.length;a++)e.keypoints[a].score>n&&(s+=1,r+=Math.pow(t[a].x-e.keypoints[a].position.x,2)+Math.pow(t[a].y-e.keypoints[a].position.y,2));return 0===s?r=1/0:r/=s,r}function C(t,e,n,r,s,a,i){for(var o=i[0],u=i[1],l=n(t),c=l.y*r+l.x,h=s[b*(2*c)+e],d=s[b*(2*c+1)+e],p=t.y+h,f=t.x+d,m=0;m<a;m++){p=Math.min(p,o-1);var g=n({x:f=Math.min(f,u-1),y:p}),y=g.y*r+g.x;p+=h=s[b*(2*y)+e],f+=d=s[b*(2*y+1)+e]}return{x:f,y:p}}function N(t,e,n,r,s,a,i,o,u,l){for(var c=s[0],h=s[1],d=a[0],p=a[1],f=o[0],m=o[1],g=[],b=function(t){return function(t,e,n,r){var s=e[0],a=e[1],i=n[0],o=n[1],u=Math.round(((s+t.y+1)*o-1)/r);return{x:Math.round(((a+t.x+1)*i-1)/r),y:u}}(t,[c,h],[d,p],u)},y=0;y<r;y++){var x=C(t,y,b,i,e,l,[f,m]);g.push(x)}for(var w=-1,v=1/0,O=0;O<n.length;O++){var S=k(g,n[O]);S<v&&(w=O,v=S)}return w}function I(t,e){var n=t[0],r=t[1];return[Math.round((r-1)/e+1),Math.round((n-1)/e+1)]}function A(t,e,n,s,a,i,o,u,l,c,h){for(var d=o[0],p=o[1],f=t.shape,m=f[0],g=f[1],y=e.shape.slice(0,2),w=y[0],v=y[1],O=e.reshape([w,v,2,b]),S=new Float32Array(h*b*3).fill(0),k=0;k<n.length;k++)for(var C=k*b*3,N=n[k],I=0;I<b;I++){var A=N.keypoints[I],E=C+3*I;S[E]=A.score,S[E+1]=A.position.y,S[E+2]=A.position.x}var T=x([s,a],[d,p],u),$=T[0],R=T[1],j=Object(r.tensor)(S,[h,b,3]),D=u.top,_=u.left,F={variableNames:["segmentation","longOffsets","poses"],outputShape:[m,g],userCode:"\n    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {\n      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));\n    }\n\n    float convertToPositionInOutputFloat(\n        int pos, int pad, float scale, int stride) {\n      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);\n    }\n\n    float dist(float x1, float y1, float x2, float y2) {\n      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);\n    }\n\n    float sampleLongOffsets(float h, float w, int d, int k) {\n      float fh = fract(h);\n      float fw = fract(w);\n      int clH = int(ceil(h));\n      int clW = int(ceil(w));\n      int flH = int(floor(h));\n      int flW = int(floor(w));\n      float o11 = getLongOffsets(flH, flW, d, k);\n      float o12 = getLongOffsets(flH, clW, d, k);\n      float o21 = getLongOffsets(clH, flW, d, k);\n      float o22 = getLongOffsets(clH, clW, d, k);\n      float o1 = mix(o11, o12, fw);\n      float o2 = mix(o21, o22, fw);\n      return mix(o1, o2, fh);\n    }\n\n    int findNearestPose(int h, int w) {\n      float prob = getSegmentation(h, w);\n      if (prob < 1.0) {\n        return -1;\n      }\n\n      // Done(Tyler): convert from output space h/w to strided space.\n      float stridedH = convertToPositionInOutputFloat(\n        h, "+D+", "+R+", "+i+");\n      float stridedW = convertToPositionInOutputFloat(\n        w, "+_+", "+$+", "+i+");\n\n      float minDist = 1000000.0;\n      int iMin = -1;\n      for (int i = 0; i < "+h+"; i++) {\n        float curDistSum = 0.0;\n        int numKpt = 0;\n        for (int k = 0; k < "+b+"; k++) {\n          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);\n          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);\n\n          float y = float(h) + dy;\n          float x = float(w) + dx;\n\n          for (int s = 0; s < "+l+"; s++) {\n            int yRounded = round(min(y, float("+(s-1)+")));\n            int xRounded = round(min(x, float("+(a-1)+")));\n\n            float yStrided = convertToPositionInOutputFloat(\n              yRounded, "+D+", "+R+", "+i+");\n            float xStrided = convertToPositionInOutputFloat(\n              xRounded, "+_+", "+$+", "+i+");\n\n            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);\n            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);\n\n            y = y + dy;\n            x = x + dx;\n          }\n\n          float poseScore = getPoses(i, k, 0);\n          float poseY = getPoses(i, k, 1);\n          float poseX = getPoses(i, k, 2);\n          if (poseScore > "+c+") {\n            numKpt = numKpt + 1;\n            curDistSum = curDistSum + dist(x, y, poseX, poseY);\n          }\n        }\n        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {\n          minDist = curDistSum / float(numKpt);\n          iMin = i;\n        }\n      }\n      return iMin;\n    }\n\n    void main() {\n        ivec2 coords = getOutputCoords();\n        int nearestPose = findNearestPose(coords[0], coords[1]);\n        setOutput(float(nearestPose));\n      }\n  "};return Object(r.backend)().compileAndRun(F,[t,O,j])}function E(){return"webgl"===Object(r.getBackend)()}function T(t,e,n,s,a,i,o,c,h,d,p,f){var m=o[0],g=o[1];return void 0===h&&(h=.2),void 0===d&&(d=8),void 0===p&&(p=.3),void 0===f&&(f=10),u(this,void 0,void 0,(function(){var o,u,b,y,w;return l(this,(function(l){switch(l.label){case 0:return o=n.filter((function(t){return t.score>=h})),E()?(b=Object(r.tidy)((function(){var n=A(t,e,o,s,a,i,[m,g],c,d,p,f);return o.map((function(t,e){return function(t,e){return Object(r.tidy)((function(){return t.equal(Object(r.scalar)(e)).toInt()}))}(n,e)}))})),[4,Promise.all(b.map((function(t){return t.data()})))]):[3,2];case 1:return u=l.sent(),b.forEach((function(t){return t.dispose()})),[3,5];case 2:return[4,t.data()];case 3:return y=l.sent(),[4,e.data()];case 4:w=l.sent(),u=function(t,e,n,r,s,a,i,o,u,l){var c=i[0],h=i[1];void 0===l&&(l=5);for(var d=n.map((function(t){return new Uint8Array(r*s).fill(0)})),p=o.top,f=o.left,m=x([r,s],[c,h],o),g=m[0],b=m[1],y=I([c,h],a)[0],w=0;w<r;w+=1)for(var v=0;v<s;v+=1){var O=w*s+v;if(1===t[O]){var S=N({x:v,y:w},e,n,l,[p,f],[g,b],y,[r,s],a,u);S>=0&&(d[S][O]=1)}}return d}(y,w,o,s,a,i,[m,g],c,d),l.label=5;case 5:return[2,u.map((function(t,e){return{data:t,pose:o[e],width:a,height:s}}))]}}))}))}function $(t,e,n,s,a,i,o,c,h,d,p,f,m){var g=c[0],b=c[1];return void 0===d&&(d=.2),void 0===p&&(p=8),void 0===f&&(f=.3),void 0===m&&(m=10),u(this,void 0,void 0,(function(){var u,c,y,w,v,O;return l(this,(function(l){switch(l.label){case 0:return u=s.filter((function(t){return t.score>=d})),E()?(y=Object(r.tidy)((function(){var s=A(t,e,u,a,i,o,[g,b],h,p,f,m);return u.map((function(t,e){return function(t,e,n){return Object(r.tidy)((function(){return t.equal(Object(r.scalar)(n)).toInt().mul(e.add(1)).sub(1)}))}(s,n,e)}))})),[4,Promise.all(y.map((function(t){return t.data()})))]):[3,2];case 1:return c=l.sent(),y.forEach((function(t){return t.dispose()})),[3,6];case 2:return[4,t.data()];case 3:return w=l.sent(),[4,e.data()];case 4:return v=l.sent(),[4,n.data()];case 5:O=l.sent(),c=function(t,e,n,r,s,a,i,o,u,l,c){var h=o[0],d=o[1];void 0===c&&(c=5);for(var p=r.map((function(t){return new Int32Array(s*a).fill(-1)})),f=u.top,m=u.left,g=x([s,a],[h,d],u),b=g[0],y=g[1],w=I([h,d],i)[0],v=0;v<s;v+=1)for(var O=0;O<a;O+=1){var S=v*a+O;if(1===t[S]){var k=N({x:O,y:v},e,r,c,[f,m],[b,y],w,[s,a],i,l);k>=0&&(p[k][S]=n[S])}}return p}(w,v,O,u,a,i,o,[g,b],h,p),l.label=6;case 6:return[2,c.map((function(t,e){return{pose:u[e],data:t,height:a,width:i}}))]}}))}))}function R(t){return Math.floor(t/2)}var j=function(){function t(t,e){this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=e}return t.prototype.enqueue=function(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)},t.prototype.dequeue=function(){var t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t},t.prototype.empty=function(){return-1===this.numberOfElements},t.prototype.size=function(){return this.numberOfElements+1},t.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},t.prototype.max=function(){return this.priorityQueue[0]},t.prototype.swim=function(t){for(;t>0&&this.less(R(t),t);)this.exchange(t,R(t)),t=R(t)},t.prototype.sink=function(t){for(;2*t<=this.numberOfElements;){var e=2*t;if(e<this.numberOfElements&&this.less(e,e+1)&&e++,!this.less(t,e))break;this.exchange(t,e),t=e}},t.prototype.getValueAt=function(t){return this.getElementValue(this.priorityQueue[t])},t.prototype.less=function(t,e){return this.getValueAt(t)<this.getValueAt(e)},t.prototype.exchange=function(t,e){var n=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[e],this.priorityQueue[e]=n},t}();function D(t,e,n,r,s,a){for(var i=a.shape,o=i[0],u=i[1],l=!0,c=Math.max(n-s,0),h=Math.min(n+s+1,o),d=c;d<h;++d){for(var p=Math.max(r-s,0),f=Math.min(r+s+1,u),m=p;m<f;++m)if(a.get(d,m,t)>e){l=!1;break}if(!l)break}return l}var _=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map((function(t){var e=t[0],n=t[1];return[y[e],y[n]]})),F=_.map((function(t){return t[1]})),M=_.map((function(t){return t[0]}));function z(t,e,n,r){return{y:O(Math.round(t.y/e),0,n-1),x:O(Math.round(t.x/e),0,r-1)}}function L(t,e,n,r,s,a,i,o){void 0===o&&(o=2);for(var u=r.shape,l=u[0],c=u[1],h=function(t,e,n){var r=n.shape[2]/2;return{y:n.get(e.y,e.x,t),x:n.get(e.y,e.x,r+t)}}(t,z(e.position,a,l,c),i),d=S(e.position,h),p=0;p<o;p++){var f=z(d,a,l,c),m=w(f.y,f.x,n,s);d=S({x:f.x*a,y:f.y*a},{x:m.x,y:m.y})}var b=z(d,a,l,c),y=r.get(b.y,b.x,n);return{position:d,part:g[n],score:y}}function B(t,e,n,r,s,a){var i=e.shape[2],o=F.length,u=new Array(i),l=t.part,c=t.score,h=v(l,r,n);u[l.id]={score:c,part:g[l.id],position:h};for(var d=o-1;d>=0;--d){var p=F[d],f=M[d];u[p]&&!u[f]&&(u[f]=L(d,u[p],f,e,n,r,a))}for(d=0;d<o;++d)p=M[d],f=F[d],u[p]&&!u[f]&&(u[f]=L(d,u[p],f,e,n,r,s));return u}function P(t,e,n,r){var s=n.x,a=n.y;return t.some((function(t){var n=t.keypoints[r].position;return function(t,e,n,r){var s=n-t,a=r-e;return s*s+a*a}(a,s,n.y,n.x)<=e}))}function W(t,e,n){return n.reduce((function(n,r,s){var a=r.position,i=r.score;return P(t,e,a,s)||(n+=i),n}),0)/n.length}function V(t,e,n,r,s,a,i,o){void 0===i&&(i=.5),void 0===o&&(o=20);for(var u=[],l=function(t,e,n){for(var r=n.shape,s=r[0],a=r[1],i=r[2],o=new j(s*a*i,(function(t){return t.score})),u=0;u<s;++u)for(var l=0;l<a;++l)for(var c=0;c<i;++c){var h=n.get(u,l,c);h<t||D(c,h,u,l,e,n)&&o.enqueue({score:h,part:{heatmapY:u,heatmapX:l,id:c}})}return o}(i,1,t),c=o*o;u.length<a&&!l.empty();){var h=l.dequeue();if(!P(u,c,v(h.part,s,e),h.part.id)){var d=B(h,t,e,s,n,r),p=W(u,c,d);u.push({keypoints:d,score:p})}}return u}var U,q=[-123.15,-115.9,-103.06],G=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i(e,t),e.prototype.preprocessInput=function(t){return t.add(q)},e.prototype.nameOutputResults=function(t){var e=t[0],n=t[1],r=t[2],s=t[3],a=t[4],i=t[5];return{offsets:a,segmentation:t[6],partHeatmaps:i,longOffsets:s,heatmap:r,displacementFwd:n,displacementBwd:e,partOffsets:t[7]}},e}(f),H="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/",K="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/";function X(t){if("undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)return function(t){if(0!==t.offsetHeight&&0!==t.offsetWidth)return[t.offsetHeight,t.offsetWidth];if(null!=t.height&&null!=t.width)return[t.height,t.width];throw new Error("HTMLImageElement must have height and width attributes set.")}(t);if("undefined"!=typeof ImageData&&t instanceof ImageData)return[t.height,t.width];if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)return function(t){return null!=t.height&&null!=t.width?[t.height,t.width]:[t.videoHeight,t.videoWidth]}(t);if(t instanceof r.Tensor)return[t.shape[0],t.shape[1]];throw new Error("error: Unknown input type: "+t+".")}function Y(t,e){return function(t,e){return(t-1)%e==0}(t,e)?t:Math.floor(t/e)*e+1}var J={low:"low",medium:"medium",high:"high",full:"full"},Z=((U={})[J.low]=.25,U[J.medium]=.5,U[J.high]=.75,U[J.full]=1,U);function Q(t,e,n){var s=n[0],a=n[1],i=function(t){if("string"==typeof t){var e=Z[t];return r.util.assert("number"==typeof e,(function(){return"string value of inputResolution must be one of "+Object.values(J).join(",")+" but was "+t+"."})),e}return r.util.assert("number"==typeof t&&t<=2&&t>=.1,(function(){return"inputResolution must be a string or number between 0.1 and 2, but was "+t})),t}(t);return[Y(s*i,e),Y(a*i,e)]}function tt(t,e,n,s,a){var i=e[0],o=e[1],u=n[0],l=n[1],c=s[0],h=c[0],d=c[1],p=s[1],f=p[0],m=p[1];return void 0===a&&(a=!1),Object(r.tidy)((function(){var e=t.resizeBilinear([u,l],!0);return a&&(e=e.sigmoid()),function(t,e,n){var s=e[0],a=e[1],i=n[0],o=i[0],u=i[1],l=n[1],c=l[0],h=l[1];return Object(r.tidy)((function(){return r.image.cropAndResize(t.expandDims(),[[o/(s+o+u-1),c/(a+c+h-1),(o+s-1)/(s+o+u-1),(c+a-1)/(a+c+h-1)]],[0],[s,a]).squeeze([0])}))}(e,[i,o],[[h,d],[f,m]])}))}function et(t,e){var n=e[0],s=e[1],a=X(t),i=a[0],o=a[1],u=s/n,l=[0,0,0,0],c=l[0],h=l[1],d=l[2],p=l[3];return o/i<u?(c=0,h=0,d=Math.round(.5*(u*i-o)),p=Math.round(.5*(u*i-o))):(c=Math.round(.5*(1/u*o-i)),h=Math.round(.5*(1/u*o-i)),d=0,p=0),{resized:Object(r.tidy)((function(){var e=function(t){return t instanceof r.Tensor?t:r.browser.fromPixels(t)}(t);return(e=Object(r.pad3d)(e,[[c,h],[d,p],[0,0]])).resizeBilinear([n,s])})),padding:{top:c,left:d,right:p,bottom:h}}}function nt(t){return u(this,void 0,void 0,(function(){return l(this,(function(e){return[2,Promise.all(t.map((function(t){return t.buffer()})))]}))}))}function rt(t,e,n,r,s){var a=e[0],i=e[1],o=n[0],u=n[1],l=function(t,e,n,r,s){return void 0===r&&(r=0),void 0===s&&(s=0),1===n&&1===e&&0===r&&0===s?t:t.map((function(t){return function(t,e,n,r,s){return void 0===r&&(r=0),void 0===s&&(s=0),{score:t.score,keypoints:t.keypoints.map((function(t){var a=t.score,i=t.part,o=t.position;return{score:a,part:i,position:{x:o.x*n+s,y:o.y*e+r}}}))}}(t,e,n,r,s)}))}(t,(a+r.top+r.bottom)/o,(i+r.left+r.right)/u,-r.top,-r.left);return s?function(t,e){return e<=0?t:t.map((function(t){return function(t,e){return{score:t.score,keypoints:t.keypoints.map((function(t){var n=t.score,r=t.part,s=t.position;return{score:n,part:r,position:{x:e-1-s.x,y:s.y}}}))}}(t,e)}))}(l,i):l}var st={architecture:"MobileNetV1",outputStride:16,quantBytes:4,multiplier:.75},at=["MobileNetV1","ResNet50"],it={MobileNetV1:[8,16,32],ResNet50:[32,16]},ot={MobileNetV1:[.5,.75,1],ResNet50:[1]},ut=[1,2,4];var lt={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},ct={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function ht(t){var e=t.segmentationThreshold,n=t.maxDetections,r=t.scoreThreshold,s=t.nmsRadius;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(n<=0)throw new Error("Invalid maxDetections "+n+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(s<=0)throw new Error("Invalid nmsRadius "+s+".")}function dt(t){var e=t.segmentationThreshold,n=t.maxDetections,r=t.scoreThreshold,s=t.nmsRadius,a=t.minKeypointScore,i=t.refineSteps;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(n<=0)throw new Error("Invalid maxDetections "+n+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(s<=0)throw new Error("Invalid nmsRadius "+s+".");if(a<0||a>1)throw new Error("Invalid minKeypointScore "+a+".Should be in range [0.0, 1.0]");if(i<=0||i>20)throw new Error("Invalid refineSteps "+i+".Should be in range [1, 20]")}var pt=function(){function t(t){this.baseModel=t}return t.prototype.predictForPersonSegmentation=function(t){var e=this.baseModel.predict(t);return{segmentLogits:e.segmentation,heatmapScores:e.heatmapScores,offsets:e.offsets,displacementFwd:e.displacementFwd,displacementBwd:e.displacementBwd}},t.prototype.predictForPersonSegmentationAndPart=function(t){var e=this.baseModel.predict(t);return{segmentLogits:e.segmentation,partHeatmapLogits:e.partHeatmaps,heatmapScores:e.heatmapScores,offsets:e.offsets,displacementFwd:e.displacementFwd,displacementBwd:e.displacementBwd}},t.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(t){var e=this.baseModel.predict(t);return{segmentLogits:e.segmentation,longOffsets:e.longOffsets,heatmapScores:e.heatmapScores,offsets:e.offsets,displacementFwd:e.displacementFwd,displacementBwd:e.displacementBwd,partHeatmaps:e.partHeatmaps}},t.prototype.segmentPersonActivation=function(t,e,n){var s=this;void 0===n&&(n=.5);var a=X(t),i=a[0],o=a[1],u=Q(e,this.baseModel.outputStride,[i,o]),l=et(t,u),c=l.resized,d=l.padding,p=Object(r.tidy)((function(){var t=s.predictForPersonSegmentation(c),e=t.segmentLogits,r=t.heatmapScores,a=t.offsets,u=t.displacementFwd,l=t.displacementBwd,p=c.shape,f=p[0],m=p[1];return{segmentation:h(tt(e,[i,o],[f,m],[[d.top,d.bottom],[d.left,d.right]],!0).squeeze(),n),heatmapScores:r,offsets:a,displacementFwd:u,displacementBwd:l}})),f=p.segmentation,m=p.heatmapScores,g=p.offsets,b=p.displacementFwd,y=p.displacementBwd;return c.dispose(),{segmentation:f,heatmapScores:m,offsets:g,displacementFwd:b,displacementBwd:y,padding:d,internalResolutionHeightAndWidth:u}},t.prototype.segmentPerson=function(t,e){return void 0===e&&(e=lt),u(this,void 0,void 0,(function(){var n,r,s,a,i,u,c,h,d,p,f,m,g,b,y,x,w,v;return l(this,(function(l){switch(l.label){case 0:return ht(e=o({},lt,e)),n=this.segmentPersonActivation(t,e.internalResolution,e.segmentationThreshold),r=n.segmentation,s=n.heatmapScores,a=n.offsets,i=n.displacementFwd,u=n.displacementBwd,c=n.padding,h=n.internalResolutionHeightAndWidth,d=r.shape,p=d[0],f=d[1],[4,r.data()];case 1:return m=l.sent(),r.dispose(),[4,nt([s,a,i,u])];case 2:return g=l.sent(),b=g[0],y=g[1],x=g[2],w=g[3],v=rt(v=V(b,y,x,w,this.baseModel.outputStride,e.maxDetections,e.scoreThreshold,e.nmsRadius),[p,f],h,c,!1),s.dispose(),a.dispose(),i.dispose(),u.dispose(),[2,{height:p,width:f,data:m,allPoses:v}]}}))}))},t.prototype.segmentMultiPerson=function(t,e){return void 0===e&&(e=ct),u(this,void 0,void 0,(function(){var n,s,a,i,u,c,d,p,f,m,g,b,y,x,w,v,O,S,k,C,N,I=this;return l(this,(function(l){switch(l.label){case 0:return dt(e=o({},ct,e)),n=X(t),s=n[0],a=n[1],i=Q(e.internalResolution,this.baseModel.outputStride,[s,a]),u=et(t,i),c=u.resized,d=u.padding,p=Object(r.tidy)((function(){var t,n=I.predictForMultiPersonInstanceSegmentationAndPart(c),r=n.segmentLogits,o=n.longOffsets,u=n.heatmapScores,l=n.offsets,p=n.displacementFwd,f=n.displacementBwd;return t=o,{segmentation:h(tt(r,[s,a],i,[[d.top,d.bottom],[d.left,d.right]],!0).squeeze(),e.segmentationThreshold),longOffsets:t,heatmapScoresRaw:u,offsetsRaw:l,displacementFwdRaw:p,displacementBwdRaw:f}})),f=p.segmentation,m=p.longOffsets,g=p.heatmapScoresRaw,b=p.offsetsRaw,y=p.displacementFwdRaw,x=p.displacementBwdRaw,[4,nt([g,b,y,x])];case 1:return w=l.sent(),v=w[0],O=w[1],S=w[2],k=w[3],C=rt(C=V(v,O,S,k,this.baseModel.outputStride,e.maxDetections,e.scoreThreshold,e.nmsRadius),[s,a],i,d,!1),[4,T(f,m,C,s,a,this.baseModel.outputStride,i,d,e.scoreThreshold,e.refineSteps,e.minKeypointScore,e.maxDetections)];case 2:return N=l.sent(),c.dispose(),f.dispose(),m.dispose(),g.dispose(),b.dispose(),y.dispose(),x.dispose(),[2,N]}}))}))},t.prototype.segmentPersonPartsActivation=function(t,e,n){var s=this;void 0===n&&(n=.5);var a=X(t),i=a[0],o=a[1],u=Q(e,this.baseModel.outputStride,[i,o]),l=et(t,u),c=l.resized,p=l.padding,f=Object(r.tidy)((function(){var t=s.predictForPersonSegmentationAndPart(c),e=t.segmentLogits,r=t.partHeatmapLogits,a=t.heatmapScores,u=t.offsets,l=t.displacementFwd,f=t.displacementBwd,m=c.shape,g=m[0],b=m[1],y=tt(e,[i,o],[g,b],[[p.top,p.bottom],[p.left,p.right]],!0),x=tt(r,[i,o],[g,b],[[p.top,p.bottom],[p.left,p.right]],!0);return{partSegmentation:d(h(y.squeeze(),n),x),heatmapScores:a,offsets:u,displacementFwd:l,displacementBwd:f}})),m=f.partSegmentation,g=f.heatmapScores,b=f.offsets,y=f.displacementFwd,x=f.displacementBwd;return c.dispose(),{partSegmentation:m,heatmapScores:g,offsets:b,displacementFwd:y,displacementBwd:x,padding:p,internalResolutionHeightAndWidth:u}},t.prototype.segmentPersonParts=function(t,e){return void 0===e&&(e=lt),u(this,void 0,void 0,(function(){var n,r,s,a,i,u,c,h,d,p,f,m,g,b,y,x,w,v;return l(this,(function(l){switch(l.label){case 0:return ht(e=o({},lt,e)),n=this.segmentPersonPartsActivation(t,e.internalResolution,e.segmentationThreshold),r=n.partSegmentation,s=n.heatmapScores,a=n.offsets,i=n.displacementFwd,u=n.displacementBwd,c=n.padding,h=n.internalResolutionHeightAndWidth,d=r.shape,p=d[0],f=d[1],[4,r.data()];case 1:return m=l.sent(),r.dispose(),[4,nt([s,a,i,u])];case 2:return g=l.sent(),b=g[0],y=g[1],x=g[2],w=g[3],v=rt(v=V(b,y,x,w,this.baseModel.outputStride,e.maxDetections,e.scoreThreshold,e.nmsRadius),[p,f],h,c,!1),s.dispose(),a.dispose(),i.dispose(),u.dispose(),[2,{height:p,width:f,data:m,allPoses:v}]}}))}))},t.prototype.segmentMultiPersonParts=function(t,e){return void 0===e&&(e=ct),u(this,void 0,void 0,(function(){var n,s,a,i,u,c,d,f,m,g,b,y,x,w,v,O,S,k,C,N,I,A,E=this;return l(this,(function(l){switch(l.label){case 0:return dt(e=o({},ct,e)),n=X(t),s=n[0],a=n[1],i=Q(e.internalResolution,this.baseModel.outputStride,[s,a]),u=et(t,i),c=u.resized,d=u.padding,f=Object(r.tidy)((function(){var t=E.predictForMultiPersonInstanceSegmentationAndPart(c),n=t.segmentLogits,r=t.longOffsets,o=t.heatmapScores,u=t.offsets,l=t.displacementFwd,f=t.displacementBwd,m=t.partHeatmaps,g=tt(n,[s,a],i,[[d.top,d.bottom],[d.left,d.right]],!0),b=tt(m,[s,a],i,[[d.top,d.bottom],[d.left,d.right]],!0),y=r;return{segmentation:h(g.squeeze(),e.segmentationThreshold),longOffsets:y,heatmapScoresRaw:o,offsetsRaw:u,displacementFwdRaw:l,displacementBwdRaw:f,partSegmentation:p(b)}})),m=f.segmentation,g=f.longOffsets,b=f.heatmapScoresRaw,y=f.offsetsRaw,x=f.displacementFwdRaw,w=f.displacementBwdRaw,v=f.partSegmentation,[4,nt([b,y,x,w])];case 1:return O=l.sent(),S=O[0],k=O[1],C=O[2],N=O[3],I=rt(I=V(S,k,C,N,this.baseModel.outputStride,e.maxDetections,e.scoreThreshold,e.nmsRadius),[s,a],i,d,!1),[4,$(m,g,v,I,s,a,this.baseModel.outputStride,i,d,e.scoreThreshold,e.refineSteps,e.minKeypointScore,e.maxDetections)];case 2:return A=l.sent(),c.dispose(),m.dispose(),g.dispose(),b.dispose(),y.dispose(),x.dispose(),w.dispose(),v.dispose(),[2,A]}}))}))},t.prototype.dispose=function(){this.baseModel.dispose()},t}();function ft(t){return u(this,void 0,void 0,(function(){var e,n,a,i,o,u;return l(this,(function(l){switch(l.label){case 0:if(e=t.outputStride,n=t.quantBytes,a=t.multiplier,null==r)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return i=function(t,e,n){var r={1:"100",.75:"075",.5:"050"},s="model-stride"+t+".json";return 4===n?K+"float/"+r[e]+"/"+s:K+"quant"+n+"/"+r[e]+"/"+s}(e,a,n),[4,Object(s.a)(t.modelUrl||i)];case 1:return o=l.sent(),u=new m(o,e),[2,new pt(u)]}}))}))}function mt(t){return u(this,void 0,void 0,(function(){var e,n,a,i,o;return l(this,(function(u){switch(u.label){case 0:if(e=t.outputStride,n=t.quantBytes,null==r)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return a=function(t,e){var n="model-stride"+t+".json";return 4===e?H+"float/"+n:H+"quant"+e+"/"+n}(e,n),[4,Object(s.a)(t.modelUrl||a)];case 1:return i=u.sent(),o=new G(i,e),[2,new pt(o)]}}))}))}function gt(t){return void 0===t&&(t=st),u(this,void 0,void 0,(function(){return l(this,(function(e){return"ResNet50"===(t=function(t){if(null==(t=t||st).architecture&&(t.architecture="MobileNetV1"),at.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+at);if(null==t.outputStride&&(t.outputStride=16),it[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+it[t.architecture]+" for architecture "+t.architecture+".");if(null==t.multiplier&&(t.multiplier=1),ot[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+ot[t.architecture]+" for architecture "+t.architecture+".");if(null==t.quantBytes&&(t.quantBytes=4),ut.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+ut+" for architecture "+t.architecture+".");return t}(t)).architecture?[2,mt(t)]:"MobileNetV1"===t.architecture?[2,ft(t)]:[2,null]}))}))}var bt={};function yt(t,e,n,r){var s=t.width,a=t.height,i=e.width,o=e.height;if(s!==i||a!==o)throw new Error("error: dimensions must match. "+n+" has dimensions "+s+"x"+a+", "+r+" has dimensions "+i+"x"+o)}function xt(t){var e=t.getContext("2d");e.scale(-1,1),e.translate(-t.width,0)}function wt(t){return bt[t]||(bt[t]=document.createElement("canvas")),bt[t]}function vt(t,e,n){var r=t.height,s=t.width,a=n.getContext("2d");n.width=s,n.height=r,a.clearRect(0,0,s,r),a.save(),/^((?!chrome|android).)*safari/i.test(navigator.userAgent)?function(t,e,n){for(var r=t.getContext("2d"),s=0,a=1/(2*Math.PI*5*5),i=n<3?1:2,o=-n;o<=n;o+=i)for(var u=-n;u<=n;u+=i)s+=a*Math.exp(-(u*u+o*o)/50);for(o=-n;o<=n;o+=i)for(u=-n;u<=n;u+=i)r.globalAlpha=a*Math.exp(-(u*u+o*o)/50)/s*n,r.drawImage(e,u,o);r.globalAlpha=1}(n,t,e):(a.filter="blur("+e+"px)",a.drawImage(t,0,0,s,r)),a.restore()}function Ot(t,e,n){var r=wt(n);return 0===e?function(t,e){var n=t.width,r=t.height;e.width=n,e.height=r,e.getContext("2d").drawImage(t,0,0,n,r)}(t,r):vt(t,e,r),r}function St(t,e){var n=wt(e);return function(t,e){e.width=t.width,e.height=t.height,e.getContext("2d").putImageData(t,0,0)}(t,n),n}var kt=[[110,64,170],[143,61,178],[178,60,178],[210,62,167],[238,67,149],[255,78,125],[255,94,99],[255,115,75],[255,140,56],[239,167,47],[217,194,49],[194,219,64],[175,240,91],[135,245,87],[96,247,96],[64,243,115],[40,234,141],[28,219,169],[26,199,194],[33,176,213],[47,150,224],[65,125,224],[84,101,214],[99,81,195]];function Ct(t,e){if(void 0===e&&(e=kt),Array.isArray(t)&&0===t.length)return null;for(var n,r=(n=Array.isArray(t)?t:[t])[0],s=r.width,a=r.height,i=new Uint8ClampedArray(s*a*4),o=0;o<a*s;++o){var u=4*o;i[u+0]=255,i[u+1]=255,i[u+2]=255,i[u+3]=255;for(var l=0;l<n.length;l++){var c=n[l].data[o];if(-1!==c){var h=e[c];if(!h)throw new Error("No color could be found for part id "+c);i[u+0]=h[0],i[u+1]=h[1],i[u+2]=h[2],i[u+3]=255}}}return new ImageData(i,s,a)}var Nt="blurred-mask",It="mask",At="lowres-part-mask";function Et(t,e,n,r,s,a,i){void 0===r&&(r=.7),void 0===s&&(s=0),void 0===a&&(a=!1),void 0===i&&(i=10);var o=X(e),u=o[0];yt({width:o[1],height:u},n,"image","mask");var l=Ot(St(n,It),s,Nt);t.width=l.width,t.height=l.height;var c=t.getContext("2d");c.save(),a&&xt(t);var h=wt(At),d=h.getContext("2d");h.width=l.width*(1/i),h.height=l.height*(1/i),d.drawImage(l,0,0,l.width,l.height,0,0,h.width,h.height),c.imageSmoothingEnabled=!1,c.drawImage(h,0,0,h.width,h.height,0,0,t.width,t.height);for(var p=0;p<h.width;p++)c.beginPath(),c.strokeStyle="#ffffff",c.moveTo(i*p,0),c.lineTo(i*p,t.height),c.stroke();for(p=0;p<h.height;p++)c.beginPath(),c.strokeStyle="#ffffff",c.moveTo(0,i*p),c.lineTo(t.width,i*p),c.stroke();c.globalAlpha=1-r,c.drawImage(e,0,0,l.width,l.height),c.restore()}},function(t,e,n){"use strict";(function(t){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=n(58),s=n(59),a=n(60);function i(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function o(t,e){if(i()<e)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=u.prototype:(null===t&&(t=new u(e)),t.length=e),t}function u(t,e,n){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(t,e,n);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return h(this,t)}return l(this,t,e,n)}function l(t,e,n,r){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r);u.TYPED_ARRAY_SUPPORT?(t=e).__proto__=u.prototype:t=d(t,e);return t}(t,e,n,r):"string"==typeof e?function(t,e,n){"string"==typeof n&&""!==n||(n="utf8");if(!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|f(e,n),s=(t=o(t,r)).write(e,n);s!==r&&(t=t.slice(0,s));return t}(t,e,n):function(t,e){if(u.isBuffer(e)){var n=0|p(e.length);return 0===(t=o(t,n)).length||e.copy(t,0,0,n),t}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||(r=e.length)!=r?o(t,0):d(t,e);if("Buffer"===e.type&&a(e.data))return d(t,e.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function c(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function h(t,e){if(c(e),t=o(t,e<0?0:0|p(e)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function d(t,e){var n=e.length<0?0:0|p(e.length);t=o(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function p(t){if(t>=i())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i().toString(16)+" bytes");return 0|t}function f(t,e){if(u.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return B(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return P(t).length;default:if(r)return B(t).length;e=(""+e).toLowerCase(),r=!0}}function m(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return E(this,e,n);case"utf8":case"utf-8":return N(this,e,n);case"ascii":return I(this,e,n);case"latin1":case"binary":return A(this,e,n);case"base64":return C(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return T(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function g(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function b(t,e,n,r,s){if(0===t.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=s?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(s)return-1;n=t.length-1}else if(n<0){if(!s)return-1;n=0}if("string"==typeof e&&(e=u.from(e,r)),u.isBuffer(e))return 0===e.length?-1:y(t,e,n,r,s);if("number"==typeof e)return e&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):y(t,[e],n,r,s);throw new TypeError("val must be string, number or Buffer")}function y(t,e,n,r,s){var a,i=1,o=t.length,u=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;i=2,o/=2,u/=2,n/=2}function l(t,e){return 1===i?t[e]:t.readUInt16BE(e*i)}if(s){var c=-1;for(a=n;a<o;a++)if(l(t,a)===l(e,-1===c?0:a-c)){if(-1===c&&(c=a),a-c+1===u)return c*i}else-1!==c&&(a-=a-c),c=-1}else for(n+u>o&&(n=o-u),a=n;a>=0;a--){for(var h=!0,d=0;d<u;d++)if(l(t,a+d)!==l(e,d)){h=!1;break}if(h)return a}return-1}function x(t,e,n,r){n=Number(n)||0;var s=t.length-n;r?(r=Number(r))>s&&(r=s):r=s;var a=e.length;if(a%2!=0)throw new TypeError("Invalid hex string");r>a/2&&(r=a/2);for(var i=0;i<r;++i){var o=parseInt(e.substr(2*i,2),16);if(isNaN(o))return i;t[n+i]=o}return i}function w(t,e,n,r){return W(B(e,t.length-n),t,n,r)}function v(t,e,n,r){return W(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function O(t,e,n,r){return v(t,e,n,r)}function S(t,e,n,r){return W(P(e),t,n,r)}function k(t,e,n,r){return W(function(t,e){for(var n,r,s,a=[],i=0;i<t.length&&!((e-=2)<0);++i)n=t.charCodeAt(i),r=n>>8,s=n%256,a.push(s),a.push(r);return a}(e,t.length-n),t,n,r)}function C(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function N(t,e,n){n=Math.min(t.length,n);for(var r=[],s=e;s<n;){var a,i,o,u,l=t[s],c=null,h=l>239?4:l>223?3:l>191?2:1;if(s+h<=n)switch(h){case 1:l<128&&(c=l);break;case 2:128==(192&(a=t[s+1]))&&(u=(31&l)<<6|63&a)>127&&(c=u);break;case 3:a=t[s+1],i=t[s+2],128==(192&a)&&128==(192&i)&&(u=(15&l)<<12|(63&a)<<6|63&i)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:a=t[s+1],i=t[s+2],o=t[s+3],128==(192&a)&&128==(192&i)&&128==(192&o)&&(u=(15&l)<<18|(63&a)<<12|(63&i)<<6|63&o)>65535&&u<1114112&&(c=u)}null===c?(c=65533,h=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),s+=h}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);var n="",r=0;for(;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=4096));return n}(r)}e.Buffer=u,e.SlowBuffer=function(t){+t!=t&&(t=0);return u.alloc(+t)},e.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=i(),u.poolSize=8192,u._augment=function(t){return t.__proto__=u.prototype,t},u.from=function(t,e,n){return l(null,t,e,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(t,e,n){return function(t,e,n,r){return c(e),e<=0?o(t,e):void 0!==n?"string"==typeof r?o(t,e).fill(n,r):o(t,e).fill(n):o(t,e)}(null,t,e,n)},u.allocUnsafe=function(t){return h(null,t)},u.allocUnsafeSlow=function(t){return h(null,t)},u.isBuffer=function(t){return!(null==t||!t._isBuffer)},u.compare=function(t,e){if(!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,r=e.length,s=0,a=Math.min(n,r);s<a;++s)if(t[s]!==e[s]){n=t[s],r=e[s];break}return n<r?-1:r<n?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(t,e){if(!a(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=u.allocUnsafe(e),s=0;for(n=0;n<t.length;++n){var i=t[n];if(!u.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,s),s+=i.length}return r},u.byteLength=f,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)g(this,e,e+1);return this},u.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)g(this,e,e+3),g(this,e+1,e+2);return this},u.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)g(this,e,e+7),g(this,e+1,e+6),g(this,e+2,e+5),g(this,e+3,e+4);return this},u.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?N(this,0,t):m.apply(this,arguments)},u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},u.prototype.compare=function(t,e,n,r,s){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),e<0||n>t.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&e>=n)return 0;if(r>=s)return-1;if(e>=n)return 1;if(this===t)return 0;for(var a=(s>>>=0)-(r>>>=0),i=(n>>>=0)-(e>>>=0),o=Math.min(a,i),l=this.slice(r,s),c=t.slice(e,n),h=0;h<o;++h)if(l[h]!==c[h]){a=l[h],i=c[h];break}return a<i?-1:i<a?1:0},u.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},u.prototype.indexOf=function(t,e,n){return b(this,t,e,n,!0)},u.prototype.lastIndexOf=function(t,e,n){return b(this,t,e,n,!1)},u.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var s=this.length-e;if((void 0===n||n>s)&&(n=s),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var a=!1;;)switch(r){case"hex":return x(this,t,e,n);case"utf8":case"utf-8":return w(this,t,e,n);case"ascii":return v(this,t,e,n);case"latin1":case"binary":return O(this,t,e,n);case"base64":return S(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return k(this,t,e,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function I(t,e,n){var r="";n=Math.min(t.length,n);for(var s=e;s<n;++s)r+=String.fromCharCode(127&t[s]);return r}function A(t,e,n){var r="";n=Math.min(t.length,n);for(var s=e;s<n;++s)r+=String.fromCharCode(t[s]);return r}function E(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var s="",a=e;a<n;++a)s+=L(t[a]);return s}function T(t,e,n){for(var r=t.slice(e,n),s="",a=0;a<r.length;a+=2)s+=String.fromCharCode(r[a]+256*r[a+1]);return s}function $(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function R(t,e,n,r,s,a){if(!u.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>s||e<a)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function j(t,e,n,r){e<0&&(e=65535+e+1);for(var s=0,a=Math.min(t.length-n,2);s<a;++s)t[n+s]=(e&255<<8*(r?s:1-s))>>>8*(r?s:1-s)}function D(t,e,n,r){e<0&&(e=4294967295+e+1);for(var s=0,a=Math.min(t.length-n,4);s<a;++s)t[n+s]=e>>>8*(r?s:3-s)&255}function _(t,e,n,r,s,a){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function F(t,e,n,r,a){return a||_(t,0,n,4),s.write(t,e,n,r,23,4),n+4}function M(t,e,n,r,a){return a||_(t,0,n,8),s.write(t,e,n,r,52,8),n+8}u.prototype.slice=function(t,e){var n,r=this.length;if((t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(t,e)).__proto__=u.prototype;else{var s=e-t;n=new u(s,void 0);for(var a=0;a<s;++a)n[a]=this[a+t]}return n},u.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||$(t,e,this.length);for(var r=this[t],s=1,a=0;++a<e&&(s*=256);)r+=this[t+a]*s;return r},u.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||$(t,e,this.length);for(var r=this[t+--e],s=1;e>0&&(s*=256);)r+=this[t+--e]*s;return r},u.prototype.readUInt8=function(t,e){return e||$(t,1,this.length),this[t]},u.prototype.readUInt16LE=function(t,e){return e||$(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUInt16BE=function(t,e){return e||$(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUInt32LE=function(t,e){return e||$(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUInt32BE=function(t,e){return e||$(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||$(t,e,this.length);for(var r=this[t],s=1,a=0;++a<e&&(s*=256);)r+=this[t+a]*s;return r>=(s*=128)&&(r-=Math.pow(2,8*e)),r},u.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||$(t,e,this.length);for(var r=e,s=1,a=this[t+--r];r>0&&(s*=256);)a+=this[t+--r]*s;return a>=(s*=128)&&(a-=Math.pow(2,8*e)),a},u.prototype.readInt8=function(t,e){return e||$(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){e||$(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(t,e){e||$(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(t,e){return e||$(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return e||$(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readFloatLE=function(t,e){return e||$(t,4,this.length),s.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return e||$(t,4,this.length),s.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return e||$(t,8,this.length),s.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return e||$(t,8,this.length),s.read(this,t,!1,52,8)},u.prototype.writeUIntLE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||R(this,t,e,n,Math.pow(2,8*n)-1,0);var s=1,a=0;for(this[e]=255&t;++a<n&&(s*=256);)this[e+a]=t/s&255;return e+n},u.prototype.writeUIntBE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||R(this,t,e,n,Math.pow(2,8*n)-1,0);var s=n-1,a=1;for(this[e+s]=255&t;--s>=0&&(a*=256);)this[e+s]=t/a&255;return e+n},u.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,1,255,0),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},u.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):j(this,t,e,!0),e+2},u.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):j(this,t,e,!1),e+2},u.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):D(this,t,e,!0),e+4},u.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},u.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var s=Math.pow(2,8*n-1);R(this,t,e,n,s-1,-s)}var a=0,i=1,o=0;for(this[e]=255&t;++a<n&&(i*=256);)t<0&&0===o&&0!==this[e+a-1]&&(o=1),this[e+a]=(t/i>>0)-o&255;return e+n},u.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var s=Math.pow(2,8*n-1);R(this,t,e,n,s-1,-s)}var a=n-1,i=1,o=0;for(this[e+a]=255&t;--a>=0&&(i*=256);)t<0&&0===o&&0!==this[e+a+1]&&(o=1),this[e+a]=(t/i>>0)-o&255;return e+n},u.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,1,127,-128),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):j(this,t,e,!0),e+2},u.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):j(this,t,e,!1),e+2},u.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):D(this,t,e,!0),e+4},u.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||R(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},u.prototype.writeFloatLE=function(t,e,n){return F(this,t,e,!0,n)},u.prototype.writeFloatBE=function(t,e,n){return F(this,t,e,!1,n)},u.prototype.writeDoubleLE=function(t,e,n){return M(this,t,e,!0,n)},u.prototype.writeDoubleBE=function(t,e,n){return M(this,t,e,!1,n)},u.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var s,a=r-n;if(this===t&&n<e&&e<r)for(s=a-1;s>=0;--s)t[s+e]=this[s+n];else if(a<1e3||!u.TYPED_ARRAY_SUPPORT)for(s=0;s<a;++s)t[s+e]=this[s+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+a),e);return a},u.prototype.fill=function(t,e,n,r){if("string"==typeof t){if("string"==typeof e?(r=e,e=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===t.length){var s=t.charCodeAt(0);s<256&&(t=s)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var a;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"==typeof t)for(a=e;a<n;++a)this[a]=t;else{var i=u.isBuffer(t)?t:B(new u(t,r).toString()),o=i.length;for(a=0;a<n-e;++a)this[a+e]=i[a%o]}return this};var z=/[^+\/0-9A-Za-z-_]/g;function L(t){return t<16?"0"+t.toString(16):t.toString(16)}function B(t,e){var n;e=e||1/0;for(var r=t.length,s=null,a=[],i=0;i<r;++i){if((n=t.charCodeAt(i))>55295&&n<57344){if(!s){if(n>56319){(e-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&a.push(239,191,189);continue}s=n;continue}if(n<56320){(e-=3)>-1&&a.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(e-=3)>-1&&a.push(239,191,189);if(s=null,n<128){if((e-=1)<0)break;a.push(n)}else if(n<2048){if((e-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function P(t){return r.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(z,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function W(t,e,n,r){for(var s=0;s<r&&!(s+n>=e.length||s>=t.length);++s)e[s+n]=t[s];return s}}).call(this,n(29))},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return s}));
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:void 0!==t?t:t=>t();function s(){return new Promise(t=>r(()=>t()))}}).call(this,n(69).setImmediate)},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return i}));var r=n(0),s=n(12),a=n(52);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class i extends s.a{decodeUTF8(){return new o(this)}}class o extends a.a{constructor(t){super(),this.upstream=t,this.impl=new u(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class u extends s.b{constructor(t){if(super(),this.upstream=t,Object(r.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(71);this.decoder=new t("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){const e=await this.upstream.next();let n,s;return!e.done&&(n=e.value,s=Object(r.env)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(t.from(n.buffer)),this.outputQueue.push(s),!0)}}}).call(this,n(33).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(12);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class s extends r.a{split(t){return new a(this,t)}}class a extends s{constructor(t,e){super(),this.upstream=t,this.impl=new i(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class i extends r.b{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const t of e.slice(0,-1))this.outputQueue.push(t);return this.carryover=e[e.length-1],!0}}},,function(t,e,n){"use strict";(function(t){var e=n(31),r=n(9);
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(r.c)();s.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),s.registerFlag("IS_BROWSER",()=>e.isBrowser()),s.registerFlag("IS_NODE",()=>void 0!==t&&void 0!==t.versions&&void 0!==t.versions.node),s.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),s.registerFlag("PROD",()=>!1),s.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>s.getBool("DEBUG")),s.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),s.registerFlag("IS_TEST",()=>!1)}).call(this,n(30))},function(t,e,n){"use strict";(function(t){var e=n(9);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r=()=>n(56);let s;class a{constructor(){this.util=n(57),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return null!=Object(e.c)().global.fetch?Object(e.c)().global.fetch(t,n):(null==s&&(s=r()),s(t,n))}now(){const e=t.hrtime();return 1e3*e[0]+e[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got "+e);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}Object(e.c)().get("IS_NODE")&&Object(e.c)().setPlatform("node",new a)}).call(this,n(30))},,,function(t,e,n){"use strict";e.byteLength=function(t){var e=l(t),n=e[0],r=e[1];return 3*(n+r)/4-r},e.toByteArray=function(t){var e,n,r=l(t),i=r[0],o=r[1],u=new a(function(t,e,n){return 3*(e+n)/4-n}(0,i,o)),c=0,h=o>0?i-4:i;for(n=0;n<h;n+=4)e=s[t.charCodeAt(n)]<<18|s[t.charCodeAt(n+1)]<<12|s[t.charCodeAt(n+2)]<<6|s[t.charCodeAt(n+3)],u[c++]=e>>16&255,u[c++]=e>>8&255,u[c++]=255&e;2===o&&(e=s[t.charCodeAt(n)]<<2|s[t.charCodeAt(n+1)]>>4,u[c++]=255&e);1===o&&(e=s[t.charCodeAt(n)]<<10|s[t.charCodeAt(n+1)]<<4|s[t.charCodeAt(n+2)]>>2,u[c++]=e>>8&255,u[c++]=255&e);return u},e.fromByteArray=function(t){for(var e,n=t.length,s=n%3,a=[],i=0,o=n-s;i<o;i+=16383)a.push(c(t,i,i+16383>o?o:i+16383));1===s?(e=t[n-1],a.push(r[e>>2]+r[e<<4&63]+"==")):2===s&&(e=(t[n-2]<<8)+t[n-1],a.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"="));return a.join("")};for(var r=[],s=[],a="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,u=i.length;o<u;++o)r[o]=i[o],s[i.charCodeAt(o)]=o;function l(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function c(t,e,n){for(var s,a,i=[],o=e;o<n;o+=3)s=(t[o]<<16&16711680)+(t[o+1]<<8&65280)+(255&t[o+2]),i.push(r[(a=s)>>18&63]+r[a>>12&63]+r[a>>6&63]+r[63&a]);return i.join("")}s["-".charCodeAt(0)]=62,s["_".charCodeAt(0)]=63},function(t,e){e.read=function(t,e,n,r,s){var a,i,o=8*s-r-1,u=(1<<o)-1,l=u>>1,c=-7,h=n?s-1:0,d=n?-1:1,p=t[e+h];for(h+=d,a=p&(1<<-c)-1,p>>=-c,c+=o;c>0;a=256*a+t[e+h],h+=d,c-=8);for(i=a&(1<<-c)-1,a>>=-c,c+=r;c>0;i=256*i+t[e+h],h+=d,c-=8);if(0===a)a=1-l;else{if(a===u)return i?NaN:1/0*(p?-1:1);i+=Math.pow(2,r),a-=l}return(p?-1:1)*i*Math.pow(2,a-r)},e.write=function(t,e,n,r,s,a){var i,o,u,l=8*a-s-1,c=(1<<l)-1,h=c>>1,d=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:a-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,i=c):(i=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-i))<1&&(i--,u*=2),(e+=i+h>=1?d/u:d*Math.pow(2,1-h))*u>=2&&(i++,u/=2),i+h>=c?(o=0,i=c):i+h>=1?(o=(e*u-1)*Math.pow(2,s),i+=h):(o=e*Math.pow(2,h-1)*Math.pow(2,s),i=0));s>=8;t[n+p]=255&o,p+=f,o/=256,s-=8);for(i=i<<s|o,l+=s;l>0;t[n+p]=255&i,p+=f,i/=256,l-=8);t[n+p-f]|=128*m}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},function(t,e,n){(function(t){var r;!function(t,s,a){function i(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function u(t,e){var n=new i(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n(14)&&n(26)?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.alea=u}(0,t,n(14))}).call(this,n(25)(t))},function(t,e,n){(function(t){var r;!function(t,s,a){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function u(t,e){var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n(14)&&n(26)?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xor128=u}(0,t,n(14))}).call(this,n(25)(t))},function(t,e,n){(function(t){var r;!function(t,s,a){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n(14)&&n(26)?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xorwow=u}(0,t,n(14))}).call(this,n(25)(t))},function(t,e,n){(function(t){var r;!function(t,s,a){function i(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n(14)&&n(26)?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xorshift7=u}(0,t,n(14))}).call(this,n(25)(t))},function(t,e,n){(function(t){var r;!function(t,s,a){function i(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,a=e.i;return e.w=r=r+1640531527|0,n=s[a+34&127],t=s[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[a]=n^t,e.i=a,n+(r^r>>>16)|0},function(t,e){var n,r,s,a,i,o=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),s=0,a=-32;a<u;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=i,t.X=o,t.i=s}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n(14)&&n(26)?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xor4096=u}(0,t,n(14))}).call(this,n(25)(t))},function(t,e,n){(function(t){var r;!function(t,s,a){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n(14)&&n(26)?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.tychei=u}(0,t,n(14))}).call(this,n(25)(t))},function(t,e,n){var r;!function(s,a){var i,o=this,u=a.pow(256,6),l=a.pow(2,52),c=2*l;function h(t,e,n){var r=[],h=f(function t(e,n){var r,s=[],a=typeof e;if(n&&"object"==a)for(r in e)try{s.push(t(e[r],n-1))}catch(t){}return s.length?s:"string"==a?e:e+"\0"}((e=1==e?{entropy:!0}:e||{}).entropy?[t,m(s)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(256):(t=new Uint8Array(256),(o.crypto||o.msCrypto).getRandomValues(t)),m(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,m(s)]}}():t,3),r),g=new d(r),b=function(){for(var t=g.g(6),e=u,n=0;t<l;)t=256*(t+n),e*=256,n=g.g(1);for(;t>=c;)t/=2,e/=2,n>>>=1;return(t+n)/e};return b.int32=function(){return 0|g.g(4)},b.quick=function(){return g.g(4)/4294967296},b.double=b,f(m(g.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&p(r,g),t.state=function(){return p(g,{})}),n?(a.random=t,e):t})(b,h,"global"in e?e.global:this==a,e.state)}function d(t){var e,n=t.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(t=[n++]);s<256;)i[s]=s++;for(s=0;s<256;s++)i[s]=i[a=255&a+t[s%n]+(e=i[s])],i[a]=e;(r.g=function(t){for(var e,n=0,s=r.i,a=r.j,i=r.S;t--;)e=i[s=255&s+1],n=256*n+i[255&(i[s]=i[a=255&a+e])+(i[a]=e)];return r.i=s,r.j=a,n})(256)}function p(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function f(t,e){for(var n,r=t+"",s=0;s<r.length;)e[255&s]=255&(n^=19*e[255&s])+r.charCodeAt(s++);return m(e)}function m(t){return String.fromCharCode.apply(0,t)}if(a.seedrandom=h,f(a.random(),s),t.exports){t.exports=h;try{i=n(68)}catch(t){}}else void 0===(r=function(){return h}.call(e,n,e,t))||(t.exports=r)}([],Math)},,function(t,e,n){(function(t){var r=void 0!==t&&t||"undefined"!=typeof self&&self||window,s=Function.prototype.apply;function a(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new a(s.call(setTimeout,r,arguments),clearTimeout)},e.setInterval=function(){return new a(s.call(setInterval,r,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},a.prototype.unref=a.prototype.ref=function(){},a.prototype.close=function(){this._clearFn.call(r,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout((function(){t._onTimeout&&t._onTimeout()}),e))},n(70),e.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,n(29))},function(t,e,n){(function(t,e){!function(t,n){"use strict";if(!t.setImmediate){var r,s,a,i,o,u=1,l={},c=!1,h=t.document,d=Object.getPrototypeOf&&Object.getPrototypeOf(t);d=d&&d.setTimeout?d:t,"[object process]"==={}.toString.call(t.process)?r=function(t){e.nextTick((function(){f(t)}))}:!function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?t.MessageChannel?((a=new MessageChannel).port1.onmessage=function(t){f(t.data)},r=function(t){a.port2.postMessage(t)}):h&&"onreadystatechange"in h.createElement("script")?(s=h.documentElement,r=function(t){var e=h.createElement("script");e.onreadystatechange=function(){f(t),e.onreadystatechange=null,s.removeChild(e),e=null},s.appendChild(e)}):r=function(t){setTimeout(f,0,t)}:(i="setImmediate$"+Math.random()+"$",o=function(e){e.source===t&&"string"==typeof e.data&&0===e.data.indexOf(i)&&f(+e.data.slice(i.length))},t.addEventListener?t.addEventListener("message",o,!1):t.attachEvent("onmessage",o),r=function(e){t.postMessage(i+e,"*")}),d.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var s={callback:t,args:e};return l[u]=s,r(u),u++},d.clearImmediate=p}function p(t){delete l[t]}function f(t){if(c)setTimeout(f,0,t);else{var e=l[t];if(e){c=!0;try{!function(t){var e=t.callback,n=t.args;switch(n.length){case 0:e();break;case 1:e(n[0]);break;case 2:e(n[0],n[1]);break;case 3:e(n[0],n[1],n[2]);break;default:e.apply(void 0,n)}}(e)}finally{p(t),c=!1}}}}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,n(29),n(30))},,,function(t,e,n){"use strict";var r={};n.r(r),n.d(r,"maxImpl",(function(){return js})),n.d(r,"transposeImpl",(function(){return Ds}));var s=n(0);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let a;function i(){return null==a&&(a=Object(s.backend)().epsilon()),a}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class o extends Error{constructor(t){super(t),Object.setPrototypeOf(this,o.prototype)}}class u extends Error{constructor(t){super(t),Object.setPrototypeOf(this,u.prototype)}}class l extends Error{constructor(t){super(t),Object.setPrototypeOf(this,l.prototype)}}class c extends Error{constructor(t){super(t),Object.setPrototypeOf(this,c.prototype)}}class h extends Error{constructor(t){super(t),Object.setPrototypeOf(this,h.prototype)}}Error;
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function d(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function p(t,e){if(!t)throw new h(e)}function f(t,e){let n=0;for(const r of t)r===e&&n++;return n}function m(t){return 1===t.length?t[0]:t}function g(t){return Array.isArray(t)?t:[t]}function b(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function y(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let x={};function w(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function v(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let a;if(s in n)a=n[s];else if(s in x)a=x[s];else if(a=e[s],null==a)throw new l(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=t;if(null==a.className||null==a.config)throw new l(r+": Improper config format: "+JSON.stringify(a)+".\n'className' and 'config' must set.");const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in x?[o,u]=x.className:i in e&&([o,u]=e[i]),null==o)throw new l(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const e of Object.keys(x))t[e]=x[e];for(const e of Object.keys(n))t[e]=n[e];a.config.customObjects=t;const e=Object.assign({},x);for(const t of Object.keys(n))x[t]=n[t];!function t(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>t(e));else{const n=Object.keys(e);for(const r of n){const n=e[r];null!=n&&"object"==typeof n&&(Array.isArray(n)||"ndarray"!==n.type||"number"!=typeof n.value?t(n):e[r]=n.value)}}}(a.config);const r=u(o,a.config,n,s);return x=Object.assign({},e),r}{const t=Object.assign({},x);for(const t of Object.keys(n))x[t]=n[t];const e=new o(a.config);return x=Object.assign({},t),e}}}function O(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function S(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function k(t){if(null==t)throw new l("Invalid value in obj: "+JSON.stringify(t));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function C(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new l(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function N(t,e,n=0,r=1/0){return p(n>=0),p(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function I(t,e){Array.isArray(t)?(s.util.assert(t.length>0,()=>e+" is unexpectedly an empty array."),t.forEach((t,n)=>I(t,`element ${n+1} of ${e}`))):s.util.assert(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got `+function t(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>t(e)).join(",")+"]":"string"==typeof e?`"${e}"`:""+e}(t)+".")}function A(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function E(t,e){return Object(s.tidy)(()=>s.sqrt(s.sum(s.mul(t,t),e,!0)))}class T extends s.serialization.Serializable{getConfig(){return{}}}class $ extends T{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(s.tidy)(()=>{const e=E(t,this.axis),n=s.clipByValue(e,0,this.maxValue);return s.mul(t,s.div(n,s.add(i(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}$.className="MaxNorm",s.serialization.registerClass($);class R extends T{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(s.tidy)(()=>s.div(t,s.add(i(),E(t,this.axis))))}getConfig(){return{axis:this.axis}}}R.className="UnitNorm",s.serialization.registerClass(R);class j extends T{apply(t){return s.relu(t)}}j.className="NonNeg",s.serialization.registerClass(j);class D extends T{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(s.tidy)(()=>{const e=E(t,this.axis),n=s.add(s.mul(this.rate,s.clipByValue(e,this.minValue,this.maxValue)),s.mul(1-this.rate,e));return s.mul(t,s.div(n,s.add(i(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}D.className="MinMaxNorm",s.serialization.registerClass(D);const _={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function F(t){return w(t)}function M(t,e={}){return v(t,s.serialization.SerializationMap.getMap().classNameMap,e,"constraint")}function z(t){if(null==t)return null;if("string"==typeof t){return M({className:t in _?_[t]:t,config:{}})}return t instanceof T?t:M(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const L=["channelsFirst","channelsLast"],B=["valid","same","causal"],P=["max","avg"],W=["sum","mul","concat","ave"],V=new Map;function U(t){C(L,"DataFormat",t)}function q(t){C(B,"PaddingMode",t)}function G(t){C(P,"PoolMode",t)}const H=[];function K(t,e){H.push(t);try{const t=e();return H.pop(),t}catch(t){throw H.pop(),t}}function X(t){if(!Z(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===H.length?"":H.join("/")+"/")+t}function Y(t){if(!Z(t))throw new Error("Not a valid tensor name: '"+t+"'");V.has(t)||V.set(t,0);const e=V.get(t);if(V.set(t,V.get(t)+1),e>0){const n=`${t}_${e}`;return V.set(n,1),n}return t}const J=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Z(t){return!!t.match(J)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Q(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function tt(t){return t=Array.isArray(t)?new Float32Array(t):t,Object(s.tensor1d)(t)}function et(t){return s.min(tt(t)).dataSync()[0]}function nt(t){return s.max(tt(t)).dataSync()[0]}function rt(t,e){if(e<t)throw new l(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function st(t,e){return t.asType(e)}function at(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function it(t,e,n){return Object(s.tidy)(()=>{switch(t.rank){case 1:return s.slice1d(t,e,n);case 2:return s.slice2d(t,[e,0],[n,t.shape[1]]);case 3:return s.slice3d(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return s.slice4d(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return s.slice(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return s.slice(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new l("sliceAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}})}function ot(t,e,n){return Object(s.tidy)(()=>{switch(t.rank){case 1:return s.slice1d(t,e,n);case 2:return s.slice2d(t,[0,e],[t.shape[0],n]);case 3:return s.slice3d(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return s.slice4d(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new l("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function ut(t,e,n,r){return Object(s.tidy)(()=>{switch(t.rank){case 1:return s.slice1d(t,e,n);case 2:switch(r){case 1:return it(t,e,n);case 2:return ot(t,e,n);default:throw new l("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return it(t,e,n);case 2:return s.slice3d(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return ot(t,e,n);default:throw new l("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return it(t,e,n);case 2:return s.slice4d(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return s.slice4d(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return ot(t,e,n);default:throw new l("The axis is not within the rank of the tensor "+r)}default:throw new l("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function lt(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),s.concat(t,e)}function ct(t,e){switch(t.rank){case 1:return s.concat1d([t,e]);case 2:return s.concat2d([t,e],0);case 3:return s.concat3d([t,e],0);case 4:return s.concat4d([t,e],0);default:throw new l("concatAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}function ht(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new l(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return s.tile(t,e)}function dt(t,e=0,n=1,r,a){return s.randomNormal(t,e,n,r,a)}function pt(t,e,n,r){if(t.rank<2||e.rank<2)throw new c(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new c(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = `+e.shape)}if(2===t.rank&&2===e.rank){const a=!1,i=!1;return s.fused.matMul({a:t,b:e,transposeA:a,transposeB:i,bias:r?gt(t.rank,r,"channelsLast"):null,activation:n})}{const a=t.shape.slice(),i=a.pop();t=t.reshape([-1,i]);const o=e.shape.slice(),u=o.pop(),l=o.pop(),c=[...o,u],h=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n);e=e.transpose(h).reshape([l,-1]);const d=[...a,...c],p=!1,f=!1;return s.fused.matMul({a:t,b:e,transposeA:p,transposeB:f,bias:r?gt(t.rank,r,"channelsLast"):null,activation:n}).reshape(d)}}function ft(t,e,n){return Object(s.tidy)(()=>(e=Array.isArray(e)?Object(s.tensor1d)(e,"int32"):e.toInt(),s.gather(t,e,n)))}function mt(t){return s.mul(t,t)}function gt(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new l("Unexpected bias dimensions: "+e.rank+"; expected it to be 1 or "+t);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new l("Unsupported input rank by biasAdd: "+e.rank)}function bt(t,e,n){return Object(s.tidy)(()=>(null==n&&(n="channelsLast"),U(n),t.add(gt(t.rank,e,n))))}function yt(t,e,n,r){return Object(s.tidy)(()=>s.dropout(t,e,n,r))}function xt(t,e,n=!1){return n?t():e()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const wt=["fanIn","fanOut","fanAvg"],vt=["normal","uniform","truncatedNormal"];class Ot extends s.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class St extends Ot{apply(t,e){return Object(s.zeros)(t,e)}}St.className="Zeros",s.serialization.registerClass(St);class kt extends Ot{apply(t,e){return Object(s.ones)(t,e)}}kt.className="Ones",s.serialization.registerClass(kt);class Ct extends Ot{constructor(t){if(super(),"object"!=typeof t)throw new l("Expected argument of type ConstantConfig but got "+t);if(void 0===t.value)throw new l("config must have value set but got "+t);this.value=t.value}apply(t,e){return Object(s.tidy)(()=>Object(s.mul)(Object(s.scalar)(this.value),Object(s.ones)(t,e)))}getConfig(){return{value:this.value}}}Ct.className="Constant",s.serialization.registerClass(Ct);class Nt extends Ot{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Object(s.randomUniform)(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Nt.className="RandomUniform",s.serialization.registerClass(Nt);class It extends Ot{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new c(`randomNormal does not support dType ${e}.`);return dt(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}It.className="RandomNormal",s.serialization.registerClass(It);class At extends Ot{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new c(`truncatedNormal does not support dType ${e}.`);return Object(s.truncatedNormal)(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}At.className="TruncatedNormal",s.serialization.registerClass(At);class Et extends Ot{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Object(s.tidy)(()=>{if(2!==t.length||t[0]!==t[1])throw new l("Identity matrix initializer can only be used for 2D square matrices.");return Object(s.mul)(this.gain,Object(s.eye)(t[0]))})}getConfig(){return{gain:this.gain}}}Et.className="Identity",s.serialization.registerClass(Et);class Tt extends Ot{constructor(t){if(super(),t.scale<0)throw new l("scale must be a positive float. Got: "+t.scale);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,C(wt,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){C(vt,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(U(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Q(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=Q(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=Q(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],a=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,a):i/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new c(`${this.getClassName()} does not support dType ${e}.`);return Object(s.truncatedNormal)(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return Object(s.randomUniform)(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Tt.className="VarianceScaling",s.serialization.registerClass(Tt);class $t extends Tt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Tt.className}}$t.className="GlorotUniform",s.serialization.registerClass($t);class Rt extends Tt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Tt.className}}Rt.className="GlorotNormal",s.serialization.registerClass(Rt);class jt extends Tt{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Tt.className}}jt.className="HeNormal",s.serialization.registerClass(jt);class Dt extends Tt{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Tt.className}}Dt.className="HeUniform",s.serialization.registerClass(Dt);class _t extends Tt{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Tt.className}}_t.className="LeCunNormal",s.serialization.registerClass(_t);class Ft extends Tt{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Tt.className}}Ft.className="LeCunNormal",s.serialization.registerClass(Ft);class Mt extends Ot{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new c("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Object(s.tidy)(()=>{if(2!==t.length)throw new c("The Orthogonal Initializer does not support non-2D shapes yet.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=dt(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=s.linalg.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Object(s.mul)(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Mt.className="Orthogonal",s.serialization.registerClass(Mt);const zt={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Lt(t,e={}){return v(t,s.serialization.SerializationMap.getMap().classNameMap,e,"initializer")}function Bt(t){return w(t)}function Pt(t){if("string"==typeof t){const e=t in zt?zt[t]:t;if("GlorotNormal"===e)return new Rt;if("GlorotUniform"===e)return new $t;if("HeNormal"===e)return new jt;if("HeUniform"===e)return new Dt;if("LeCunNormal"===e)return new _t;if("LeCunUniform"===e)return new Ft;{const t={};return t.className=e,t.config={},Lt(t)}}return t instanceof Ot?t:Lt(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let Wt=0;function Vt(){return Wt++}const Ut={};function qt(t=""){return t in Ut||(Ut[t]=0),Ut[t]+=1,t+Ut[t].toString()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gt(t){return Array.isArray(t)&&Array.isArray(t[0])}function Ht(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Kt(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new l("Expected Tensor length to be 1; got "+t.length);e=t[0]}else e=t;return e}function Xt(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new l("Expected exactly 1 Shape; got "+t.length)}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yt(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Jt{constructor(t,e="float32",n="Variable",r=!0,a=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Vt(),n=null==n?"Variable":n,this.originalName=X(n),this.name=Y(this.originalName),this.trainable_=r,this.constraint=a,this.val=s.variable(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Zt(t){return t.map(t=>t.read())}function Qt(t){t.forEach(t=>{t[0].write(t[1])})}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class te{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class ee{constructor(t,e,n,r,s,a,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Vt(),null!=a&&(this.originalName=X(a),this.name=Y(this.originalName)),this.rank=e.length}}let ne=0;class re{constructor(t,e){this.callArgs=e,this.id=ne++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let se=0;class ae extends s.serialization.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=se++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=b(t)+"_"+qt(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new u(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new l(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return m(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return m(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new o("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new o("Layer "+this.name+" is not connected, no input to return.");return m(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new o("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new o("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return m(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=g(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=g(this.inputSpec);if(t.length!==e.length)throw new l(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: `+t);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new l(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new l(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new l(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new l(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),a=s.axes[e],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new l(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],a=r.shape[t];if(null!=e&&null!=a&&e!==a)throw new l(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=g(t);let r=!0;for(const t of n)if(!(t instanceof ee)){r=!1;break}let s=!0;for(const t of n)if(t instanceof ee){s=!1;break}if(r===s)throw new l("Arguments to apply() must be all SymbolicTensors or all Tensors");return K(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of g(t))e.push(n.shape);this.build(m(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=g(r),a=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),a.push(t);if(r=m(a),null!=this.activityRegularizer)throw new c("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=g(t);const e=[];for(const n of t)e.push(n.shape);return m(e)}(t),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new ee(a,n,this,g(t),e,this.name,r)):new ee(a,r,this,g(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new c("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(t)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new o(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new o(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "outut shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new u(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Yt(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Zt(t?this.trainableWeights:this.weights)}setWeights(t){Object(s.tidy)(()=>{const e=this.weights;if(e.length!==t.length)throw new l(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=Zt(e);for(let a=0;a<r.length;++a){const i=r[a],o=e[a],u=t[a];if(!s.util.arraysEqual(i.shape,u.shape))throw new l(`Layer weight shape ${i.shape} not compatible with provided weight shape `+u.shape);n.push([o,u])}Qt(n)})}addWeight(t,e,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(t))throw new l(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Pt("zeros"));const o=r.apply(e,n),u=new Jt(o,n,t,a,i);return o.dispose(),null!=s&&this.addLoss(()=>s.apply(u.read())),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=g(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,n,r,s,a,i=null){const o=g(t);e=g(e),n=g(n),r=g(r),s=Ht(s),a=Ht(a);const u=[],l=[],c=[];for(const t of o)u.push(t.sourceLayer),l.push(t.nodeIndex),c.push(t.tensorIndex);new re({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class ie extends ae{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:qt("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new l("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new l("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new l("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new ee(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new re({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new l("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function oe(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new l("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;null==n&&(n="float32");return new ie({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function ue(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const a=t[s];if("number"!=typeof a){const t=a;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const a=await Promise.all(e);for(let e=0;e<a.length;++e)t[n[e]]=a[e][0];Object(s.dispose)(r)}}function le(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var ce;ie.className="InputLayer",s.serialization.registerClass(ie),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(ce||(ce={}));class he{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class de{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class pe extends he{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const a=Object(s.tidy)(()=>Object(s.add)(this.totals[t],Object(s.mul)(r,n)));this.totals[t]=a,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Object(s.tidy)(()=>{const n=Object(s.mul)(Object(s.div)(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Object(s.keep)(e[t])}))}}class fe extends he{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];t.push(i.data()),e.push(r),n.push(a)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t){this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}}class me extends he{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");s.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=s.util.now();return(...a)=>{const i=s.util.now();return i-r<e||(r=i,n=t(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await ue(n),r.push(this.yield(t,e,n))),r.push(Object(s.nextFrame)()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await ue(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await ue(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Object(s.nextFrame)()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await ue(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await ue(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Object(s.nextFrame)()):s.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await ue(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await ue(t),await this.trainEnd(t))}}function ge(t,e){if(null==t&&(t={}),t instanceof he)return[t];if(Array.isArray(t)&&t[0]instanceof he)return t;return g(t).map(t=>new me(t,e))}class be{constructor(){}static registerCallbackConstructor(t,e){s.util.assert(t>=0&&Number.isInteger(t),()=>"Verbosity level is expected to be an integer >= 0, but got "+t),be.checkForDuplicate(e),null==be.constructors[t]&&(be.constructors[t]=[]),be.constructors[t].push(e)}static checkForDuplicate(t){for(const e in be.constructors){be.constructors[+e].forEach(e=>{if(e===t)throw new l("Duplicate callback constructor.")})}}static clear(){be.constructors={}}static createCallbacks(t){const e=[];for(const n in be.constructors){const r=+n;t>=r&&e.push(...be.constructors[r])}return e.map(t=>new t)}}function ye(t,e,n,r,s,a,i,o,u){const l=new fe,c=[new pe,...be.createCallbacks(e)];null!=t&&c.push(...t),c.push(l);const h=new de(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:e,doValidation:o,metrics:u}),{callbackList:h,history:l}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xe(t,e={},n=!1){return v(t,s.serialization.SerializationMap.getMap().classNameMap,e,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function we(t,e){return Object(s.tidy)(()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=s.sum(mt(t),e,!0),r=s.fill(n.shape,i()),a=s.sqrt(s.maximum(n,r));return s.div(t,a)})}function ve(t,e){return Object(s.tidy)(()=>s.mean(mt(s.sub(e,t)),-1))}function Oe(t,e){return Object(s.tidy)(()=>s.mean(s.abs(s.sub(e,t)),-1))}function Se(t,e){return Object(s.tidy)(()=>{const n=s.sub(t,e),r=s.clipByValue(s.abs(t),i(),Number.MAX_VALUE),a=s.abs(s.div(n,r));return s.mul(100,s.mean(a,-1))})}function ke(t,e){return Object(s.tidy)(()=>{const n=s.clipByValue(e,i(),Number.MAX_VALUE),r=s.log(s.add(1,n)),a=s.clipByValue(t,i(),Number.MAX_VALUE),o=s.log(s.add(1,a));return s.mean(mt(s.sub(r,o)),-1)})}function Ce(t,e,n=!1){return Object(s.tidy)(()=>{if(n)e=s.softmax(e);else{const t=s.sum(e,e.shape.length-1,!0);e=s.div(e,t)}return e=s.clipByValue(e,i(),1-i()),s.neg(s.sum(s.mul(t.toFloat(),s.log(e)),e.shape.length-1))})}function Ne(t,e,n=!1){return Object(s.tidy)(()=>{const r=s.floor(function(t){const e=[Q(t.shape)];return t.reshape(e)}(t)).toInt(),a=(e=s.clipByValue(e,i(),1-i())).shape;return Ce(s.oneHot(r,a[a.length-1]).reshape(a),e,n)})}function Ie(t,e){return Object(s.tidy)(()=>{let n;return n=s.clipByValue(e,i(),1-i()),n=s.log(s.div(n,s.sub(1,n))),s.mean(function(t,e){if(!s.util.arraysEqual(t.shape,e.shape))throw new l(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Object(s.tidy)(()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())})}(t,n),-1)})}function Ae(t,e){return Object(s.tidy)(()=>{const n=s.clipByValue(t,i(),1),r=s.clipByValue(e,i(),1);return s.sum(s.mul(t,s.log(s.div(n,r))),-1)})}function Ee(t,e){return Object(s.tidy)(()=>{const n=we(t,-1),r=we(e,-1),a=s.mul(n,r);return s.neg(s.sum(a,-1))})}be.constructors={};const Te={meanSquaredError:ve,meanAbsoluteError:Oe,meanAbsolutePercentageError:Se,meanSquaredLogarithmicError:ke,squaredHinge:function(t,e){return Object(s.tidy)(()=>{const n=s.maximum(0,s.sub(1,s.mul(t,e)));return s.mean(mt(n),-1)})},hinge:function(t,e){return Object(s.tidy)(()=>{const n=s.maximum(0,s.sub(1,s.mul(t,e)));return s.mean(n,-1)})},categoricalHinge:function(t,e){return Object(s.tidy)(()=>{const n=s.sum(s.mul(t,e),-1),r=s.max(s.mul(s.sub(1,t),e),-1);return s.maximum(0,s.add(1,s.sub(r,n)))})},logcosh:function(t,e){return Object(s.tidy)(()=>{const n=Math.log(2),r=s.sub(e,t),a=s.sub(s.add(r,s.softplus(s.mul(-2,r))),n);return s.mean(a,-1)})},categoricalCrossentropy:Ce,sparseCategoricalCrossentropy:Ne,binaryCrossentropy:Ie,kullbackLeiblerDivergence:Ae,poisson:function(t,e){return Object(s.tidy)(()=>{const n=s.log(s.add(i(),e));return s.mean(s.sub(e,s.mul(t,n)),-1)})},cosineProximity:Ee};function $e(t){if("string"==typeof t){if(t in Te)return Te[t];let e="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new l(e)}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Re(t,e){return Object(s.tidy)(()=>{const n=s.mul(.5,s.onesLike(e)),r=st(s.greater(e,n),t.dtype);return s.mean(s.equal(t,r),-1)})}function je(t,e){return Object(s.tidy)(()=>st(s.equal(s.argMax(t,-1),s.argMax(e,-1)),"float32"))}function De(t,e){return Object(s.tidy)(()=>s.logicalAnd(t.equal(1),e.equal(1)).sum().cast("float32"))}function _e(t,e){return Object(s.tidy)(()=>{const n=De(t,e),r=function(t,e){return Object(s.tidy)(()=>s.logicalAnd(t.equal(0),e.equal(1)).sum().cast("float32"))}(t,e),a=n.add(r);return s.where(s.greater(a,0),n.div(a),0).cast("float32")})}function Fe(t,e){return Ie(t,e)}function Me(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),s.equal(t,e).asType("float32")}const ze=Ce,Le=Ne,Be={binaryAccuracy:Re,categoricalAccuracy:je,precision:_e,categoricalCrossentropy:ze,sparseCategoricalCrossentropy:Le,mse:ve,MSE:ve,mae:Oe,MAE:Oe,mape:Se,MAPE:Se,cosine:Ee};function Pe(t){if("string"==typeof t&&t in Be)return Be[t];if("string"!=typeof t&&null!=t)return t;throw new l("Unknown metric "+t)}function We(t){if(p(null!==t,"Unknown LossOrMetricFn "+t),"string"==typeof t)return t;{let e;for(const n of Object.keys(Te))if(Te[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Be))if(Be[n]===t){e=n;break}return void 0!==e?e:t.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ve(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!function t(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const n=Object.keys(e);for(const r of n){if("string"!=typeof r)return!1;if(!t(e[r]))return!1}return!0}if(Array.isArray(e)){for(const n of e)if(!t(n))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Ue(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),a=["Layer (type)","Output shape","Param #"];let i;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(t=>Math.floor(e*t))),!s){a.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}r("_".repeat(e)),qe(a,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)s?Ge(o[t],n,r):He(o[t],n,i,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=function(t){let e;e=null!=t.collectedTrainableWeights?Yt(t.collectedTrainableWeights):Yt(t.trainableWeights);return e}(t),l=Yt(t.nonTrainableWeights);r("Total params: "+(u+l)),r("Trainable params: "+u),r("Non-trainable params: "+l),r("_".repeat(e))}function qe(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function Ge(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}qe([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function He(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];a.push(`${n}[${r}][${s}]`)}const i=t.name,o=t.getClassName(),u=0===a.length?"":a[0];qe([`${i} (${o})`,s,t.countParams().toString(),u],e,r);for(let t=1;t<a.length;++t)qe(["","","",a[t]],e,r)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ke(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function Xe(t,e){if(null===t)return null;if("string"==typeof t)return y(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];Ke(e,s,r)?n.push(r):n.push(Xe(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=y(n);e[t]=Xe(r,t)}}return e}}class Ye{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Ye)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new l(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Object(s.cast)(e,t.dtype)}catch(n){throw new l(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof ee){if(null==this.id2Value[t.id])throw new l("Nonexistent key: "+t.name);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new l("Feed dict has no SymbolicTensor name: "+t);return this.id2Value[e]}}getMask(t){if(t instanceof ee){if(null==this.id2Value[t.id])throw new l("Nonexistent key: "+t.name);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new l("Feed dict has no SymbolicTensor name: "+t);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Object(s.dispose)(this.id2Mask)}}const Je={},Ze={};function Qe(t,e,n,r){const a=null!=n&&n.training,i=Array.isArray(t),o=i?t:[t],u=o.map(t=>t.name),l=[],c=e.names();for(const t of u)-1!==c.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const h=u.join(",")+"|"+e.names().join(",");let d,p;if(null==Je[h]){const t=function(t,e){s.util.assert(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const s=en(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of t){const{sorted:t,recipientMap:i}=en(a,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach(e=>r[t].add(e))}}return{sorted:n,recipientCounts:tn(r)}}(o,e);d=t.sorted,p=t.recipientCounts,Je[h]=d,Ze[h]=p}d=Je[h],p={},a||Object.assign(p,Ze[h]);const f=new Ye(e);for(let t=0;t<d.length;++t){if(null!=r){const t=Object(s.memory)().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const i=d[t],o=i.sourceLayer;if(o instanceof ie)continue;const c=[],h=[],m=[];let b=!1;for(const t of i.inputs){const n=f.getValue(t),r=f.getMask(t);c.push(n),h.push(r),null!=r&&(b=!0),a||(p[t.name]--,0!==p[t.name]||e.hasKey(t)||-1!==u.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||m.push(n))}b&&((n=n||{}).mask=h[0]);const y=g(o.apply(c,n));let x=null;o.supportsMasking&&(x=o.computeMask(c,h));const w=nn(i),v=Array.isArray(w)?w:[w];for(let t=0;t<v.length;++t){f.hasKey(v[t])||f.add(v[t],y[t],Array.isArray(x)?x[0]:x);const e=u.indexOf(v[t].name);-1!==e&&(l[e]=y[t])}a||Object(s.dispose)(m)}return f.disposeMasks(),i?l:l[0]}function tn(t){const e={};for(const n in t)e[n]=t[n].size;return e}function en(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const a=[],i=[];for(a.push(t);a.length>0;){const t=a[a.length-1];if(n.has(t.name)){a.pop();continue}const e=i[i.length-1]===a.length-1;if(0===t.inputs.length||e)a.pop(),r.push(t),n.add(t.name),e&&i.pop();else{i.push(a.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||a.push(e)}}return{sorted:r,recipientMap:s}}function nn(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class rn extends ae{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=qt(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],S(this.inputs).length!==this.inputs.length)throw new l("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(t=>t.name));S(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(t=>t.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;p(0===n,"input layer has >1 nodes"),p(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof ie))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},s={},a={},i=[],o=(t,e,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=t.sourceLayer,s=t.nodeIndex,l=t.tensorIndex);const c=r.inboundNodes[s];if(-1!==n.indexOf(c))throw new u(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(c))return;this.containerNodes.add(rn.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(c)&&n.push(c);const h=c.inboundLayers.length;for(let t=0;t<h;t++){const r=c.inputTensors[t],s=c.inboundLayers[t],a=c.nodeIndices[t],i=c.tensorIndices[t];o(r,e,n,s,a,i)}for(e.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);i.push(c)},c=[],h=[];for(const t of this.outputs)o(t,c,h);const d=i.slice().reverse();for(const t of d){n[t.id]=t,t.id in e||(e[t.id]=0);let a=e[t.id];const i=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];a=Math.max(a,i),r[t.outboundLayer.id]=a,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=a;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],i=t.nodeIndices[r],o=s.inboundNodes[i],u=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(a+1,u),n[o.id]=o}}const f={};for(const t in e){const r=e[t];r in f||(f[r]=[]),f[r].push(n[t])}const m={};for(const t in r){const e=r[t];e in m||(m[e]=[]),m[e].push(s[t])}let g=Object.keys(m).map(t=>parseInt(t,10)).sort(O);this.layers=[];for(const t of g){const e=m[t];e.sort((t,e)=>{const n=a[t.id],r=a[e.id];return n<r?-1:n>r?1:0});for(const t of e)t instanceof rn&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=m,g=Object.keys(f).map(t=>parseInt(t,10)).sort(O);const b=this.inputs.slice(),y=[];for(const t of g)for(const e of f[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===b.indexOf(n))throw new u("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${t.name}". The following previous layers were accessed without issue: `+y);for(const t of e.outputTensors)b.push(t);y.push(t.name)}}this.nodesByDepth=f;const x=this.layers.map(t=>t.name);for(const t of x){const e=x.filter(e=>e===t).length;if(1!==e)throw new u(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new re({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new l("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new l("Duplicate weight name: "+e.originalName);n[e.originalName]=e,r++}const s=[];for(const r in t){let a=r;if(null==n[r]){const t=r.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])s.push([n[a],t[r]]);else if(e)throw new l("Provided weight data has no target variable: "+r);delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new l(`${t.length} of ${r} weights are not set: `+t)}Qt(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.0.1",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=function t(e,n){if(null==e)return null;if("string"==typeof e)return b(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const r=[],s=e.length;for(let a=0;a<s;++a){const s=e[a];Ke(n,a,s)?r.push(s):r.push(t(s,n))}return r}{const n={};for(const r of Object.keys(e)){const s=e[r],a=b(r);n[a]="name"!==r&&"className"!==r||"string"!=typeof s?t(s,r):s}return n}}
/** @license See the LICENSE file. */(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Object(s.tidy)(()=>{t=g(t);const n=new Ye;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Qe(this.outputs,n,e)})}computeMask(t,e){return Object(s.tidy)(()=>{let n;return t=g(t),n=null==e?d(null,t.length):g(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=Ht(t);if(e.length!==this.inputLayers.length)throw new l(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(O);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],a=t.nodeIndices[e],i=t.tensorIndices[e],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=Ht(e.computeOutputShape(m(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){n[`${e.name}_${a}_${t}`]=s[t]}}}const s=[],a=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;a.push(s)}for(let t=0;t<a.length;t++){const e=a[t];p(e in n),s.push(n[e])}return m(s)}runInternalGraph(t,e){null==e&&(e=d(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=t[r],i=e[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(O);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=t.callArgs&&(l=t.callArgs),1===a.length){const[t,n]=a[0];null==l.mask&&(l.mask=n),o=g(e.call(t,l)),u=g(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map(t=>t[0]),i=a.map(t=>t[1]),null==l.mask&&(l.mask=i),o=g(e.call(r,l)),u=g(e.computeMask(r,i));if(e.activityRegularizer)throw new c("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=o[t],a=u[t];n[e.id]=[r,a]}}}}const s=[],a=[],i=[];for(const t of this.outputs){p(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];i.push(e.shape),s.push(e),a.push(r)}return[s,a,i]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof rn?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=rn.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new l(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new l("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new l("No such layer: "+t)}calculateLosses(){return Object(s.tidy)(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=rn.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),a=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=rn.nodeKey(t,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: `+r.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),i={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=e[rn.nodeKey(s,a)];null==u&&(u=0),t.push([s.name,u,o,i])}a.push(t)}}}const i={};i.name=t.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],a=rn.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,i,o])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],a=rn.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[t];s.push([n.name,i,o])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},a={};function i(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function o(t,e){const n=[];let r;for(const a of e){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(t,e);const c=s[o];if(c.inboundNodes.length<=u)return void i(t,e);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&t.apply(m(n),r)}function u(t){const n=t.name,a=xe(t,null!=e.customObjects?e.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a;t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new l("Corrupted configuration, expected array for nodeData: "+t);i(a,t)})}const c=e.name,h=e.layers;for(const t of h)u(t);for(;!k(a);)for(const t of h){const e=s[t.name];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)o(e,n)}}const d=[],f=[],g=e.inputLayers;for(const t of g){const e=t[0],n=t[1],r=t[2];p(e in s);const a=s[e].inboundNodes[n].outputTensors;d.push(a[r])}const b=e.outputLayers;for(const t of b){const e=t[0],n=t[1],r=t[2];p(e in s);const a=s[e].inboundNodes[n].outputTensors;f.push(a[r])}return new t({inputs:d,outputs:f,name:c})}get stateful(){if(this._stateful)throw new l("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Object(s.tidy)(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sn(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function an(t,e){return sn(t,e,"classWeight")}async function on(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Object(s.tidy)(()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await e.data());Object(s.dispose)(e);const a=[];return r.forEach(t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);a.push(n[t])}),Object(s.tensor1d)(a,"float32")}return null}function un(t,e){return Object(s.mul)(t,e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ln(t,e){let n,r;const a=e;n=a.xs,r=a.ys,s.util.assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+e);const i=cn("input",t.inputNames,n),o=cn("output",t.outputNames,r),u=i[0].shape[0];s.util.assert(i.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: `+JSON.stringify(t.inputNames)+")"),s.util.assert(o.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: `+JSON.stringify(t.outputNames)+")");for(let e=0;e<i.length;e++)s.util.assert(i[e].shape[0]===u,()=>`Batch size mismatch: input ${t.inputNames[e]} has ${i[e].shape[0]}; expected  ${u} based on input ${t.inputNames[0]}.`);for(let e=0;e<o.length;e++)s.util.assert(o[e].shape[0]===u,()=>`Batch size mismatch: output ${t.outputNames[e]} has ${o[e].shape[0]}; expected  ${u} based on input ${t.inputNames[0]}.`);return{xs:i,ys:o}}function cn(t,e,n){if(n instanceof s.Tensor)return[n];if(Array.isArray(n))return s.util.assert(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const r=[];for(const s of e){if(null==n[s])throw new l(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}async function hn(t,e,n){const r=null!=n.batchesPerEpoch;if(s.util.assert(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),s.util.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),s.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),s.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),s.util.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const a=null!=n.validationData;let i,o;if(a)if(dn(n.validationData))s.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const t=function(t){if(3===t.length)throw new c("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);i=t.xs,o=t.ys}const u=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let h;h=a?l.slice().concat(l.map(t=>"val_"+t)):l.slice();const d=ge(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:f,history:m}=ye(d,p,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,a,h);f.setModel(t),t.history=m,await f.onTrainBegin(),t.stopTraining_=!1;let b=null==n.initialEpoch?0:n.initialEpoch,y=await e.iterator();for(;b<n.epochs;){const c={};await f.onEpochBegin(b);let h=0,d=0;for(r||(y=await e.iterator());!r||h<n.batchesPerEpoch;){const e=await y.next();if(r&&e.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+h+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:a}=ln(t,e.value),i={};i.batch=d,i.size=r[0].shape[0],await f.onBatchBegin(d,i);const o=[];if(null!=n.classWeight){const e=an(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)o.push(await on(a[t],null,e[t]))}const c=r.concat(a).concat(o),p=u(c);s.dispose(c);for(let t=0;t<l.length;++t){const e=l[t],n=p[t];i[e]=n,s.keep(n)}await f.onBatchEnd(d,i),le(i),d++,h++}if(r?h>=n.batchesPerEpoch:e.done){if(a){let e;e=dn(n.validationData)?g(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):g(t.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)c["val_"+t.metricsNames[n]]=e[n]}break}if(t.stopTraining_)break}if(await f.onEpochEnd(b,c),b++,t.stopTraining_)break}return await f.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function dn(t){return"function"==typeof t.iterator}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function pn(t){s.util.assert(t>0&&Number.isInteger(t),()=>"batchSize is required to be a positive integer, but got "+t)}function fn(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>it(t,e,n-e)):it(t,e,n-e)}function mn(t,e){return s.tidy(()=>null==t?null:Array.isArray(t)?t.map(t=>mn(t,e)):ft(t,"int32"===e.dtype?e:e.toInt()))}function gn(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}async function bn(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,i,o,u,h,d,p;t.isTraining=!0;try{const f=null==r.batchSize?32:r.batchSize;pn(f);const m=!1,g=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,m,f);a=g[0],i=g[1],p=g[2];let b,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new c("validationData including sample weights is not supported yet."):new l("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");o=r.validationData[0],u=r.validationData[1];const e=!0,n=await t.standardizeUserData(o,u,null,null,e,f);h=n[0],d=n[1],b=h.concat(d)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const t=Math.floor(a[0].shape[0]*(1-r.validationSplit)),e=a[0].shape[0];h=fn(a,t,e),a=fn(a,0,t),d=fn(i,t,e),i=fn(i,0,t),b=h.concat(d)}else null!=r.validationSteps&&(y=!0);const x=a.concat(i).concat(p);t.checkTrainableWeightsConsistency();const w=t.makeTrainFunction(),v=t.getDedupedMetricsNames();let O,S;y?(t.makeTestFunction(),O=t.testFunction,S=v.slice().concat(v.map(t=>"val_"+t))):(O=null,b=[],S=v.slice());const k=ge(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,a,i,o,u,h,d,p,f,m,g,b){null==a&&(a=32),null==i&&(i=1),null==p&&(p=!0),null==m&&(m=0);let y=!1;if(null!=h&&null!=d&&(y=!0),null!=b&&(y=!0,null==g))throw new l("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const x=t.checkNumSamples(n,a,g,"steps_per_epoch");let w;null!=x&&(w=rt(0,x)),null==o&&(o=1);const{callbackList:v,history:O}=ye(u,o,i,m,x,g,a,y,f);v.setModel(t),t.history=O,await v.onTrainBegin(),t.stopTraining_=!1;for(let o=m;o<i;++o){await v.onEpochBegin(o);const i={};if(null!=g)throw new c("stepsPerEpoch mode is not implemented yet.");{if("batch"===p)throw new c("batch shuffling is not implemneted yet");p&&s.util.shuffle(w);const o=Object(s.tensor1d)(w),u=gn(x,a);for(let l=0;l<u.length;++l){const c={};if(await v.onBatchBegin(l,c),s.tidy(()=>{const p=u[l][0],f=u[l][1],m=it(o,p,f-p);c.batch=l,c.size=f-p;const g=mn(n,m),b=e(g);for(let t=0;t<r.length;++t){const e=r[t],n=b[t];c[e]=n,s.keep(n)}if(l===u.length-1&&y){const e=t.testLoop(h,d,a);for(let t=0;t<r.length;++t){const n=r[t],a=e[t];s.keep(a),i["val_"+n]=a}}}),await v.onBatchEnd(l,c),le(c),t.stopTraining_)break}o.dispose()}if(await v.onEpochEnd(o,i),t.stopTraining_)break}return await v.onTrainEnd(),await t.history.syncData(),t.history}(t,w,x,v,f,r.epochs,r.verbose,k,O,b,r.shuffle,S,r.initialEpoch,null,null)}finally{t.isTraining=!1,xn(a,e),xn(i,n),xn(h,o),xn(d,u),null!=p&&s.dispose(p)}}function yn(t){const e=[];t instanceof s.Tensor&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(at(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function xn(t,e){if(null==t)return;const n=[];if(e instanceof s.Tensor)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof s.Tensor)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach(t=>{t.isDisposed||t.dispose()})}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wn(t){return Array.isArray(t)}function vn(t){return!function(t){return t instanceof s.Tensor}(t)&&!wn(t)}function On(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(wn(t)&&t.length>0)e=!0;else if(vn(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new l(`Error when checking model ${s} expected no data, but got `+t)}return[]}if(null==t)return e.map(t=>null);let a;if(vn(t)){t=t,a=[];for(const n of e){if(null==t[n])throw new l(`No data provided for "${n}". Need data for each key in: `+e);a.push(t[n])}}else if(wn(t)){if((t=t).length!==e.length)throw new l(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): `+t);a=t}else{if(t=t,e.length>1)throw new l(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+t.shape);a=[t]}if(a=yn(a),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new l(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape `+i.shape);for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[t][a];if(null!=u&&u>=0&&o!==u)throw new l(`Error when checking ${s}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${i.shape}].`)}}return a}function Sn(t,e,n,r=!0,s=""){let a;if(Array.isArray(t)){if(t.length!==e.length)throw new l(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);a=t}else{if(e.length>1)throw new l(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(t.shape)+".");a=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new l(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape `+JSON.stringify(i.shape));for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[t][a];if(null!=u&&u!==o)throw new l(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class kn extends rn{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new l("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Ue(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>s.train.adagrad(.01),Adadelta:()=>s.train.adadelta(1,.95,i()),Adam:()=>s.train.adam(.001,.9,.999,i()),Adamax:()=>s.train.adamax(.002,.9,.999,i(),0),RMSProp:()=>s.train.rmsprop(.001,.9,0,i()),SGD:()=>s.train.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new l("Unknown Optimizer "+t)}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof s.Optimizer))throw new l("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new l(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map(t=>$e(t))}else{const n=$e(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new l(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push($e(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],K("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+t);n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),a=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};K("metric",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,r,s;for(const i of e){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let a;1===e[e.length-1]||this.lossFunctions[t]===Ie?-1!==["accuracy","acc"].indexOf(i)?r=Re:-1!==["crossentropy","ce"].indexOf(i)&&(r=Fe):this.lossFunctions[t]===Ne?-1!==["accuracy","acc"].indexOf(i)?r=Me:-1!==["crossentropy","ce"].indexOf(i)&&(r=Le):-1!==["accuracy","acc"].indexOf(i)?r=je:-1!==["crossentropy","ce"].indexOf(i)&&(r=ze),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const t=Pe(i);s=t,n=""+We(i)}let e;K(n,()=>{e=s}),a(t,n,e)}})(r[t])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;pn(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return m(this.testLoop(i,a,r,n.verbose,n.steps))}finally{xn(s[0],t),xn(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,a=t.testFunction;let i=[];if(n.verbose>0)throw new c("Verbose mode is not implemented yet.");s.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const o="function"==typeof e.next?e:await e.iterator();let u=0,l=0;for(;!r||l<n.batches;){const e=await o.next();if(i=s.tidy(()=>{if(e.value){const{xs:n,ys:r}=ln(t,e.value),o=n.concat(r),c=s.tidy(()=>a(o));if(s.dispose(o),0===l)for(let t=0;t<c.length;++t)i.push(Object(s.scalar)(0));const h=o[0].shape[0];for(let t=0;t<c.length;++t){const e=c[t],n=i[t];i[t]=s.tidy(()=>s.add(i[t],s.mul(h,e))),l>0&&s.dispose(n)}s.dispose(c),u+=h,++l}return i}),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<i.length;++t){const e=i[t];i[t]=s.div(i[t],u),s.dispose(e)}return m(i)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new l(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+e)}else{if(null==t)throw new l("Either the input data should have a defined shape, or "+r+" shoud be specified.");s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new l("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],a=this.retrieveSymbolicTensors(r),i=new Ye;if(t instanceof s.Tensor&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new l(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new l("No value is provided for the model's input "+e.name);i.add(e,n)}const o=Qe(a,i);return n?o:o[0]}retrieveSymbolicTensors(t){const e=d(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map(t=>t.name);for(let r=0;r<t.length;++r){const i=a.indexOf(t[r]);if(-1!==i&&(e[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new l("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return e}predictLoop(t,e=32,n=!1){return s.tidy(()=>{const r=this.checkNumSamples(t);if(n)throw new c("Verbose predictLoop() is not implemented yet.");const a=gn(r,e),i=this.outputs.map(t=>[]);for(let e=0;e<a.length;++e){s.tidy(()=>{const n=a[e][0],r=a[e][1],s=fn(t,n,r),i=[];if(Array.isArray(s))for(let t=0;t<s.length;++t)i.push({key:this.inputs[t],value:s[t]});else i.push({key:this.inputs[0],value:s});const o=new Ye(i);return Qe(this.outputs,o)}).forEach((t,e)=>i[e].push(t))}return m(i.map(t=>s.concat(t,0)))})}predict(t,e={}){const n=yn(t);Sn(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return pn(r),this.predictLoop(n,r)}finally{xn(n,t)}}predictOnBatch(t){Sn(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new u("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===Ne?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(t,e,n){const r=S(t.map(t=>t.shape[0]));r.sort();const a=S(e.map(t=>t.shape[0]));if(a.sort(),r.length>1)throw new l("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(t=>t.shape)));if(a.length>1)throw new l("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(t=>t.shape)));if(r.length>0&&a.length>0&&!s.util.arraysEqual(r,a))throw new l(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(t=On(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=On(e,this.feedOutputNames,a,!1,"target")),function(t,e,n){const r=[ve,Ie,Ce];for(let s=0;s<t.length;++s){const a=t[s],i=e[s],o=n[s];if(null!=i){if(i===Ce&&1===a.shape[a.shape.length-1])throw new l(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const t=a.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new l(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new l(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(t,e,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=an(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(await on(o[e],null,t[e]))}return[i,o,u]}testLoop(t,e,n,r=0,a){return s.tidy(()=>{const i=this.checkNumSamples(e,n,a,"steps"),o=[];if(r>0)throw new c("Verbose mode is not implemented yet.");if(null!=a)throw new c("steps mode in testLoop() is not implemented yet");{const r=gn(i,n),a=Object(s.tensor1d)(rt(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],u=r[n][1],l=it(a,i,u-i),c=mn(e,l),h=t(c);if(0===n)for(let t=0;t<h.length;++t)o.push(Object(s.scalar)(0));for(let t=0;t<h.length;++t){const e=h[t];o[t]=s.add(o[t],s.mul(u-i,e))}}for(let t=0;t<o.length;++t)o[t]=s.div(o[t],i)}return o})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;if(f(t,r)>1){s+="_"+f(t.slice(0,n),r)}e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map(t=>t.read());return[this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const o=new Ye(t),u=Qe(this.outputs,o,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],u[t]);null!=a[t]&&(n=un(n,a[t]));const i=s.mean(n);e.push(i),l=0===t?n:s.add(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],a=this.metricsTensors[t][1];n=s.mean(e(r[a],u[a]))}s.keep(n),i.push(n)}return l=s.mean(l),this.calculateLosses().forEach(t=>{l=s.add(l,t)}),l},!0,o)].concat(i)}}makeTestFunction(){this.testFunction=t=>s.tidy(()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:r[t]});const o=new Ye(i),u=Qe(this.outputs,o);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],i=s.mean(r(a[t],u[t]));n=0===t?i:s.add(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],i=s.mean(n(a[r],u[r]));e.push(i)}return e})}async fit(t,e,n={}){return bn(this,t,e,n)}async fitDataset(t,e){return hn(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],a=n[1],i=this.makeTrainFunction()(r.concat(a)),o=[];for(const t of i){const e=await t.data();o.push(e[0])}return s.dispose(i),m(o)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=s.memory().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-s.memory().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=b(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>b(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=b(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[b(We(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>b(We(t)));{const t={};for(const e in this.metrics)t[e]=b(We(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=xe(Xe(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=y(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>y(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=y(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map(t=>y(t));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=y(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=s.io.getSaveHandlers(t);if(0===e.length)throw new l(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new l(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new l("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await s.io.encodeWeights(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.0.1",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:a}=await s.io.encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...a),n.data=s.io.concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Ve(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){Ve(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}kn.className="Model",s.serialization.registerClass(kn);class Cn extends kn{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:qt("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new l("Negative dimension size caused by adding layer "+t.name+" with input shape ["+t.inboundNodes[0].inputTensors[0].shape+"]")}add(t){const e=t instanceof Cn||t instanceof kn;let n;if(e){if(n=t,1!==n.outputs.length)throw new l("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new l("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new l("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=oe({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new l(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new l("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=function t(e,n,r){if((null==n||null!=r&&r>0)&&(n=e.sourceLayer,r=e.nodeIndex),0===n.inboundNodes.length)return[e];{const e=n.inboundNodes[r];if(0===e.inboundLayers.length)return e.inputTensors;{const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=t(e.inputTensors[r],e.inboundLayers[r],e.nodeIndices[r]);for(const t of s)-1===n.indexOf(t)&&n.push(t)}return n}}}(this.outputs[0])}this.inboundNodes=[],new re({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:d(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Xt(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new kn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new u("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new u("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new u("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new u("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let a,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new l("Legacy serialization format not supported yet.");a=e}else s.util.assert(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=e.layers,delete e.layers,i=e;const o=new t(i);if(!(o instanceof Cn))throw new c("Sequential.fromConfig called on non-Sequential input: "+o);for(const t of a){const e=xe(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(t){if(null==this.model)throw new l("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new l("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Cn.className="Sequential",s.serialization.registerClass(Cn);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Nn extends s.serialization.Serializable{getConfig(){return{}}}class In extends Nn{apply(t,e=1){return function(t,e=1){if(1!==e)throw new c(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return s.elu(t)}(t,e)}}In.className="elu",s.serialization.registerClass(In);class An extends Nn{apply(t){return s.selu(t)}}An.className="selu",s.serialization.registerClass(An);class En extends Nn{apply(t){return s.relu(t)}}En.className="relu",s.serialization.registerClass(En);class Tn extends Nn{apply(t){return Object(s.tidy)(()=>s.minimum(6,s.relu(t)))}}Tn.className="relu6",s.serialization.registerClass(Tn);class $n extends Nn{apply(t){return t}}$n.className="linear",s.serialization.registerClass($n);class Rn extends Nn{apply(t){return s.sigmoid(t)}}Rn.className="sigmoid",s.serialization.registerClass(Rn);class jn extends Nn{apply(t){return function(t){return Object(s.tidy)(()=>{const e=s.add(.5,s.mul(.2,t));return s.clipByValue(e,0,1)})}(t)}}jn.className="hardSigmoid",s.serialization.registerClass(jn);class Dn extends Nn{apply(t){return s.softplus(t)}}Dn.className="softplus",s.serialization.registerClass(Dn);class _n extends Nn{apply(t){return function(t){return Object(s.tidy)(()=>s.div(t,s.abs(t).add(1)))}(t)}}_n.className="softsign",s.serialization.registerClass(_n);class Fn extends Nn{apply(t){return s.tanh(t)}}Fn.className="tanh",s.serialization.registerClass(Fn);class Mn extends Nn{apply(t,e=-1){return s.softmax(t,e)}}Mn.className="softmax",s.serialization.registerClass(Mn);class zn extends Nn{apply(t,e=-1){return s.logSoftmax(t,e)}}function Ln(t){return t.getClassName()}function Bn(t,e={}){return v(t,s.serialization.SerializationMap.getMap().classNameMap,e,"activation")}function Pn(t){if(null==t){const t={className:"linear",config:{}};return Bn(t)}if("string"==typeof t){const e={};return e.className=t,e.config={},Bn(e)}return t instanceof Nn?t:Bn(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Wn(t){if(null!=t&&"object"!=typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+t)}zn.className="logSoftmax",s.serialization.registerClass(zn);class Vn extends s.serialization.Serializable{}class Un extends Vn{constructor(t){super(),Wn(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Object(s.tidy)(()=>{let e=Object(s.zeros)([1]);return this.hasL1&&(e=Object(s.add)(e,Object(s.sum)(s.mul(this.l1,Object(s.abs)(t))))),this.hasL2&&(e=Object(s.add)(e,Object(s.sum)(s.mul(this.l2,mt(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Un.className="L1L2",s.serialization.registerClass(Un);const qn={l1l2:"L1L2"};function Gn(t){return w(t)}function Hn(t,e={}){return v(t,s.serialization.SerializationMap.getMap().classNameMap,e,"regularizer")}function Kn(t){if(null==t)return null;if("string"==typeof t){return Hn({className:t in qn?qn[t]:t,config:{}})}return t instanceof Vn?t:Hn(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Xn extends ae{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Kt(t);let n=Object(s.relu)(t);return null!=this.maxValue&&(n=Object(s.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Xn.className="ReLU",s.serialization.registerClass(Xn);class Yn extends ae{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Kt(t);return Object(s.leakyRelu)(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Yn.className="LeakyReLU",s.serialization.registerClass(Yn);class Jn extends ae{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Pt(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Kn(t.alphaRegularizer),this.alphaConstraint=z(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new l("Expected sharedAxes to be a number or an array of numbers, but got "+t.sharedAxes);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Xt(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new te({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Kt(t),Object(s.prelu)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Bt(this.alphaInitializer),alphaRegularizer:Gn(this.alphaRegularizer),alphaConstraint:F(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Jn.className="PReLU",s.serialization.registerClass(Jn);class Zn extends ae{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new c(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Kt(t);return Object(s.elu)(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Zn.className="ELU",s.serialization.registerClass(Zn);class Qn extends ae{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Kt(t);return n.mul(st(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Qn.className="ThresholdedReLU",s.serialization.registerClass(Qn);class tr extends ae{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Mn).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Kt(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function er(t,e,n){if("number"==typeof t)return d(t,e);if(t.length!==e)throw new l(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const a=t[s];if((r=a)!==parseInt(r.toString(),10))throw new l(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number `+a)}return t;var r}function nr(t,e,n,r,s=1){if(null==t)return t;let a;return a="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((a+r-1)/r)}function rr(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+nt([n-e,0]);else{if("same"!==r)throw new l(`Unsupport padding mode: ${r}.`);t*=e}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sr(t,e){return Object(s.tidy)(()=>(U(e),"channelsFirst"===e?s.transpose(t,[0,2,3,1]):t))}function ar(t,e){return Object(s.tidy)(()=>(U(e),"channelsFirst"===e?s.transpose(t,[0,2,3,4,1]):t))}function ir(t,e,n,r=1,a="valid",i,o=1){return Object(s.tidy)(()=>{if(null==i&&(i="channelsLast"),U(i),3!==t.shape.length)throw new l("The input of a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead.");if(3!==e.shape.length)throw new l("The kernel for a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new l("The bias for a conv1dWithBias operation should be 1, but is "+e.shape.length+" instead");if("channelsFirst"===i&&(t=s.transpose(t,[0,2,1])),"causal"===a)throw new c("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let u=s.conv1d(t,e,r,"same"===a?"same":"valid","NWC",o);return null!=n&&(u=bt(u,n)),u})}function or(t,e,n,r=[1,1],a="valid",i,o,u=null){return Object(s.tidy)(()=>{if(null==i&&(i="channelsLast"),U(i),3!==t.rank&&4!==t.rank)throw new l(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new l(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let h=sr(t,i);if("causal"===a)throw new c("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return h=s.fused.conv2d({x:h,filter:e,strides:r,pad:"same"===a?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:u}),"channelsFirst"===i&&(h=s.transpose(h,[0,3,1,2])),h})}function ur(t,e,n,r=[1,1,1],a="valid",i,o){return Object(s.tidy)(()=>{if(null==i&&(i="channelsLast"),U(i),4!==t.rank&&5!==t.rank)throw new l("conv3dWithBias expects input to be of rank 4 or 5, but received "+t.rank+".");if(4!==e.rank&&5!==e.rank)throw new l("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+t.rank+".");let u=ar(t,i);if("causal"===a)throw new c("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return u=s.conv3d(u,e,r,"same"===a?"same":"valid","NDHWC",o),null!=n&&(u=bt(u,n)),"channelsFirst"===i&&(u=s.transpose(u,[0,4,1,2,3])),u})}tr.className="Softmax",s.serialization.registerClass(tr);class lr extends ae{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",lr.verifyArgs(e),this.rank=t,I(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new c(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=er(e.kernelSize,t,"kernelSize"),this.strides=er(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,q(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,U(this.dataFormat),this.activation=Pn(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=z(e.biasConstraint),this.biasRegularizer=Kn(e.biasRegularizer),this.activityRegularizer=Kn(e.activityRegularizer),this.dilationRate=er(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new l("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new l("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new l("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(t){if(p("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!N(t.kernelSize,"number",1,3))throw new l(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ln(this.activation),useBias:this.useBias,biasInitializer:Bt(this.biasInitializer),biasRegularizer:Gn(this.biasRegularizer),activityRegularizer:Gn(this.activityRegularizer),biasConstraint:F(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class cr extends lr{constructor(t,e){super(t,e),this.kernel=null,cr.verifyArgs(e),this.filters=e.filters,I(this.filters,"filters"),this.kernelInitializer=Pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=z(e.kernelConstraint),this.kernelRegularizer=Kn(e.kernelRegularizer)}build(t){t=Xt(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new l("The channel dimension of the input should be defined. Found "+t[e]);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Object(s.tidy)(()=>{let e;t=Kt(t);const n=null==this.bias?null:this.bias.read(),r=A(this.activation.getClassName());if(null!=r&&2===this.rank)e=or(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=ir(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=or(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new c("convolutions greater than 3D are not implemented yet.");e=ur(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=Xt(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=nr(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Bt(this.kernelInitializer),kernelRegularizer:Gn(this.kernelRegularizer),kernelConstraint:F(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new l("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(t.filters))}}class hr extends cr{constructor(t){super(2,t),hr.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!N(t.kernelSize,"number",1,2))throw new l(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}hr.className="Conv2D",s.serialization.registerClass(hr);class dr extends cr{constructor(t){super(3,t),dr.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new l(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}dr.className="Conv3D",s.serialization.registerClass(dr);class pr extends hr{constructor(t){if(super(t),this.inputSpec=[new te({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new l("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(t){if(4!==(t=Xt(t)).length)throw new l("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new l("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new te({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return s.tidy(()=>{let e=Kt(t);if(4!==e.shape.length)throw new l("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);const n=e.shape,r=n[0];let a,i;"channelsFirst"===this.dataFormat?(a=2,i=3):(a=1,i=2);const o=n[a],u=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=[r,rr(o,d,c,this.padding),rr(u,p,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=s.transpose(e,[0,2,3,1]));let m=s.conv2dTranspose(e,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=s.transpose(m,[0,3,1,2])),null!=this.bias&&(m=bt(m,this.bias.read(),this.dataFormat)),null!=this.activation&&(m=this.activation.apply(m)),m})}computeOutputShape(t){const e=(t=Xt(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=rr(e[r],o,a,this.padding),e[s]=rr(e[s],u,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}pr.className="Conv2DTranspose",s.serialization.registerClass(pr);class fr extends cr{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new l("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new l("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new l(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(e.padding));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Pt(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Kn(e.depthwiseRegularizer),this.depthwiseConstraint=z(e.depthwiseConstraint),this.pointwiseInitializer=Pt(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Kn(e.pointwiseRegularizer),this.pointwiseConstraint=z(e.pointwiseConstraint)}build(t){if((t=Xt(t)).length<this.rank+2)throw new l(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new l("The channel dimension of the inputs should be defined, but found "+JSON.stringify(t[e]));const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new te({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Object(s.tidy)(()=>{let e;if(t=Kt(t),1===this.rank)throw new c("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=s.transpose(t,[0,2,3,1])),e=s.separableConv2d(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=bt(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=s.transpose(e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Bt(this.depthwiseInitializer),t.pointwiseInitializer=Bt(this.pointwiseInitializer),t.depthwiseRegularizer=Gn(this.depthwiseRegularizer),t.pointwiseRegularizer=Gn(this.pointwiseRegularizer),t.depthwiseConstraint=F(this.depthwiseConstraint),t.pointwiseConstraint=F(this.pointwiseConstraint),t}}fr.className="SeparableConv";class mr extends fr{constructor(t){super(2,t)}}mr.className="SeparableConv2D",s.serialization.registerClass(mr);class gr extends cr{constructor(t){super(1,t),gr.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!N(t.kernelSize,"number",1,1))throw new l(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}gr.className="Conv1D",s.serialization.registerClass(gr);class br extends ae{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Object(s.tidy)(()=>{if(t=Kt(t),"channelsLast"===this.dataFormat){const e=ut(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ut(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=ut(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ut(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}br.className="Cropping2D",s.serialization.registerClass(br);class yr extends ae{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return s.tidy(()=>{let e=Kt(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=s.transpose(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],a=e.resizeNearestNeighbor([t,r]);return s.transpose(a,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return e.resizeNearestNeighbor([t,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}yr.className="UpSampling2D",s.serialization.registerClass(yr);class xr extends lr{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Pt(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=z(t.depthwiseConstraint),this.depthwiseRegularizer=Kn(t.depthwiseRegularizer)}build(t){if((t=Xt(t)).length<4)throw new l(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new l(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(s.tidy)(()=>{let e=
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(t,e,n=[1,1],r="valid",a,i){return Object(s.tidy)(()=>{null==a&&(a="channelsLast"),U(a);let o=sr(t,a);if(4!==t.rank)throw new l("Input for depthwiseConv2d is required to be 4-D, but is instead "+t.rank+"-D");if(4!==e.rank)throw new l("depthwiseKernel is required to be 4-D, but is instead "+e.rank+"-D");return o=s.depthwiseConv2d(o,e,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===a&&(o=s.transpose(o,[0,3,1,2])),o})}(t=Kt(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=bt(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=Xt(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=nr(e,this.kernelSize[0],this.padding,this.strides[0]),a=nr(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,a]:[t[0],s,a,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Bt(this.depthwiseInitializer),t.depthwiseRegularizer=Gn(this.depthwiseRegularizer),t.depthwiseConstraint=F(this.depthwiseRegularizer),t}}xr.className="DepthwiseConv2D",s.serialization.registerClass(xr);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class wr extends ae{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return Object(s.tidy)(()=>{this.invokeCallHook(t,e);const n=Kt(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return xt(()=>yt(n,this.rate,r,this.seed),()=>n,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}wr.className="Dropout",s.serialization.registerClass(wr);class vr extends wr{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}vr.className="SpatialDropout1D",s.serialization.registerClass(vr);class Or extends ae{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,I(this.units,"units"),this.activation=Pn(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Pt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Pt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=z(t.kernelConstraint),this.biasConstraint=z(t.biasConstraint),this.kernelRegularizer=Kn(t.kernelRegularizer),this.biasRegularizer=Kn(t.biasRegularizer),this.activityRegularizer=Kn(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Xt(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Xt(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Object(s.tidy)(()=>{this.invokeCallHook(t,e);const n=Kt(t),r=A(this.activation.getClassName());let s;return null!=r?s=pt(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=pt(n,this.kernel.read()),null!=this.bias&&(s=bt(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const t={units:this.units,activation:Ln(this.activation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:Gn(this.kernelRegularizer),biasRegularizer:Gn(this.biasRegularizer),activityRegularizer:Gn(this.activityRegularizer),kernelConstraint:F(this.kernelConstraint),biasConstraint:F(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Or.className="Dense",s.serialization.registerClass(Or);class Sr extends ae{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Xt(t);for(const e of t.slice(1))if(null==e)throw new l(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Q(t,1)]}call(t,e){return Object(s.tidy)(()=>{this.invokeCallHook(t,e);let n=Kt(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new l(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],Q(t.shape,1)];return t.reshape(e)}(n)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Sr.className="Flatten",s.serialization.registerClass(Sr);class kr extends ae{constructor(t){super(t),this.supportsMasking=!0,this.activation=Pn(t.activation)}call(t,e){return Object(s.tidy)(()=>{this.invokeCallHook(t,e);const n=Kt(t);return this.activation.apply(n)})}getConfig(){const t={activation:Ln(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}kr.className="Activation",s.serialization.registerClass(kr);class Cr extends ae{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Object(s.tidy)(()=>{return t=Kt(t),e=t,n=this.n,Object(s.tidy)(()=>{if(2!==e.shape.length)throw new l(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return ht(at(e,1),[1,n,1])});var e,n})}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Cr.className="RepeatVector",s.serialization.registerClass(Cr);class Nr extends ae{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,a=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==a)throw new l("Can only specifiy one unknown dimension.");a=t}else s*=e}const i=Q(t);if(null!==a){if(0===s||i%s!=0)throw new l(n);r[a]=i/s}else if(i!==s)throw new l(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Object(s.tidy)(()=>{this.invokeCallHook(t,e);const n=Kt(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Nr.className="Reshape",s.serialization.registerClass(Nr);class Ir extends ae{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+t.dims+" instead.");const e=rt(1,t.dims.length+1);if(!s.util.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new te({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Xt(t)).slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return Object(s.transpose)(Kt(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Ir.className="Permute",s.serialization.registerClass(Ir);class Ar extends ae{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Kt(t);return Object(s.any)(Object(s.notEqual)(n,this.maskValue),-1)}call(t,e){return Object(s.tidy)(()=>{this.invokeCallHook(t,e);const n=Kt(t),r=Object(s.any)(Object(s.notEqual)(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}}Ar.className="Masking",s.serialization.registerClass(Ar);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Er extends ae{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(g(t.inputLength))}this.inputDim=t.inputDim,I(this.inputDim,"inputDim"),this.outputDim=t.outputDim,I(this.outputDim,"outputDim"),this.embeddingsInitializer=Pt(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Kn(t.embeddingsRegularizer),this.activityRegularizer=Kn(t.activityRegularizer),this.embeddingsConstraint=z(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Object(s.tidy)(()=>this.maskZero?(t=Kt(t),Object(s.notEqual)(t,Object(s.zerosLike)(t))):null)}computeOutputShape(t){if(t=Xt(t),null==this.inputLength)return[...t,this.outputDim];const e=g(this.inputLength);if(e.length!==t.length-1)throw new l(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],a=t[r+1];if(null!=s&&null!=a&&s!==a)throw new l(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);null==s&&(e[n]=a),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Object(s.tidy)(()=>{this.invokeCallHook(t,e);let n=Kt(t);"int32"!==n.dtype&&(n=st(n,"int32"));return ft(this.embeddings.read(),n.as1D()).reshape(Xt(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Bt(this.embeddingsInitializer),embeddingsRegularizer:Gn(this.embeddingsRegularizer),activityRegularizer:Gn(this.activityRegularizer),embeddingsConstraint:F(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Er.className="Embedding",s.serialization.registerClass(Er);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Tr extends ae{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new c}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],a=e[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new l("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Xt(t)]),(t=t).length<2)throw new l(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=S(e),e.length>1)throw new l(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===S(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Object(s.tidy)(()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=nt(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=at(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,a=t[0],i=t.slice(1).concat([a]);let o=r.reshape([a].concat(Q(t.slice(1))));o=s.transpose(o,[1,0]),o=o.reshape(i),e.push(o),n=!0}else if(t>1){const a=rt(1,t).concat([0]);e.push(s.transpose(r,a)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const a=r.rank;if(n)if(null==a){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=s.transpose(r.reshape([-1,e]),[1,0]).reshape(n)}else if(a>1){const t=[a-1].concat(rt(0,a-1));r=s.transpose(r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=S(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return s.tidy(()=>{if(null==e)return null;if(!Array.isArray(e))throw new l("`mask` should be an Array");if(!Array.isArray(t))throw new l("`inputs` should be an Array");if(e.length!==t.length)throw new l(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(t=>null==t))return null;let n=(e=e.map(t=>null==t?t:s.expandDims(t,0)))[0];for(let t=1;t<e.length-1;++t)n=s.logicalAnd(n,e[t]);return n})}}class $r extends Tr{constructor(t){super(t)}mergeFunction(t){return Object(s.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=s.add(e,t[n]);return e})}}$r.className="Add",s.serialization.registerClass($r);class Rr extends Tr{constructor(t){super(t)}mergeFunction(t){return Object(s.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=s.mul(e,t[n]);return e})}}Rr.className="Multiply",s.serialization.registerClass(Rr);class jr extends Tr{constructor(t){super(t)}mergeFunction(t){return Object(s.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=s.add(e,t[n]);return s.mul(1/t.length,e)})}}jr.className="Average",s.serialization.registerClass(jr);class Dr extends Tr{constructor(t){super(t)}mergeFunction(t){return Object(s.tidy)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=s.maximum(e,t[n]);return e})}}Dr.className="Maximum",s.serialization.registerClass(Dr);class _r extends Tr{constructor(t){super(t)}mergeFunction(t){return Object(s.tidy)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=s.minimum(e,t[n]);return e})}}_r.className="Minimum",s.serialization.registerClass(_r);class Fr extends Tr{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new l("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let a=!1;for(const t of n)if(s.util.arraysEqual(t,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new l("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Object(s.tidy)(()=>lt(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new l("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new l("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new l("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new l(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return s.tidy(()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(s.onesLike(t[n]).asType("bool")):e[n].rank<t[n].rank?r.push(s.expandDims(e[n],-1)):r.push(e[n]);const a=s.concat(r,this.axis);return s.all(a,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Mr(t,e){for(;t<0;)t+=e;return t}Fr.className="Concatenate",s.serialization.registerClass(Fr);class zr extends Tr{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){s.util.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new c("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new l(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new l(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>Mr(e,t[n].shape.length)):[Mr(this.axes,n.shape.length),Mr(this.axes,r.shape.length)],this.normalize&&(n=we(n,e[0]),r=we(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new c("batchDot is not implemented for tensors of 4D or higher rank yet");if(s.util.assert(t.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+t.shape.length),s.util.assert(t.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+e.shape.length),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new c("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,a=e.shape.length;null==n&&(n=[r-1,a-2]);const i=n;return s.tidy(()=>{let n,s;if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)s=i[0]===i[1]?t.mul(e).sum(i[0]):t.transpose([1,0]).mul(e).sum(i[1]);else{const n=i[0]!==t.shape.length-1,r=i[1]===e.shape.length-1;s=t.matMul(e,n,r)}if(n>0){let t;t=r>a?r+a-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);s=s.squeeze(e)}return 1===s.shape.length&&(s=s.expandDims(1)),s})}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Mr(this.axes,t.length),Mr(this.axes,e.length)],n}computeOutputShape(t){s.util.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new c("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=e.concat(n);return 1===a.length&&a.push(1),a}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}zr.className="Dot",s.serialization.registerClass(zr);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Lr extends ae{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Object(s.tidy)(()=>{this.invokeCallHook(t,e);const n=Kt(t);return xt(()=>dt(n.shape,0,this.stddev).add(n),()=>n,e.training||!1)})}}Lr.className="GaussianNoise",s.serialization.registerClass(Lr);class Br extends ae{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(s.tidy)(()=>{this.invokeCallHook(t,e);const n=Kt(t);if(this.rate>0&&this.rate<1){return xt(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(dt(n.shape,1,t))},()=>n,e.training||!1)}return n})}}Br.className="GaussianDropout",s.serialization.registerClass(Br);class Pr extends ae{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Kt(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(s.tidy)(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return xt(()=>{const e=Kt(t),r=-1.7580993408473766;let a=Object(s.greaterEqual)(Object(s.randomUniform)(n),this.rate);a=st(a,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,o=-i*r*this.rate;return e.mul(a).add(a.add(-1).mul(r)).mul(i).add(o)},()=>Kt(t),e.training||!1)}return t})}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Wr(t,e,n,r,a,i=.001){let o;if(2===t.rank)o=s.batchNorm2d(t,e,n,r,a,i);else if(3===t.rank)o=s.batchNorm3d(t,e,n,r,a,i);else{if(4!==t.rank)throw new c(`batchNormalization is not implemented for array of rank ${t.rank} yet`);o=s.batchNorm4d(t,e,n,r,a,i)}return o}function Vr(t,e,n,r,a=.001){return s.util.arraysEqual(r.slice().sort(),rt(0,t.rank-1))?function(t,e,n,r,a=.001){return Object(s.tidy)(()=>{const i=s.moments(t,r),o=i.mean,u=i.variance;return[Wr(t,o,u,n,e,a),o,u]})}(t,e,n,r,a):function(t,e,n,r,a=.001){return Object(s.tidy)(()=>{const i=s.moments(t,r),o=i.mean,u=i.variance,l=[];for(const e of rt(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const c=o.reshape(l),h=u.reshape(l),d=null==e?null:e.reshape(l),p=null==n?null:n.reshape(l);return[Wr(t,c,h,p,d,a),o,u]})}(t,e,n,r,a)}Pr.className="AlphaDropout",s.serialization.registerClass(Pr);class Ur extends ae{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Pt(t.betaInitializer||"zeros"),this.gammaInitializer=Pt(t.gammaInitializer||"ones"),this.movingMeanInitializer=Pt(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Pt(t.movingVarianceInitializer||"ones"),this.betaConstraint=z(t.betaConstraint),this.gammaConstraint=z(t.gammaConstraint),this.betaRegularizer=Kn(t.betaRegularizer),this.gammaRegularizer=Kn(t.gammaRegularizer)}build(t){t=Xt(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new l(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(t)+".");this.inputSpec=[new te({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Object(s.tidy)(()=>{const n=null!=e.training&&e.training,r=Kt(t),a=r.shape,i=a.length,o=rt(0,i),u=this.axis>=0?this.axis:this.axis+i;o.splice(u,1);const l=d(1,i);l[u]=a[u];const c=o.slice();c.sort();const h=!s.util.arraysEqual(c,rt(0,i).slice(0,i-1));if(!n)return(()=>{if(h){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return Wr(r,t,e,n,s,this.epsilon)}return Wr(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,f,m]=Vr(r,this.gamma.read(),this.beta.read(),o,this.epsilon),g=(t,e,n)=>{s.tidy(()=>{const r=1-n,s=t.read(),a=s.sub(e).mul(r);t.write(s.sub(a))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Bt(this.betaInitializer),gammaInitializer:Bt(this.gammaInitializer),movingMeanInitializer:Bt(this.movingMeanInitializer),movingVarianceInitializer:Bt(this.movingVarianceInitializer),betaRegularizer:Gn(this.betaRegularizer),gammaRegularizer:Gn(this.gammaRegularizer),betaConstraint:F(this.betaConstraint),gammaConstraint:F(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Ur.className="BatchNormalization",s.serialization.registerClass(Ur);class qr extends ae{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Pt(t.betaInitializer||"zeros"),this.gammaInitializer=Pt(t.gammaInitializer||"ones"),this.betaRegularizer=Kn(t.betaRegularizer),this.gammaRegularizer=Kn(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Xt(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error("Invalid axis: "+t);if(this.axis.length!==S(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(e=>t[e]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=Kt(t),r=n.shape,a=r.length;return Object(s.tidy)(()=>{let{mean:t,variance:e}=Object(s.moments)(n,this.axis,!0);const i=d(1,a);for(const t of this.axis)i[t]=r[t];const o=t=>null!=t&&t.shape.length!==a&&this.axis!==[a-1]?t.reshape(i):t;let u=o(this.gamma.read()),l=o(this.beta.read());const c=[],h=[];for(let t=0;t<a;++t)-1!==this.axis.indexOf(t)?(c.push(r[t]),h.push(1)):(c.push(1),h.push(r[t]));return t=t.tile(c),e=e.tile(c),u=u.tile(h),l=l.tile(h),Wr(n,t,e,l,u,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Bt(this.betaInitializer),gammaInitializer:Bt(this.gammaInitializer),betaRegularizer:Gn(this.betaRegularizer),gammaRegularizer:Gn(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}qr.className="LayerNormalization",s.serialization.registerClass(qr);class Gr extends ae{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new l(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new l(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new l(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new te({ndim:4})]}computeOutputShape(t){let e,n;return t=Xt(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Object(s.tidy)(()=>{return e=Kt(t),n=this.padding,r=this.dataFormat,Object(s.tidy)(()=>{if(4!==e.rank)throw new l("temporalPadding expects input tensor to be 4-D, but received a "+e.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new l("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new l(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],s.pad(e,t)});var e,n,r})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Hr(t,e,n,r,a,i){return Object(s.tidy)(()=>{let o;U(a),G(i),q(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),t=sr(t,a);const u="same"===r?"same":"valid";return o="max"===i?s.maxPool(t,e,n,u):s.avgPool(t,e,n,u),"channelsFirst"===a&&(o=s.transpose(o,[0,3,1,2])),o})}function Kr(t,e,n,r,a,i){return Object(s.tidy)(()=>{let o;U(a),G(i),q(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),t=ar(t,a);const u="same"===r?"same":"valid";return o="max"===i?s.maxPool3d(t,e,n,u):s.avgPool3d(t,e,n,u),"channelsFirst"===a&&(o=s.transpose(o,[0,4,1,2,3])),o})}Gr.className="ZeroPadding2D",s.serialization.registerClass(Gr);class Xr extends ae{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new l("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.poolSize));this.poolSize=t.poolSize}if(I(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new l("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.strides));this.strides=t.strides}I(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,q(this.padding),this.inputSpec=[new te({ndim:3})]}computeOutputShape(t){const e=nr((t=Xt(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Object(s.tidy)(()=>{this.invokeCallHook(t,e),t=at(Kt(t),2);const n=this.poolingFunction(Kt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return s.squeeze(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Yr extends Xr{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return U(s),q(r),Hr(t,e,n,r,s,"max")}}Yr.className="MaxPooling1D",s.serialization.registerClass(Yr);class Jr extends Xr{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return U(s),q(r),Hr(t,e,n,r,s,"avg")}}Jr.className="AveragePooling1D",s.serialization.registerClass(Jr);class Zr extends ae{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new l("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides];I(this.poolSize,"poolSize"),I(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,U(this.dataFormat),q(this.padding),this.inputSpec=[new te({ndim:4})]}computeOutputShape(t){t=Xt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=nr(e,this.poolSize[0],this.padding,this.strides[0]),n=nr(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Object(s.tidy)(()=>(this.invokeCallHook(t,e),this.poolingFunction(Kt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Qr extends Zr{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return U(s),q(r),Hr(t,e,n,r,s,"max")}}Qr.className="MaxPooling2D",s.serialization.registerClass(Qr);class ts extends Zr{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return U(s),q(r),Hr(t,e,n,r,s,"avg")}}ts.className="AveragePooling2D",s.serialization.registerClass(ts);class es extends ae{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new l("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];I(this.poolSize,"poolSize"),I(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,U(this.dataFormat),q(this.padding),this.inputSpec=[new te({ndim:5})]}computeOutputShape(t){t=Xt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=nr(e,this.poolSize[0],this.padding,this.strides[0]),n=nr(n,this.poolSize[1],this.padding,this.strides[1]),r=nr(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Object(s.tidy)(()=>(this.invokeCallHook(t,e),this.poolingFunction(Kt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ns extends es{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return U(s),q(r),Kr(t,e,n,r,s,"max")}}ns.className="MaxPooling3D",s.serialization.registerClass(ns);class rs extends es{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return U(s),q(r),Kr(t,e,n,r,s,"avg")}}rs.className="AveragePooling3D",s.serialization.registerClass(rs);class ss extends ae{constructor(t){super(t),this.inputSpec=[new te({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new c}}class as extends ss{constructor(t){super(t||{})}call(t,e){return Object(s.tidy)(()=>{const e=Kt(t);return s.mean(e,1)})}}as.className="GlobalAveragePooling1D",s.serialization.registerClass(as);class is extends ss{constructor(t){super(t||{})}call(t,e){return Object(s.tidy)(()=>{const e=Kt(t);return s.max(e,1)})}}is.className="GlobalMaxPooling1D",s.serialization.registerClass(is);class os extends ae{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,U(this.dataFormat),this.inputSpec=[new te({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new c}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class us extends os{call(t,e){return Object(s.tidy)(()=>{const e=Kt(t);return"channelsLast"===this.dataFormat?s.mean(e,[1,2]):s.mean(e,[2,3])})}}us.className="GlobalAveragePooling2D",s.serialization.registerClass(us);class ls extends os{call(t,e){return Object(s.tidy)(()=>{const e=Kt(t);return"channelsLast"===this.dataFormat?s.max(e,[1,2]):s.max(e,[2,3])})}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function cs(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new l("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function hs(t,e,n,r=!1,a,i,o=!1,u=!1){return s.tidy(()=>{const h=e.shape.length;if(h<3)throw new l(`Input should be at least 3D, but is ${h}D.`);const d=[1,0].concat(rt(2,h));if(e=s.transpose(e,d),null!=i)throw new c("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===h-1&&(a=s.expandDims(a,-1)),a=s.transpose(a,d)),r&&(e=s.reverse(e,0),null!=a&&(a=s.reverse(a,0)));const p=[];let f,m=n;const g=e.shape[0],b=s.unstack(e);let y,x;null!=a&&(y=s.unstack(a));for(let e=0;e<g;++e){const n=b[e],r=s.tidy(()=>t(n,m));if(null==a)f=r[0],m=r[1];else{const t=s.tidy(()=>{const t=y[e],n=s.onesLike(t).sub(t);return{output:r[0].mul(t).add(m[0].mul(n)),newStates:m.map((e,s)=>r[1][s].mul(t).add(e.mul(n)))}});f=t.output,m=t.newStates}u&&p.push(f)}if(u){const t=1;x=s.stack(p,t)}return[f,x,m]})}ls.className="GlobalMaxPooling2D",s.serialization.registerClass(ls);class ds extends ae{constructor(t){let e;if(super(t),null==t.cell)throw new l("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new ws({cells:t.cell}):t.cell,null==e.stateSize)throw new l("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new te({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return rt(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null)}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Gt(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return s.tidy(()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new c("Constants support is not implemented in RNN yet.");Gt(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t[t.length-1];this.inputSpec[0]=new te({shape:[e,null,n]});const r=[t[0]].concat(t.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!s.util.arraysEqual(this.stateSpec.map(t=>t.shape[t.shape.length-1]),a))throw new l(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=a.map(t=>new te({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){Object(s.tidy)(()=>{if(!this.stateful)throw new o("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new l("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>s.zeros([n,t])):this.states_=[s.zeros([n,this.cell.stateSize])];else if(null==t)s.dispose(this.states_),null!=this.keptStates&&(s.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>s.zeros([n,t])):this.states_[0]=s.zeros([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new l(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);!0===e?this.keptStates.push(this.states_.slice()):s.dispose(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,a];if(!s.util.arraysEqual(r.shape,i))throw new l(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(t=>s.keep(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=cs(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){e.initialState=n,a=a.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new te({shape:t.shape}));i=i.concat(this.stateSpec)}null!=r&&(e.constants=r,a=a.concat(r),this.numConstants=r.length);if(a[0]instanceof ee){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Object(s.tidy)(()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=Kt(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new l(`RNN Layer has ${a} state(s) but was passed `+s.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=hs((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]},t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],c=o[1],h=o[2];this.stateful&&this.resetStates(h,r);const d=this.returnSequences?c:u;return this.returnState?[d].concat(h):d})}getInitialState(t){return Object(s.tidy)(()=>{let e=s.zeros(t.shape);return e=s.sum(e,[1,2]),e=at(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?ht(e,[1,t]):e):this.cell.stateSize>1?[ht(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const e=this.cell.getConfig();t.cell={className:this.cell.getClassName(),config:e};const n=super.getConfig();return Object.assign(t,n),t}static fromConfig(t,e,n={}){const r=xe(e.cell,n);return new t(Object.assign(e,{cell:r}))}}ds.className="RNN",s.serialization.registerClass(ds);class ps extends ae{}class fs extends ps{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,I(this.units,"units"),this.activation=Pn(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Pt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Pt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Pt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Kn(t.kernelRegularizer),this.recurrentRegularizer=Kn(t.recurrentRegularizer),this.biasRegularizer=Kn(t.biasRegularizer),this.kernelConstraint=z(t.kernelConstraint),this.recurrentConstraint=z(t.recurrentConstraint),this.biasConstraint=z(t.biasConstraint),this.dropout=et([1,nt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=et([1,nt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Xt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(s.tidy)(()=>{if(2!==(t=t).length)throw new l(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vs(()=>s.onesLike(t),this.dropout,r)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vs(()=>s.onesLike(n),this.recurrentDropout,r));const i=this.dropoutMask,o=this.recurrentDropoutMask;a=pt(null!=i?s.mul(t,i):t,this.kernel.read()),null!=this.bias&&(a=bt(a,this.bias.read())),null!=o&&(n=s.mul(n,o));let u=s.add(a,pt(n,this.recurrentKernel.read()));return null!=this.activation&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const t={units:this.units,activation:Ln(this.activation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:Gn(this.kernelRegularizer),recurrentRegularizer:Gn(this.recurrentRegularizer),biasRegularizer:Gn(this.biasRegularizer),activityRegularizer:Gn(this.activityRegularizer),kernelConstraint:F(this.kernelConstraint),recurrentConstraint:F(this.recurrentConstraint),biasConstraint:F(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return Object.assign(t,e),t}}fs.className="SimpleRNNCell",s.serialization.registerClass(fs);class ms extends ds{constructor(t){t.cell=new fs(t),super(t)}call(t,e){return Object(s.tidy)(()=>{null!=this.cell.dropoutMask&&(s.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})})}get units(){return this.cell.units}get activation(){return this.cell.activation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}getConfig(){const t={units:this.units,activation:Ln(this.activation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:Gn(this.kernelRegularizer),recurrentRegularizer:Gn(this.recurrentRegularizer),biasRegularizer:Gn(this.biasRegularizer),activityRegularizer:Gn(this.activityRegularizer),kernelConstraint:F(this.kernelConstraint),recurrentConstraint:F(this.recurrentConstraint),biasConstraint:F(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return new t(e)}}ms.className="SimpleRNN",s.serialization.registerClass(ms);class gs extends ps{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new l("GRUCell does not support reset_after parameter set to true.");this.units=t.units,I(this.units,"units"),this.activation=Pn(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Pn(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Pt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Pt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Pt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Kn(t.kernelRegularizer),this.recurrentRegularizer=Kn(t.recurrentRegularizer),this.biasRegularizer=Kn(t.biasRegularizer),this.kernelConstraint=z(t.kernelConstraint),this.recurrentConstraint=z(t.recurrentConstraint),this.biasConstraint=z(t.biasConstraint),this.dropout=et([1,nt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=et([1,nt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Xt(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(s.tidy)(()=>{if(2!==(t=t).length)throw new l("GRUCell expects 2 input Tensors (inputs, h, c), got "+t.length+".");const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vs(()=>s.onesLike(t),this.dropout,n,3)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vs(()=>s.onesLike(r),this.recurrentDropout,n,3));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,c;0<this.dropout&&this.dropout<1&&(t=s.mul(t,a[0]));let h=pt(t,this.kernel.read());this.useBias&&(h=bt(h,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=s.mul(r,i[0]));const d=this.recurrentKernel.read(),[p,f]=s.split(d,[2*this.units,this.units],d.rank-1),m=pt(r,p),[g,b,y]=s.split(h,3,h.rank-1),[x,w]=s.split(m,2,m.rank-1);o=this.recurrentActivation.apply(s.add(g,x)),u=this.recurrentActivation.apply(s.add(b,w));const v=pt(s.mul(u,r),f);c=this.activation.apply(s.add(y,v));const O=s.add(s.mul(o,r),s.mul(s.add(1,s.neg(o)),c));return[O,O]})}getConfig(){const t={units:this.units,activation:Ln(this.activation),recurrentActivation:Ln(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:Gn(this.kernelRegularizer),recurrentRegularizer:Gn(this.recurrentRegularizer),biasRegularizer:Gn(this.biasRegularizer),activityRegularizer:Gn(this.activityRegularizer),kernelConstraint:F(this.kernelConstraint),recurrentConstraint:F(this.recurrentConstraint),biasConstraint:F(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return Object.assign(t,e),t}}gs.className="GRUCell",s.serialization.registerClass(gs);class bs extends ds{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new gs(t),super(t)}call(t,e){return Object(s.tidy)(()=>{null!=this.cell.dropoutMask&&(s.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})})}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:Ln(this.activation),recurrentActivation:Ln(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:Gn(this.kernelRegularizer),recurrentRegularizer:Gn(this.recurrentRegularizer),biasRegularizer:Gn(this.biasRegularizer),activityRegularizer:Gn(this.activityRegularizer),kernelConstraint:F(this.kernelConstraint),recurrentConstraint:F(this.recurrentConstraint),biasConstraint:F(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}bs.className="GRU",s.serialization.registerClass(bs);class ys extends ps{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,I(this.units,"units"),this.activation=Pn(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Pn(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Pt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Pt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Pt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Kn(t.kernelRegularizer),this.recurrentRegularizer=Kn(t.recurrentRegularizer),this.biasRegularizer=Kn(t.biasRegularizer),this.kernelConstraint=z(t.kernelConstraint),this.recurrentConstraint=z(t.recurrentConstraint),this.biasConstraint=z(t.biasConstraint),this.dropout=et([1,nt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=et([1,nt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Xt(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends Ot{apply(e,r){const s=t.apply([n]),a=(new kt).apply([n]),i=t.apply([2*n]);return ct(ct(s,a),i)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Object(s.tidy)(()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new l("LSTMCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");let r=t[1];const a=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vs(()=>s.onesLike(t),this.dropout,n,4)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vs(()=>s.onesLike(r),this.recurrentDropout,n,4));const i=this.dropoutMask,o=this.recurrentDropoutMask;let u,c,h,d;0<this.dropout&&this.dropout<1&&(t=s.mul(t,i[0]));let p=pt(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=s.mul(r,o[0])),p=s.add(p,pt(r,this.recurrentKernel.read())),this.useBias&&(p=bt(p,this.bias.read()));const[f,m,g,b]=s.split(p,4,p.rank-1);u=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(m),h=s.add(s.mul(c,a),s.mul(u,this.activation.apply(g))),d=this.recurrentActivation.apply(b);const y=s.mul(d,this.activation.apply(h));return[y,y,h]})}getConfig(){const t={units:this.units,activation:Ln(this.activation),recurrentActivation:Ln(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Gn(this.kernelRegularizer),recurrentRegularizer:Gn(this.recurrentRegularizer),biasRegularizer:Gn(this.biasRegularizer),activityRegularizer:Gn(this.activityRegularizer),kernelConstraint:F(this.kernelConstraint),recurrentConstraint:F(this.recurrentConstraint),biasConstraint:F(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return Object.assign(t,e),t}}ys.className="LSTMCell",s.serialization.registerClass(ys);class xs extends ds{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new ys(t),super(t)}call(t,e){return Object(s.tidy)(()=>{null!=this.cell.dropoutMask&&(s.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})})}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get unitForgetBias(){return this.cell.unitForgetBias}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:Ln(this.activation),recurrentActivation:Ln(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Gn(this.kernelRegularizer),recurrentRegularizer:Gn(this.recurrentRegularizer),biasRegularizer:Gn(this.biasRegularizer),activityRegularizer:Gn(this.activityRegularizer),kernelConstraint:F(this.kernelConstraint),recurrentConstraint:F(this.recurrentConstraint),biasConstraint:F(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}xs.className="LSTM",s.serialization.registerClass(xs);class ws extends ps{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Object(s.tidy)(()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[t[0]].concat(n):[a[0]].concat(n),a=o.call(a,e),s.push(a.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[a[0]].concat(n)})}build(t){let e;Gt(t)&&(t=t[0]),t=t,this.cells.forEach((n,r)=>{K("RNNCell_"+r,()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=[];for(const e of this.cells)t.push({className:e.getClassName(),config:e.getConfig()});const e={cells:t},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(xe(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Zt(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Qt(e)}}function vs(t,e,n=null,r=1){function a(){return yt(t(),e)}if(r>1){const e=[];for(let s=0;s<r;s++)e.push(xt(a,t,n));return e.map(t=>s.keep(t.clone()))}return s.keep(xt(a,t,n).clone())}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */ws.className="StackedRNNCells",s.serialization.registerClass(ws);class Os extends ae{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=xe(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class Ss extends Os{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Xt(t)).length<3)throw new l("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(t));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Xt(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Object(s.tidy)(()=>hs((t,n)=>[Kt(this.layer.call(t,e)),[]],t=Kt(t),[],!1,null,null,!1,!0)[1])}}Ss.className="TimeDistributed",s.serialization.registerClass(Ss);class ks extends Os{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=xe(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=xe(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,C(W,"BidirectionalMergeMode",s),t.weights)throw new c("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),e=s[0]):e=s[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):m(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=cs(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const a=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new l("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,a.push(...n);const r=n.map(t=>new te({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),i.push(...r)}if(null!=r)throw new c("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof ee;for(const t of a)if(t instanceof ee!==o)throw new l("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Object(s.tidy)(()=>{const n=e.initialState;let r,a,i,o;if(null==n)r=this.forwardLayer.call(t,e),a=this.backwardLayer.call(t,e);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:s})),a=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=s.reverse(a,1)),"concat"===this.mergeMode?o=lt([r,a]):"sum"===this.mergeMode?o=s.add(r,a):"ave"===this.mergeMode?o=s.mul(.5,s.add(r,a)):"mul"===this.mergeMode?o=s.mul(r,a):null==this.mergeMode&&(o=[r,a]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){K(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),K(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=xe(e.layer);if(delete e.layer,null!=e.numConstants)throw new c("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}ks.className="Bidirectional",s.serialization.registerClass(ks);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var Cs=n(24),Ns=n(18),Is=n(12),As=n(17);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class Es{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return s.util.assert(t>0,()=>"batchSize needs to be positive, but it is\n      "+t),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Ts(async()=>(await n.iterator()).columnMajorBatch(t,e,$s),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Ts(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Ts(async()=>(await e.iterator()).filter(e=>s.tidy(()=>t(e))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Ts(async()=>(await e.iterator()).map(e=>s.tidy(()=>t(e))),this.size)}mapAsync(t){const e=this;return Ts(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Ts(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Ts(async()=>{const n=Object(Is.e)(async()=>({value:await e.iterator(),done:!1}));return Object(Is.d)(n.take(t))},n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Ts(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Ns.alea(e||s.util.now().toString());return Ts(async()=>{let e=a.int32();return n&&(e+=a.int32()),(await r.iterator()).shuffle(t,e.toString())},this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Ts(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Ts(t,e=null){return new class extends Es{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function $s(t){if(null===t)return null;const e=t[0];if(Object(As.a)(e)){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof s.Tensor?s.stack(t):s.tensor(t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */(t),recurse:!1}}return{value:null,recurse:!0}}Es.MAX_BUFFER_SIZE=1e4;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
Is.a;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */Is.a;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Rs=n(51);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */Rs.a;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function js(t,e,n,r){const a=s.util.getTypedArrayFromDType(r,s.util.sizeFromShape(n));for(let n=0;n<a.length;++n){const r=n*e;let s=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>s&&(s=e)}a[n]=s}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ds(t,e,n,r,a){const i=e.length,o=s.util.sizeFromShape(e),u=s.util.computeStrides(e),l=s.util.computeStrides(a),c=s.util.getTypedArrayFromDType(n,s.util.sizeFromShape(a));for(let e=0;e<o;++e){const n=s.util.indexToLoc(e,i,u),a=new Array(n.length);for(let t=0;t<a.length;t++)a[t]=n[r[t]];c[s.util.locToIndex(a,i,l)]=t[e]}return c}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _s(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&s.util.assert("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the CPU backend.")})}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fs(t,e,n,r,a,i){const o=a.strideHeight,u=a.strideWidth,l=a.dilationHeight,c=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Object(s.buffer)(a.outShape,n),b=g.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],x=a.outShape[2]*a.outShape[3],w=a.outShape[3];for(let e=0;e<a.batchSize;++e){const n=e*y,s=e*r[0];for(let e=0;e<a.inChannels;++e)for(let g=0;g<a.outHeight;++g){const y=g*o-p,v=Math.max(0,y),O=Math.min(a.inHeight,h+y),S=n+g*x;for(let n=0;n<a.outWidth;++n){const o=n*u-f,h=Math.max(0,o),p=Math.min(a.inWidth,d+o);let g=m,y=0,x=0;for(let n=v;n<O;n+=l){const a=s+n*r[1];for(let n=h;n<p;n+=c){const s=t[a+n*r[2]+e];"max"===i&&s>g?g=s:"avg"===i&&(y+=s,x++)}if(isNaN(g))break}b[S+n*w+e]="avg"===i?y/x:g}}}return g}function Ms(t,e,n,r,a=!1,i=!1){const o=Object(s.buffer)(r.outShape,"int32"),u=r.strideHeight,l=r.strideWidth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,g=Object(s.buffer)(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const s=n*u-f;let b=s;for(;b<0;)b+=c;const y=Math.min(r.inHeight,d+s);for(let u=0;u<r.outWidth;++u){const d=u*l-m;let f=d;for(;f<0;)f+=h;const x=Math.min(r.inWidth,p+d);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=b;n<y;n+=c){const o=n-s;for(let s=f;s<x;s+=h){const u=s-d,l=g.get(t,n,s,e);l>w&&(w=l,v=a?i?((t*r.inHeight+n)*r.inWidth+s)*r.inChannels+e:(n*r.inWidth+s)*r.inChannels+e:o*p+u)}}o.set(v,t,n,u,e)}}return o}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zs=s.kernel_impls.nonMaxSuppressionV3,Ls=s.kernel_impls.split,Bs=s.kernel_impls.tile,Ps=s.kernel_impls.topkImpl,Ws=s.kernel_impls.whereImpl;function Vs(t,e,n,r){if("linear"===n)return t.linear(e);if("relu"===n)return t.relu(e);if("elu"===n)return t.elu(e);if("relu6"===n)return t.relu6(e);if("prelu"===n)return t.prelu(e,r);throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}class Us extends s.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new s.DataStorage(this,Object(s.engine)())}write(t,e,n){this.firstUse&&(this.firstUse=!1,Object(s.env)().get("IS_NODE")&&s.backend_util.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n}),r}move(t,e,n,r){this.data.set(t,{values:e,dtype:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensors:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return s.backend_util.mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>s.util.decodeString(t))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return s.buffer(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Object(s.engine)().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensors:e}=this.data.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.data.delete(t)}}async time(t){const e=s.util.now();t();return{kernelMs:s.util.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}complex(t,e){const n=this.makeOutput(null,t.shape,"complex64");return this.data.get(n.dataId).complexTensors={real:Object(s.engine)().keep(t.clone()),imag:Object(s.engine)().keep(e.clone())},n}real(t){return this.data.get(t.dataId).complexTensors.real.clone()}imag(t){return this.data.get(t.dataId).complexTensors.imag.clone()}slice(t,e,n){_s(t,"slice");if(s.slice_util.isSliceContinous(t.shape,e,n)){const r=s.slice_util.computeFlatOffset(e,t.strides),a=s.util.sizeFromShape(n),i=this.readSync(t.dataId);return s.tensor(i.subarray(r,r+a),n,t.dtype)}const r=s.buffer(n,t.dtype),a=this.bufferSync(t);for(let t=0;t<r.size;++t){const n=r.indexToLoc(t).map((t,n)=>t+e[n]);r.values[t]=a.get(...n)}return r.toTensor()}stridedSlice(t,e,n,r){_s(t,"stridedSlice");const a=s.slice_util.computeOutShape(e,n,r);if(a.some(t=>0===t))return s.tensor([],a);const i=s.buffer(a,t.dtype),o=this.bufferSync(t);for(let t=0;t<i.size;t++){const n=i.indexToLoc(t),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[t]*r[t]+e[t];i.set(o.get(...s),...n)}return i.toTensor()}diag(t){const e=this.readSync(t.dataId),n=s.buffer([t.size,t.size],t.dtype),r=n.values;for(let n=0;n<e.length;n++)r[n*t.size+n]=e[n];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[e]=n,o[n]=this.slice(t,a,i).reshape(r);return o}reverse(t,e){_s(t,"reverse");const n=s.buffer(t.shape,t.dtype),r=this.bufferSync(t);for(let s=0;s<n.size;s++){const a=n.indexToLoc(s),i=a.slice();e.forEach(e=>i[e]=t.shape[e]-1-i[e]),n.set(r.get(...i),...a)}return n.toTensor()}concat(t,e){if("complex64"===t[0].dtype){const n=t.map(t=>s.real(t)),r=t.map(t=>s.imag(t));return s.complex(this.concat(n,e),this.concat(r,e))}const n=t.map(t=>{const n=s.util.sizeFromShape(t.shape.slice(e));return t.as2D(-1,n)}),r=s.backend_util.computeOutShape(n.map(t=>t.shape),1),a=s.buffer(r,t[0].dtype).values;if(1===n[0].shape[0]){let t=0;n.forEach(e=>{a.set(this.readSync(e.dataId),t),t+=e.size})}else{let t=0;n.forEach(e=>{const n=this.readSync(e.dataId);let s=0;for(let i=0;i<e.shape[0];++i){const o=i*r[1]+t;for(let t=0;t<e.shape[1];++t)a[o+t]=n[s++]}t+=e.shape[1]})}const i=s.backend_util.computeOutShape(t.map(t=>t.shape),e);return s.tensor(a,i,t[0].dtype)}neg(t){return _s(t,"neg"),this.multiply(s.scalar(-1),t)}add(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),(t,e,n,r)=>({real:t+n,imag:e+r})):this.broadcastedBinaryOp(t,e,Object(s.upcastType)(t.dtype,e.dtype),(t,e)=>t+e)}addN(t){_s(t,"addN");const e=t.map(t=>this.readSync(t.dataId)),n=s.buffer(t[0].shape,t[0].dtype),r=n.values;for(let n=0;n<t.length;n++){const t=e[n];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=s.util.parseAxisParam([e],t.shape),r=Object(s.max)(t,n),a=s.backend_util.expandShapeToKeepDim(r.shape,n),i=this.subtract(t,r.reshape(a)),o=this.exp(i),u=this.sum(o,n).reshape(a);return s.div(o,u)}subtract(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),(t,e,n,r)=>({real:t-n,imag:e-r})):this.broadcastedBinaryOp(t,e,Object(s.upcastType)(t.dtype,e.dtype),(t,e)=>t-e)}pow(t,e){return _s([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.pow(t,e))}batchMatMul(t,e,n,r){_s([t,e],"matMul");const a=n?t.shape[1]:t.shape[2],i=n?t.shape[2]:t.shape[1],o=r?e.shape[1]:e.shape[2],u=t.shape[0],l=this.readSync(t.dataId),c=this.readSync(e.dataId),[h,d,p]=n?[t.strides[0],1,t.strides[1]]:[t.strides[0],t.strides[1],1],[f,m,g]=r?[1,e.strides[1],e.strides[0]]:[e.strides[1],1,e.strides[0]],b=i*o,y=s.buffer([u,i,o],t.dtype),x=y.values,w=this.blockSize;for(let t=0;t<u;t++)for(let e=0;e<i;e+=w)for(let n=0;n<o;n+=w)for(let r=0;r<a;r+=w){const s=Math.min(e+w,i),u=Math.min(n+w,o),y=Math.min(r+w,a);for(let a=e;a<s;a++)for(let e=n;e<u;e++){let n=0;for(let s=r;s<y;s++)n+=l[t*h+a*d+s*p]*c[s*f+e*m+t*g];x[t*b+(a*o+e)]+=n}}return y.toTensor()}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){let o=this.batchMatMul(t,e,n,r);return s&&(o=this.add(o,s)),a&&(o=Vs(this,o,a,i)),o}multiply(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),(t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})):this.broadcastedBinaryOp(t,e,Object(s.upcastType)(t.dtype,e.dtype),(t,e)=>t*e)}floorDiv(t,e){_s([t,e],"floorDiv");return this.broadcastedBinaryOp(t,e,"int32",(t,e)=>Math.floor(t/e))}sum(t,e){_s(t,"sum"),s.backend_util.assertAxesAreInnerMostDims("sum",e,t.rank);const[n,r]=s.backend_util.computeOutAndReduceShapes(t.shape,e),a=Object(s.upcastType)(t.dtype,"int32"),i=s.zeros(n,a),o=s.util.sizeFromShape(r),u=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<u.length;++t){const e=t*o;let n=0;for(let t=0;t<o;++t)n+=l[e+t];u[t]=n}return i}prod(t,e){_s(t,"sum");const[n,r]=s.backend_util.computeOutAndReduceShapes(t.shape,e),a=Object(s.upcastType)(t.dtype,"int32"),i=s.zeros(n,a),o=s.util.sizeFromShape(r),u=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<u.length;++t){const e=t*o;let n=1;for(let t=0;t<o;++t)n*=l[e+t];u[t]=n}return i}unsortedSegmentSum(t,e,n){_s(t,"unsortedSegmentSum");const r=[],a=t.rank-e.rank;for(let t=0;t<a;++t)e=e.expandDims(t+1);for(let a=0;a<n;++a){const n=s.scalar(a,"int32"),i=s.equal(n,e).asType("float32").mul(t).sum(0);r.push(i)}return s.stack(r)}argMin(t,e){_s(t,"argMin");const n=[e];s.backend_util.assertAxesAreInnerMostDims("argMin",n,t.rank);const[r,a]=s.backend_util.computeOutAndReduceShapes(t.shape,n),i=s.zeros(r,"int32"),o=s.util.sizeFromShape(a),u=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<u.length;++t){const e=t*o;let n=l[e],r=0;for(let t=0;t<o;++t){const s=l[e+t];s<n&&(n=s,r=t)}u[t]=r}return i}argMax(t,e){_s(t,"argMax");const n=[e];s.backend_util.assertAxesAreInnerMostDims("argMax",n,t.rank);const[r,a]=s.backend_util.computeOutAndReduceShapes(t.shape,n),i=s.zeros(r,"int32"),o=s.util.sizeFromShape(a),u=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let t=0;t<u.length;++t){const e=t*o;let n=l[e],r=0;for(let t=0;t<o;++t){const s=l[e+t];s>n&&(n=s,r=t)}u[t]=r}return i}cumsum(t,e,n,r){if(_s(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=`+e);const a=Object(s.upcastType)(t.dtype,"int32"),i=s.zeros(t.shape,a),o=this.readSync(i.dataId),u=this.readSync(t.dataId),l=t.shape[t.rank-1],c=r?(t,e)=>t+l-e-1:(t,e)=>t+e;for(let t=0;t<u.length;t+=l)for(let e=0;e<l;e++){const r=c(t,e);if(0===e)o[r]=n?0:u[r];else{const s=c(t,e-1);o[r]=n?u[s]+o[s]:u[r]+o[s]}}return i}equal(t,e){return _s([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t===e?1:0)}notEqual(t,e){return _s([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t!==e?1:0)}less(t,e){return _s([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t<e?1:0)}lessEqual(t,e){return _s([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t<=e?1:0)}greater(t,e){return _s([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t>e?1:0)}greaterEqual(t,e){return _s([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t>=e?1:0)}logicalNot(t){_s(t,"logicalNot");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n[t]=e[t]?0:1;return this.makeOutput(n,t.shape,"bool")}logicalAnd(t,e){return _s([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t&&e)}logicalOr(t,e){return _s([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t||e)}select(t,e,n){_s([t,e,n],"select");const r=this.readSync(t.dataId),a=this.readSync(e.dataId),i=this.readSync(n.dataId),o=s.zeros(e.shape,Object(s.upcastType)(e.dtype,n.dtype)),u=this.readSync(o.dataId);let l=0;const c=0===t.rank||t.rank>1||1===e.rank?1:s.util.sizeFromShape(e.shape.slice(1));for(let t=0;t<r.length;t++)for(let e=0;e<c;e++)1===r[t]?u[l++]=a[t]:u[l++]=i[t];return o}where(t){_s([t],"where");const e=this.readSync(t.dataId);return Ws(t.shape,e)}topk(t,e,n){_s(t,"topk");const r=this.readSync(t.dataId);return Ps(r,t.shape,t.dtype,e,n)}min(t,e){_s(t,"min"),s.backend_util.assertAxesAreInnerMostDims("min",e,t.rank);const[n,r]=s.backend_util.computeOutAndReduceShapes(t.shape,e),a=s.zeros(n,t.dtype),i=s.util.sizeFromShape(r),o=this.readSync(a.dataId),u=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=u[e];for(let t=0;t<i;++t){const r=u[e+t];r<n&&(n=r)}o[t]=n}return a}minimum(t,e){return _s([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.min(t,e))}mod(t,e){return _s([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})}maximum(t,e){return _s([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.max(t,e))}all(t,e){_s(t,"all"),s.backend_util.assertAxesAreInnerMostDims("all",e,t.rank);const[n,r]=s.backend_util.computeOutAndReduceShapes(t.shape,e),a=s.zeros(n,t.dtype),i=s.util.sizeFromShape(r),o=this.readSync(a.dataId),u=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=u[e];for(let t=0;t<i;++t){const r=u[e+t];n=n&&r}o[t]=n}return a}any(t,e){_s(t,"any"),s.backend_util.assertAxesAreInnerMostDims("any",e,t.rank);const[n,r]=s.backend_util.computeOutAndReduceShapes(t.shape,e),a=s.zeros(n,t.dtype),i=s.util.sizeFromShape(r),o=this.readSync(a.dataId),u=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=u[e];for(let t=0;t<i;++t){const r=u[e+t];n=n||r}o[t]=n}return a}squaredDifference(t,e){return _s([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>{const n=t-e;return n*n})}ceil(t){_s(t,"ceil");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.ceil(e[t]);return this.makeOutput(n,t.shape,"float32")}floor(t){_s(t,"floor");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.floor(e[t]);return this.makeOutput(n,t.shape,"float32")}sign(t){_s(t,"x");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)e[t]<0?n[t]=-1:e[t]>0?n[t]=1:n[t]=0;return this.makeOutput(n,t.shape,"float32")}isNaN(t){_s(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Number.isNaN(e[t])&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}isInf(t){_s(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Math.abs(e[t])===1/0&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}isFinite(t){_s(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)Number.isFinite(e[t])&&(n[t]=1);return this.makeOutput(n,t.shape,"bool")}round(t){_s(t,"round");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=Math.floor(e[t]);e[t]-r<.5?n[t]=Math.floor(e[t]):e[t]-r>.5?n[t]=Math.ceil(e[t]):n[t]=r%2==0?r:r+1}return this.makeOutput(n,t.shape,"float32")}exp(t){_s(t,"exp");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.exp(e[t]);return this.makeOutput(n,t.shape,"float32")}expm1(t){_s(t,"expm1");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=Math.expm1(e[t]);return this.makeOutput(n,t.shape,"float32")}log(t){_s(t,"log");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=Math.log(r)}return this.makeOutput(n,t.shape,"float32")}log1p(t){_s(t,"log1p");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=Math.log1p(r)}return this.makeOutput(n,t.shape,"float32")}sqrt(t){_s(t,"sqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=Math.sqrt(r)}return this.makeOutput(n,t.shape,"float32")}rsqrt(t){_s(t,"rsqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t){const r=e[t];n[t]=1/Math.sqrt(r)}return this.makeOutput(n,t.shape,"float32")}reciprocal(t){_s(t,"reciprocal");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let t=0;t<e.length;++t)n[t]=1/e[t];return this.makeOutput(n,t.shape,"float32")}linear(t){return t}relu(t){_s(t,"relu");const e=s.zeros(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t)n[t]=Math.max(0,r[t]);return e}relu6(t){_s(t,"relu");const e=s.zeros(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t)n[t]=Math.min(Math.max(0,r[t]),6);return e}prelu(t,e){return _s([t,e],"prelu"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>t<0?e*t:t)}elu(t){_s(t,"elu");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t){const r=n[t];e[t]=r>=0?r:Math.exp(r)-1}return this.makeOutput(e,t.shape,"float32")}eluDer(t,e){_s([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const e=r[t];n[t]=e>=1?s[t]:s[t]*(e+1)}return this.makeOutput(n,e.shape,"float32")}selu(t){_s(t,"selu");const e=s.backend_util.SELU_SCALEALPHA,n=s.backend_util.SELU_SCALE,r=new Float32Array(t.size),a=this.readSync(t.dataId);for(let t=0;t<a.length;++t){const s=a[t];r[t]=s>=0?n*s:e*(Math.exp(s)-1)}return this.makeOutput(r,t.shape,"float32")}clip(t,e,n){_s(t,"clip");const r=new Float32Array(t.size),s=this.readSync(t.dataId);for(let t=0;t<s.length;++t){const a=s[t];r[t]=a>n?n:a<e?e:a}return this.makeOutput(r,t.shape,"float32")}abs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return this.makeOutput(e,t.shape,"float32")}complexAbs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<t.size;++r){const t=n[2*r],s=n[2*r+1];e[r]=Math.hypot(t,s)}return this.makeOutput(e,t.shape,"float32")}int(t){_s(t,"int");const e=new Int32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=n[t];return this.makeOutput(e,t.shape,"int32")}sigmoid(t){_s(t,"sigmoid");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=1/(1+Math.exp(-n[t]));return this.makeOutput(e,t.shape,"float32")}softplus(t){_s(t,"softplus");const e=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(t.size),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const s=r[t]>-e,a=r[t]<e,i=Math.exp(r[t]);let o;o=a?i:s?r[t]:Math.log(1+i),n[t]=o}return this.makeOutput(n,t.shape,"float32")}sin(t){_s(t,"sin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.sin(n[t]);return this.makeOutput(e,t.shape,"float32")}cos(t){_s(t,"cos");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.cos(n[t]);return this.makeOutput(e,t.shape,"float32")}tan(t){_s(t,"tan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.tan(n[t]);return this.makeOutput(e,t.shape,"float32")}asin(t){_s(t,"asin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.asin(n[t]);return this.makeOutput(e,t.shape,"float32")}acos(t){_s(t,"acos");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.acos(n[t]);return this.makeOutput(e,t.shape,"float32")}atan(t){_s(t,"atan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.atan(n[t]);return this.makeOutput(e,t.shape,"float32")}atan2(t,e){return _s([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.atan2(t,e))}sinh(t){_s(t,"sinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.sinh(n[t]);return this.makeOutput(e,t.shape,"float32")}cosh(t){_s(t,"cosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.cosh(n[t]);return this.makeOutput(e,t.shape,"float32")}tanh(t){_s(t,"tanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=s.util.tanh(n[t]);return this.makeOutput(e,t.shape,"float32")}asinh(t){_s(t,"asinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.asinh(n[t]);return this.makeOutput(e,t.shape,"float32")}acosh(t){_s(t,"acosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.acosh(n[t]);return this.makeOutput(e,t.shape,"float32")}atanh(t){_s(t,"atanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let t=0;t<n.length;++t)e[t]=Math.atanh(n[t]);return this.makeOutput(e,t.shape,"float32")}erf(t){_s(t,"erf");const e=new Float32Array(t.size),n=this.readSync(t.dataId),r=s.backend_util.ERF_P,a=s.backend_util.ERF_A1,i=s.backend_util.ERF_A2,o=s.backend_util.ERF_A3,u=s.backend_util.ERF_A4,l=s.backend_util.ERF_A5;for(let t=0;t<n.length;++t){const s=Math.sign(n[t]),c=Math.abs(n[t]),h=1/(1+r*c);e[t]=s*(1-((((l*h+u)*h+o)*h+i)*h+a)*h*Math.exp(-c*c))}return this.makeOutput(e,t.shape,"float32")}step(t,e=0){_s(t,"step");const n=new Float32Array(t.size),r=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const s=r[t];isNaN(s)?n[t]=NaN:n[t]=s>0?1:e}return this.makeOutput(n,t.shape,"float32")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){let i=this.conv2d(t,e,n);return r&&(i=this.add(i,r)),s&&(i=Vs(this,i,s,a)),i}conv2d(t,e,n){_s([t,e],"conv2d");const r=n.filterHeight,a=n.filterWidth,i=n.dilationHeight,o=n.dilationWidth,u=n.padInfo.left,l=n.padInfo.top,c="channelsLast"===n.dataFormat,h=s.buffer(n.outShape,t.dtype),d=t.strides[0],p=c?t.strides[1]:t.strides[2],f=c?t.strides[2]:1,m=c?1:t.strides[1],g=h.strides[0],b=c?h.strides[1]:h.strides[2],y=c?h.strides[2]:1,x=c?1:h.strides[1],w=this.readSync(t.dataId),v=this.readSync(e.dataId),O=h.values;for(let t=0;t<n.batchSize;++t){const s=t*d,c=t*g;for(let t=0;t<n.outHeight;++t){const h=c+t*b,d=t*n.strideHeight-l;for(let t=0;t<r;t++){const r=d+t*i;if(r<0||r>=n.inHeight)continue;const l=t*e.strides[0],c=s+r*p;for(let t=0;t<n.outWidth;++t){const r=h+t*y,s=t*n.strideWidth-u;for(let t=0;t<a;t++){const a=s+t*o;if(a<0||a>=n.inWidth)continue;const i=c+a*f;let u=l+t*e.strides[1];for(let t=0;t<n.inChannels;++t){const e=w[i+t*m];for(let t=0;t<n.outChannels;++t)O[r+t*x]+=e*v[u+t];u+=n.outChannels}}}}}}return h.toTensor()}conv3d(t,e,n){const r=n.filterDepth,a=n.filterHeight,i=n.filterWidth,o=n.dilationDepth,u=n.dilationHeight,l=n.dilationWidth,c=n.padInfo.front,h=n.padInfo.left,d=n.padInfo.top,p=s.buffer(n.outShape,t.dtype),f=this.readSync(t.dataId),m=this.readSync(e.dataId),g=p.values;for(let s=0;s<n.batchSize;++s){const b=s*t.strides[0],y=s*p.strides[0];for(let s=0;s<n.outDepth;++s){const x=y+s*p.strides[1],w=s*n.strideDepth-c;for(let s=0;s<r;s++){const r=w+s*o;if(r<0||r>=n.inDepth)continue;const c=s*e.strides[0],y=b+r*t.strides[1];for(let r=0;r<n.outHeight;++r){const s=x+r*p.strides[2],o=r*n.strideHeight-d;for(let r=0;r<a;r++){const a=o+r*u;if(a<0||a>=n.inHeight)continue;const d=c+r*e.strides[1],p=y+a*t.strides[2];for(let t=0;t<n.outWidth;++t){const r=s+t*n.outChannels,a=t*n.strideWidth-h;for(let t=0;t<i;t++){const s=a+t*l;if(s<0||s>=n.inWidth)continue;const i=d+t*e.strides[2],o=p+s*n.inChannels;let u=i;for(let t=0;t<n.inChannels;++t){const e=f[o+t];for(let t=0;t<n.outChannels;++t)g[r+t]+=e*m[u+t];u+=n.outChannels}}}}}}}}return p.toTensor()}conv2dDerInput(t,e,n){_s([t,e],"conv2dDerInput");const r=s.buffer(n.inShape,"float32"),a=r.values,i=this.readSync(t.dataId),o=this.readSync(e.dataId),[u,l,c]=e.strides,{batchSize:h,filterHeight:d,filterWidth:p,inChannels:f,inHeight:m,inWidth:g,outChannels:b,outHeight:y,outWidth:x,strideHeight:w,strideWidth:v,dataFormat:O}=n,S=d-1-n.padInfo.top,k=p-1-n.padInfo.left,C="channelsLast"===O,N=r.strides[0],I=C?r.strides[1]:r.strides[2],A=C?r.strides[2]:1,E=C?1:r.strides[1],T=t.strides[0],$=C?t.strides[1]:t.strides[2],R=C?t.strides[2]:1,j=C?1:t.strides[1];for(let t=0;t<h;++t)for(let e=0;e<f;++e)for(let n=0;n<m;++n){const r=n-S,s=Math.max(0,Math.ceil(r/w)),h=Math.min(y,(d+r)/w);for(let f=0;f<g;++f){const m=f-k,g=Math.max(0,Math.ceil(m/v)),y=Math.min(x,(p+m)/v);let O=0;for(let n=s;n<h;++n){const s=n*w-r;for(let r=g;r<y;++r){const a=T*t+$*n+R*r,h=u*(d-1-s)+l*(p-1-(r*v-m))+c*e;for(let t=0;t<b;++t){O+=i[a+j*t]*o[h+t]}}}a[N*t+I*n+A*f+E*e]=O}}return r.toTensor()}conv3dDerInput(t,e,n){const r=s.buffer(n.inShape,"float32"),a=r.values,[i,o,u,l]=r.strides,c=this.readSync(t.dataId),[h,d,p,f]=t.strides,m=this.readSync(e.dataId),[g,b,y,x]=e.strides,{batchSize:w,filterDepth:v,filterHeight:O,filterWidth:S,inChannels:k,inDepth:C,inHeight:N,inWidth:I,outChannels:A,outDepth:E,outHeight:T,outWidth:$,strideDepth:R,strideHeight:j,strideWidth:D}=n,_=v-1-n.padInfo.front,F=O-1-n.padInfo.top,M=S-1-n.padInfo.left;for(let t=0;t<w;++t)for(let e=0;e<k;++e)for(let n=0;n<C;++n){const r=n-_,s=Math.max(0,Math.ceil(r/R)),w=Math.min(E,(v+r)/R);for(let k=0;k<N;++k){const C=k-F,N=Math.max(0,Math.ceil(C/j)),E=Math.min(T,(O+C)/j);for(let T=0;T<I;++T){const I=T-M,_=Math.max(0,Math.ceil(I/D)),F=Math.min($,(S+I)/D);let z=0;for(let n=s;n<w;++n){const s=n*R-r;for(let r=N;r<E;++r){const a=r*j-C;for(let i=_;i<F;++i){const o=h*t+d*n+p*r+f*i,u=g*(v-1-s)+b*(O-1-a)+y*(S-1-(i*D-I))+x*e;for(let t=0;t<A;++t){z+=c[o+t]*m[u+t]}}}}a[i*t+o*n+u*k+l*T+e]=z}}}return r.toTensor()}conv2dDerFilter(t,e,n){_s([t,e],"conv2dDerFilter");const r=n.strideHeight,a=n.strideWidth,i=n.filterHeight,o=n.filterWidth,u="channelsLast"===n.dataFormat,l=s.buffer(n.filterShape,"float32"),c=n.padInfo.left,h=n.padInfo.top,d=this.bufferSync(t),p=this.bufferSync(e);for(let t=0;t<i;++t){const e=Math.max(0,Math.ceil((h-t)/r)),s=Math.min(n.outHeight,(n.inHeight+h-t)/r);for(let i=0;i<o;++i){const o=Math.max(0,Math.ceil((c-i)/a)),f=Math.min(n.outWidth,(n.inWidth+c-i)/a);for(let m=0;m<n.inChannels;++m)for(let g=0;g<n.outChannels;++g){let b=0;for(let l=0;l<n.batchSize;++l)for(let n=e;n<s;++n){const e=t+n*r-h;for(let t=o;t<f;++t){const r=i+t*a-c;b+=u?d.get(l,e,r,m)*p.get(l,n,t,g):d.get(l,m,e,r)*p.get(l,g,n,t)}}l.set(b,t,i,m,g)}}}return l.toTensor()}conv3dDerFilter(t,e,n){const r=n.strideDepth,a=n.strideHeight,i=n.strideWidth,o=n.filterDepth,u=n.filterHeight,l=n.filterWidth,c=s.buffer(n.filterShape,"float32"),h=c.values,[d,p,f,m]=c.strides,g=this.readSync(e.dataId),[b,y,x,w]=e.strides,v=this.readSync(t.dataId),[O,S,k,C]=t.strides,N=n.padInfo.front,I=n.padInfo.left,A=n.padInfo.top;for(let t=0;t<o;++t){const e=Math.max(0,Math.ceil((N-t)/r)),s=Math.min(n.outDepth,(n.inDepth+N-t)/r),o=t*d;for(let c=0;c<u;++c){const u=Math.max(0,Math.ceil((A-c)/a)),d=Math.min(n.outHeight,(n.inHeight+A-c)/a),E=c*p+o;for(let o=0;o<l;++o){const l=Math.max(0,Math.ceil((I-o)/i)),p=Math.min(n.outWidth,(n.inWidth+I-o)/i),T=o*f+E;for(let f=0;f<n.inChannels;++f){const E=f*m+T;for(let m=0;m<n.outChannels;++m){let T=0;for(let h=0;h<n.batchSize;++h){const n=h*O,E=h*b;for(let h=e;h<s;++h){const e=(t+h*r-N)*S+n,s=h*y+E;for(let t=u;t<d;++t){const n=(c+t*a-A)*k+e,r=t*x+s;for(let t=l;t<p;++t){const e=t*w+r;T+=v[(o+t*i-I)*C+n+f]*g[e+m]}}}}h[E+m]=T}}}}}return c.toTensor()}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){let i=this.depthwiseConv2D(t,e,n);return r&&(i=this.add(i,r)),s&&(i=Vs(this,i,s,a)),i}depthwiseConv2D(t,e,n){_s([t,e],"depthwiseConv2D");const r=n.filterHeight,a=n.filterWidth,i=n.dilationHeight,o=n.dilationWidth,u=n.padInfo.left,l=n.padInfo.top,c=n.outChannels/n.inChannels,h=s.buffer(n.outShape,t.dtype),d=this.readSync(t.dataId),p=this.readSync(e.dataId),f=h.values;for(let s=0;s<n.batchSize;++s){const m=s*t.strides[0],g=s*h.strides[0];for(let s=0;s<n.outHeight;++s){const b=g+s*h.strides[1],y=s*n.strideHeight-u;for(let s=0;s<r;++s){const r=y+s*i;if(r<0||r>=n.inHeight)continue;const u=s*e.strides[0],g=m+r*t.strides[1];for(let t=0;t<n.outWidth;++t){const r=b+t*h.strides[2],s=t*n.strideWidth-l;for(let t=0;t<a;++t){const a=s+t*o;if(a<0||a>=n.inWidth)continue;const i=u+t*e.strides[1],l=g+a*n.inChannels;let h=r,m=i;for(let t=0;t<n.inChannels;++t){const e=d[l+t];for(let t=0;t<c;++t)f[h+t]+=e*p[m+t];h+=c,m+=c}}}}}}return h.toTensor()}depthwiseConv2DDerInput(t,e,n){_s([t,e],"depthwiseConv2DDerInput");const r=s.buffer(n.inShape,"float32"),a=r.values,[i,o,u]=r.strides,l=this.readSync(t.dataId),[c,h,d]=t.strides,p=this.readSync(e.dataId),[f,m,g]=e.strides,{batchSize:b,filterHeight:y,filterWidth:x,inChannels:w,inHeight:v,inWidth:O,outChannels:S,outHeight:k,outWidth:C,strideHeight:N,strideWidth:I}=n,A=y-1-n.padInfo.top,E=x-1-n.padInfo.left,T=S/w;for(let t=0;t<b;++t)for(let e=0;e<w;++e)for(let n=0;n<v;++n){const r=n-A,s=Math.max(0,Math.ceil(r/N)),b=Math.min(k,(y+r)/N);for(let w=0;w<O;++w){const v=w-E,O=Math.max(0,Math.ceil(v/I)),S=Math.min(C,(x+v)/I);let k=0;for(let n=s;n<b;++n){const s=n*N-r;for(let r=O;r<S;++r){const a=c*t+h*n+d*r,i=f*(y-1-s)+m*(x-1-(r*I-v))+g*e;for(let t=0;t<T;++t){k+=l[a+(e*T+t)]*p[i+t]}}}a[i*t+o*n+u*w+e]=k}}return r.toTensor()}depthwiseConv2DDerFilter(t,e,n){_s([t,e],"depthwiseConv2DDerFilter");const r=n.strideHeight,a=n.strideWidth,i=n.filterHeight,o=n.filterWidth,u=s.buffer(n.filterShape,"float32"),l=n.padInfo.left,c=n.padInfo.top,h=n.outChannels/n.inChannels,d=this.bufferSync(t),p=this.bufferSync(e);for(let t=0;t<i;++t){const e=Math.max(0,Math.ceil((c-t)/r)),s=Math.min(n.outHeight,(n.inHeight+c-t)/r);for(let i=0;i<o;++i){const o=Math.max(0,Math.ceil((l-i)/a)),f=Math.min(n.outWidth,(n.inWidth+l-i)/a);for(let m=0;m<n.outChannels;++m){const g=Math.trunc(m/h),b=m%h;let y=0;for(let u=0;u<n.batchSize;++u)for(let n=e;n<s;++n){const e=t+n*r-c;for(let t=o;t<f;++t){const r=i+t*a-l;y+=d.get(u,e,r,g)*p.get(u,n,t,m)}}u.set(y,t,i,g,b)}}}return u.toTensor()}tile(t,e){return _s(t,"tile"),Bs(this.bufferSync(t),e)}pad(t,e,n){_s(t,"pad");const r=e.map((e,n)=>e[0]+t.shape[n]+e[1]),a=e.map(t=>t[0]),i=this.bufferSync(t),o=s.buffer(r,t.dtype);0!==n&&o.values.fill(n);for(let e=0;e<t.size;e++){const t=i.indexToLoc(e),n=t.map((t,e)=>t+a[e]);o.set(i.get(...t),...n)}return o.toTensor()}gather(t,e,n){_s([t,e],"gather");const r=t.shape.slice(),a=this.readSync(e.dataId);r[n]=a.length;const i=s.buffer(r,t.dtype),o=this.bufferSync(t);for(let t=0;t<i.size;++t){const e=i.indexToLoc(t),r=e.slice();r[n]=a[e[n]];const s=o.locToIndex(r);i.values[t]=o.values[s]}return i.toTensor()}batchToSpaceND(t,e,n){_s([t],"batchToSpaceND");const r=e.reduce((t,e)=>t*e),a=s.backend_util.getReshaped(t.shape,e,r),i=s.backend_util.getPermuted(a.length,e.length),o=s.backend_util.getReshapedPermuted(t.shape,e,r),u=s.backend_util.getSliceBeginCoords(n,e.length),l=s.backend_util.getSliceSize(o,n,e.length);return s.transpose(t.reshape(a),i).reshape(o).slice(u,l)}spaceToBatchND(t,e,n){_s([t],"spaceToBatchND");const r=e.reduce((t,e)=>t*e),a=[[0,0]];a.push(...n);for(let n=1+e.length;n<t.shape.length;++n)a.push([0,0]);const i=t.pad(a),o=s.backend_util.getReshaped(i.shape,e,r,!1),u=s.backend_util.getPermuted(o.length,e.length,!1),l=s.backend_util.getReshapedPermuted(i.shape,e,r,!1);return s.transpose(i.reshape(o),u).reshape(l)}maxPool(t,e){_s(t,"maxPool");return Fs(this.readSync(t.dataId),t.shape,t.dtype,t.strides,e,"max").toTensor()}maxPoolBackprop(t,e,n,r){_s([e,n],"maxPoolBackprop");const a=this.readSync(e.dataId),i=Object(s.buffer)(r.outShape,e.dtype,Ms(a,e.shape,e.dtype,r).values),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=d-1-r.padInfo.left,f=h-1-r.padInfo.top,m=s.buffer(e.shape,"float32"),g=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inHeight;++n)for(let s=0;s<r.inWidth;++s){const a=n-f,b=s-p;let y=0;for(let n=0;n<h;n+=l){const s=(a+n)/o;if(!(s<0||s>=r.outHeight||Math.floor(s)!==s))for(let a=0;a<d;a+=c){const o=(b+a)/u;if(o<0||o>=r.outWidth||Math.floor(o)!==o)continue;const l=h*d-1-i.get(t,s,o,e)===n*d+a?1:0;if(0===l)continue;y+=g.get(t,s,o,e)*l}}m.set(y,t,n,s,e)}return m.toTensor()}avgPoolBackprop(t,e,n){_s([t,e],"avgPoolBackprop");const r=n.strideHeight,a=n.strideWidth,i=n.filterHeight,o=n.filterWidth,u=n.dilationHeight,l=n.dilationWidth,c=n.effectiveFilterHeight,h=n.effectiveFilterWidth,d=h-1-n.padInfo.left,p=c-1-n.padInfo.top,f=s.buffer(e.shape,"float32"),m=1/(i*o),g=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let s=0;s<n.inHeight;++s)for(let i=0;i<n.inWidth;++i){const o=s-p,b=i-d;let y=0;for(let s=0;s<c;s+=u){const i=(o+s)/r;if(!(i<0||i>=n.outHeight||Math.floor(i)!==i))for(let r=0;r<h;r+=l){const s=(b+r)/a;if(s<0||s>=n.outWidth||Math.floor(s)!==s)continue;y+=g.get(t,i,s,e)}}f.set(y*m,t,s,i,e)}return f.toTensor()}pool3d(t,e,n){_s(t,"pool3d");const r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left,g="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=this.readSync(t.dataId),y=s.buffer(e.outShape,t.dtype),x=y.values,w=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[2]*e.outShape[3]*e.outShape[4],O=e.outShape[3]*e.outShape[4],S=e.outShape[4];for(let s=0;s<e.batchSize;++s){const y=s*w,k=s*t.strides[0];for(let s=0;s<e.inChannels;++s)for(let w=0;w<e.outDepth;++w){const C=w*r-p;let N=C;for(;N<0;)N+=o;const I=Math.min(e.inDepth,c+C),A=y+w*v;for(let r=0;r<e.outHeight;++r){const c=r*a-f;let p=c;for(;p<0;)p+=u;const y=Math.min(e.inHeight,h+c),w=A+r*O;for(let r=0;r<e.outWidth;++r){const a=r*i-m;let c=a;for(;c<0;)c+=l;const h=Math.min(e.inWidth,d+a),f=w+r*S;let v=g,O=0,C=0;for(let e=N;e<I;e+=o){const r=k+e*t.strides[1];for(let e=p;e<y;e+=u){const a=r+e*t.strides[2];for(let e=c;e<h;e+=l){const r=b[a+e*t.strides[3]+s];if("max"===n&&r>v?v=r:"avg"===n&&(O+=r,C++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}x[f+s]="avg"===n?O/C:v}}}}return y.toTensor()}avgPool3d(t,e){return _s(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){_s([t,e],"avgPool3dBackprop");const r=n.strideDepth,a=n.strideHeight,i=n.strideWidth,o=n.filterDepth,u=n.filterHeight,l=n.filterWidth,c=n.dilationDepth,h=n.dilationHeight,d=n.dilationWidth,p=n.effectiveFilterDepth,f=n.effectiveFilterHeight,m=n.effectiveFilterWidth,g=p-1-n.padInfo.front,b=m-1-n.padInfo.left,y=f-1-n.padInfo.top,x=s.buffer(e.shape,"float32"),w=1/(o*u*l),v=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let s=0;s<n.inDepth;++s)for(let o=0;o<n.inHeight;++o)for(let u=0;u<n.inWidth;++u){const l=s-g,O=o-y,S=u-b;let k=0;for(let s=0;s<p;s+=c){const o=(l+s)/r;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let r=0;r<f;r+=h){const s=(O+r)/a;if(!(s<0||s>=n.outHeight||Math.floor(s)!==s))for(let r=0;r<m;r+=d){const a=(S+r)/i;if(a<0||a>=n.outWidth||Math.floor(a)!==a)continue;k+=v.get(t,o,s,a,e)}}}x.set(k*w,t,s,o,u,e)}return x.toTensor()}maxPool3d(t,e){return _s(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=s.buffer(e.outShape,"int32"),r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left,g=this.bufferSync(t);for(let t=0;t<e.batchSize;++t)for(let s=0;s<e.inChannels;++s)for(let b=0;b<e.outDepth;++b){const y=b*r-p;let x=y;for(;x<0;)x+=o;const w=Math.min(e.inDepth,c+y);for(let r=0;r<e.outHeight;++r){const c=r*a-f;let p=c;for(;p<0;)p+=u;const v=Math.min(e.inHeight,h+c);for(let a=0;a<e.outWidth;++a){const f=a*i-m;let O=f;for(;O<0;)O+=l;const S=Math.min(e.inWidth,d+f);let k=Number.NEGATIVE_INFINITY,C=-1;for(let e=x;e<w;e+=o){const n=e-y;for(let r=p;r<v;r+=u){const a=r-c;for(let i=O;i<S;i+=l){const o=i-f,u=g.get(t,e,r,i,s);u>=k&&(k=u,C=n*h*d+a*h+o)}}}n.set(C,t,b,r,a,s)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){_s([e,n],"maxPool3dBackprop");const a=this.maxPool3dPositions(e,r),i=r.strideDepth,o=r.strideHeight,u=r.strideWidth,l=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=d-1-r.padInfo.front,g=f-1-r.padInfo.left,b=p-1-r.padInfo.top,y=s.buffer(e.shape,"float32"),x=this.bufferSync(a),w=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inDepth;++n)for(let s=0;s<r.inHeight;++s)for(let a=0;a<r.inWidth;++a){const v=n-m,O=s-b,S=a-g;let k=0;for(let n=0;n<d;n+=l){const s=(v+n)/i;if(!(s<0||s>=r.outDepth||Math.floor(s)!==s))for(let a=0;a<p;a+=c){const i=(O+a)/o;if(!(i<0||i>=r.outHeight||Math.floor(i)!==i))for(let o=0;o<f;o+=h){const l=(S+o)/u;if(l<0||l>=r.outWidth||Math.floor(l)!==l)continue;const c=d*p*f-1-x.get(t,s,i,l,e)===n*p*f+a*f+o?1:0;if(0===c)continue;k+=w.get(t,s,i,l,e)*c}}}y.set(k,t,n,s,a,e)}return y.toTensor()}cast(t,e){return s.backend_util.castTensor(t,e,this)}reshape(t,e){return s.backend_util.reshapeTensor(t,e)}avgPool(t,e){_s(t,"avgPool"),_s(t,"maxPool");return Fs(this.readSync(t.dataId),t.shape,t.dtype,t.strides,e,"avg").toTensor().toFloat()}resizeBilinear(t,e,n,r){_s(t,"resizeBilinear");const[a,i,o,u]=t.shape,l=this.readSync(t.dataId),c=new Float32Array(s.util.sizeFromShape([a,e,n,u])),h=[r&&e>1?i-1:i,r&&n>1?o-1:o],d=[r&&e>1?e-1:e,r&&n>1?n-1:n];let p=0;const f=h[0]/d[0],m=h[1]/d[1];for(let r=0;r<a;r++)for(let s=0;s<e;s++){const e=f*s,a=Math.floor(e),h=e-a,d=Math.min(i-1,Math.ceil(e)),g=r*t.strides[0]+a*t.strides[1],b=r*t.strides[0]+d*t.strides[1];for(let e=0;e<n;e++){const n=m*e,r=Math.floor(n),s=n-r,a=Math.min(o-1,Math.ceil(n)),i=g+r*t.strides[2],d=b+r*t.strides[2],f=g+a*t.strides[2],y=b+a*t.strides[2];for(let t=0;t<u;t++){const e=l[i+t],n=l[d+t],r=e+(l[f+t]-e)*s,a=r+(n+(l[y+t]-n)*s-r)*h;c[p++]=a}}}return s.tensor(c,[a,e,n,u])}resizeBilinearBackprop(t,e,n){_s([t,e],"resizeBilinearBackprop");const[r,a,i,o]=e.shape,[,u,l]=t.shape,c=new Float32Array(r*a*i*o),h=[n&&u>1?a-1:a,n&&l>1?i-1:i],d=[n&&u>1?u-1:u,n&&l>1?l-1:l],p=h[0]/d[0],f=h[1]/d[1],m=this.readSync(t.dataId);let g=0;for(let t=0;t<r;t++){const n=t*e.strides[0];for(let t=0;t<u;t++){const r=t*p,s=Math.floor(r),u=Math.min(Math.ceil(r),a-1),h=n+s*e.strides[1],d=n+u*e.strides[1],b=r-s,y=1-b;for(let t=0;t<l;t++){const n=t*f,r=Math.floor(n),s=Math.min(Math.ceil(n),i-1),a=n-r,u=1-a,l=h+r*e.strides[2],p=h+s*e.strides[2],x=d+r*e.strides[2],w=d+s*e.strides[2],v=y*u,O=y*a,S=b*u,k=b*a;for(let t=0;t<o;t++){const e=m[g++];c[l+t]+=e*v,c[p+t]+=e*O,c[x+t]+=e*S,c[w+t]+=e*k}}}}return s.tensor4d(c,[r,i,a,o],e.dtype)}resizeNearestNeighbor(t,e,n,r){_s(t,"resizeNearestNeighbor");const[a,i,o,u]=t.shape,l=this.readSync(t.dataId),c=new Float32Array(a*e*n*u),h=[r&&e>1?i-1:i,r&&n>1?o-1:o],d=[r&&e>1?e-1:e,r&&n>1?n-1:n],p=h[0]/d[0],f=h[1]/d[1];let m=0;for(let s=0;s<a;s++){const a=s*t.strides[0];for(let s=0;s<e;s++){const e=p*s,h=a+Math.min(i-1,r?Math.round(e):Math.floor(e))*t.strides[1];for(let e=0;e<n;e++){const n=f*e,s=h+Math.min(o-1,r?Math.round(n):Math.floor(n))*t.strides[2];for(let t=0;t<u;t++){const e=l[s+t];c[m++]=e}}}}return s.tensor(c,[a,e,n,u],t.dtype)}resizeNearestNeighborBackprop(t,e,n){_s([t,e],"resizeNearestNeighborBackprop");const[r,a,i,o]=e.shape,[,u,l]=t.shape,c=new Float32Array(r*a*i*o),h=this.readSync(t.dataId),d=[n&&u>1?a-1:a,n&&l>1?i-1:i],p=[n&&u>1?u-1:u,n&&l>1?l-1:l],f=d[0]/p[0],m=d[1]/p[1],g=1/f,b=1/m,y=2*Math.ceil(g)+2,x=2*Math.ceil(b)+2;for(let s=0;s<r;s++){const r=s*e.strides[0];for(let s=0;s<a;s++){const d=r+s*e.strides[1],p=Math.floor(s*g),w=Math.floor(p-y/2);for(let p=0;p<i;p++){const g=d+p*e.strides[2],v=Math.floor(p*b),O=Math.floor(v-x/2);for(let e=0;e<o;e++){let o=0;for(let c=0;c<y;c++){const d=c+w;if(d<0||d>=u)continue;const g=r+d*t.strides[1],b=d*f;if(s===Math.min(a-1,n?Math.round(b):Math.floor(b)))for(let r=0;r<x;r++){const s=r+O;if(s<0||s>=l)continue;const a=g+s*t.strides[2],u=s*m;p===Math.min(i-1,n?Math.round(u):Math.floor(u))&&(o+=h[a+e])}}c[g+e]=o}}}}return s.tensor4d(c,e.shape,e.dtype)}batchNorm(t,e,n,r,a,i){_s([t,e,n,a,r],"batchNorm");const o=this.readSync(t.dataId),u=this.readSync(e.dataId),l=this.readSync(n.dataId),c=a?this.readSync(a.dataId):new Float32Array([1]),h=r?this.readSync(r.dataId):new Float32Array([0]),d=new Float32Array(o.length),p=h.length,f=c.length,m=l.length,g=u.length;let b=0,y=0,x=0,w=0;for(let t=0;t<o.length;++t)d[t]=h[b++]+(o[t]-u[y++])*c[x++]/Math.sqrt(l[w++]+i),b>=p&&(b=0),y>=g&&(y=0),x>=f&&(x=0),w>=m&&(w=0);return s.tensor4d(d,t.shape)}localResponseNormalization4D(t,e,n,r,a){_s(t,"localResponseNormalization4D");const i=t.shape[3],o=i-1,u=this.readSync(t.dataId),l=t.size,c=new Float32Array(l);function h(t){const n=t%i;let r=t-n+Math.max(0,n-e);const s=t-n+Math.min(n+e,o);let a=0;for(;r<=s;r++){const t=u[r];a+=t*t}return a}for(let t=0;t<l;t++){const e=h(t),s=u[t]*Math.pow(n+r*e,-a);c[t]=s}return s.tensor4d(c,t.shape)}LRNGrad(t,e,n,r,a,i,o){_s(t,"LRNGrad");const u=t.shape[3],l=this.readSync(t.dataId),c=this.readSync(e.dataId),h=this.readSync(n.dataId),d=new Float32Array(t.size),p=t.size;for(let t=0;t<p;t++){const e=t%u,n=t-e+Math.max(0,e-r),s=t-e+Math.min(u,e+r+1);let p=0;for(let t=n;t<s;t++)p+=Math.pow(c[t],2);p=i*p+a;for(let e=n;e<s;e++){let n=-2*i*o*c[e]*h[t]/p;t===e&&(n+=Math.pow(p,-o)),n*=l[t],d[e]+=n}}return s.tensor4d(d,t.shape)}multinomial(t,e,n,r){_s(t,"multinomial");const a=e?t:s.softmax(t),i=a.shape[0],o=a.shape[1],u=s.zeros([i,n],"int32"),l=this.readSync(u.dataId),c=this.readSync(a.dataId);for(let t=0;t<i;++t){const e=t*o,s=new Float32Array(o-1);s[0]=c[e];for(let t=1;t<s.length;++t)s[t]=s[t-1]+c[e+t];const a=Ns.alea(r.toString()),i=t*n;for(let t=0;t<n;++t){const e=a();l[i+t]=s.length;for(let n=0;n<s.length;n++)if(e<s[n]){l[i+t]=n;break}}}return u}oneHot(t,e,n,r){_s(t,"oneHot");const a=new Float32Array(t.size*e);a.fill(r);const i=this.readSync(t.dataId);for(let r=0;r<t.size;++r)i[r]>=0&&i[r]<e&&(a[r*e+i[r]]=n);return s.tensor2d(a,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,s){_s(t,"nonMaxSuppression");const a=this.readSync(t.dataId),i=this.readSync(e.dataId);return zs(a,i,n,r,s)}fft(t){return this.fftBatch(t,!1)}ifft(t){return this.fftBatch(t,!0)}fftBatch(t,e){const n=t.shape[0],r=t.shape[1],a=s.buffer(t.shape,"float32"),i=s.buffer(t.shape,"float32"),o=s.real(t).as2D(n,r),u=s.imag(t).as2D(n,r);for(let t=0;t<n;t++){const n=o.slice([t,0],[1,r]),l=u.slice([t,0],[1,r]),c=s.complex(n,l),h=this.readSync(this.fftImpl(c,e).dataId);for(let e=0;e<r;e++){const n=s.backend_util.getComplexWithIndex(h,e);a.values[t*r+e]=n.real,i.values[t*r+e]=n.imag}}return s.complex(a.toTensor(),i.toTensor()).as2D(n,r)}fftImpl(t,e){const n=t.as1D(),r=n.size;if(this.isExponentOf2(r)){let a=this.fftRadix2(n,r,e).as2D(t.shape[0],t.shape[1]);return e&&(a=s.complex(s.real(a).div(s.scalar(r)),s.imag(a).div(s.scalar(r)))),a}{const n=this.readSync(t.dataId),a=this.fourierTransformByMatmul(n,r,e),i=s.backend_util.splitRealAndImagArrays(a);return s.complex(i.real,i.imag).as2D(t.shape[0],t.shape[1])}}isExponentOf2(t){return 0==(t&t-1)}fftRadix2(t,e,n){if(1===e)return t;const r=this.readSync(t.dataId),a=e/2,i=s.backend_util.complexWithEvenIndex(r);let o=s.complex(i.real,i.imag).as1D();const u=s.backend_util.complexWithOddIndex(r);let l=s.complex(u.real,u.imag).as1D();o=this.fftRadix2(o,a,n),l=this.fftRadix2(l,a,n);const c=s.backend_util.exponents(e,n),h=s.complex(c.real,c.imag).mul(l),d=o.add(h),p=o.sub(h),f=s.real(d).concat(s.real(p)),m=s.imag(d).concat(s.imag(p));return s.complex(f,m).as1D()}fourierTransformByMatmul(t,e,n){const r=new Float32Array(2*e);for(let a=0;a<e;a++){let i=0,o=0;for(let r=0;r<e;r++){const u=s.backend_util.exponent(a*r,e,n),l=s.backend_util.getComplexWithIndex(t,r);i+=l.real*u.real-l.imag*u.imag,o+=l.real*u.imag+l.imag*u.real}n&&(i/=e,o/=e),s.backend_util.assignToTypedArray(r,i,o,a)}return r}depthToSpace(t,e,n){s.util.assert("NHWC"===n,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n),s.util.assert(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e);const r=t.shape[0],a=t.shape[1],i=t.shape[2],o=t.shape[3],u=a*e,l=i*e,c=o/(e*e),h=this.readSync(t.dataId),d=new Float32Array(r*u*l*c);let p=0;for(let t=0;t<r;++t)for(let n=0;n<u;++n){const r=Math.floor(n/e),s=n%e;for(let n=0;n<l;++n){const u=Math.floor(n/e),l=(s*e+n%e)*c;for(let e=0;e<c;++e){const n=e+l+o*(u+i*(r+a*t));d[p++]=h[n]}}}return s.tensor4d(d,[r,u,l,c])}broadcastedBinaryOp(t,e,n,r){const a=s.backend_util.assertAndGetBroadcastShape(t.shape,e.shape),i=s.buffer(a,n),o=this.readSync(t.dataId),u=this.readSync(e.dataId),l=s.backend_util.getBroadcastDims(t.shape,a),c=s.backend_util.getBroadcastDims(e.shape,a),h=i.values;if(l.length+c.length===0)for(let t=0;t<h.length;++t)h[t]=r(o[t%o.length],u[t%u.length]);else{const n=this.bufferSync(t),s=this.bufferSync(e);for(let a=0;a<h.length;++a){const d=i.indexToLoc(a),p=d.slice(-t.rank);l.forEach(t=>p[t]=0);const f=n.locToIndex(p),m=d.slice(-e.rank);c.forEach(t=>m[t]=0);const g=s.locToIndex(m);h[a]=r(o[f],u[g])}}return i.toTensor()}broadcastedBinaryComplexOp(t,e,n){const r=s.backend_util.assertAndGetBroadcastShape(t.shape,e.shape),a=s.buffer(r,"float32"),i=s.buffer(r,"float32"),o=this.readSync(t.dataId),u=this.readSync(e.dataId),l=s.backend_util.getBroadcastDims(t.shape,r),c=s.backend_util.getBroadcastDims(e.shape,r),h=a.values,d=i.values;if(l.length+c.length===0)for(let t=0;t<h.length;t++){const e=t%o.length,r=t%u.length,s=n(o[2*e],o[2*e+1],u[2*r],u[2*r+1]);h[t]=s.real,d[t]=s.imag}else{const r=this.bufferSync(this.data.get(t.dataId).complexTensors.real),s=this.bufferSync(this.data.get(e.dataId).complexTensors.real);for(let i=0;i<h.length;i++){const p=a.indexToLoc(i),f=p.slice(-t.rank);l.forEach(t=>f[t]=0);const m=r.locToIndex(f),g=p.slice(-e.rank);c.forEach(t=>g[t]=0);const b=s.locToIndex(g),y=n(o[2*m],o[2*m+1],u[2*b],u[2*b+1]);h[i]=y.real,d[i]=y.imag}}return this.complex(a.toTensor(),i.toTensor())}split(t,e,n){return Ls(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,a,i){const[o,u,l,c]=t.shape,h=e.shape[0],[d,p]=r,f=s.buffer([h,d,p,c],"float32"),m=this.readSync(e.dataId),g=this.readSync(n.dataId),b=this.readSync(t.dataId),y=t.strides,x=f.strides;for(let t=0;t<h;t++){const e=4*t,n=m[e],r=m[e+1],s=m[e+2],h=m[e+3],w=g[t];if(w>=o)continue;const v=d>1?(s-n)*(u-1)/(d-1):0,O=p>1?(h-r)*(l-1)/(p-1):0;for(let e=0;e<d;e++){const o=d>1?n*(u-1)+e*v:.5*(n+s)*(u-1);if(o<0||o>u-1)for(let n=0;n<p;n++)for(let r=0;r<c;r++){const s=r+n*x[2]+e*x[1]+t*x[0];f.values[s]=i}else if("bilinear"===a){const n=Math.floor(o),s=Math.ceil(o),a=o-n;for(let o=0;o<p;o++){const u=p>1?r*(l-1)+o*O:.5*(r+h)*(l-1);if(u<0||u>l-1){for(let n=0;n<c;n++){const r=n+o*x[2]+e*x[1]+t*x[0];f.values[r]=i}continue}const d=Math.floor(u),m=Math.ceil(u),g=u-d;for(let r=0;r<c;r++){let i=r+d*y[2]+n*y[1]+w*y[0];const u=b[i];i=r+m*y[2]+n*y[1]+w*y[0];const l=b[i];i=r+d*y[2]+s*y[1]+w*y[0];const c=b[i];i=r+m*y[2]+s*y[1]+w*y[0];const h=u+(l-u)*g,p=c+(b[i]-c)*g;i=r+o*x[2]+e*x[1]+t*x[0],f.values[i]=h+(p-h)*a}}}else for(let n=0;n<p;++n){const s=p>1?r*(l-1)+n*O:.5*(r+h)*(l-1);if(s<0||s>l-1){for(let r=0;r<c;r++){const s=r+n*x[2]+e*x[1]+t*x[0];f.values[s]=i}continue}const a=Math.round(s),u=Math.round(o);for(let r=0;r<c;r++){const s=r+a*y[2]+u*y[1]+w*y[0],i=r+n*x[2]+e*x[1]+t*x[0];f.values[i]=b[s]}}}}return f.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:a,numUpdates:i,sliceSize:o,strides:u,outputSize:l}=s.backend_util.calculateShapes(e,t,n);return this.scatter(t,e,n,l,o,i,a,u,r,!1)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[a,i,o,u]=s.backend_util.prepareAndValidate(t,e);if(0===i)return s.tensor([],a,t.dtype);const l=new s.TensorBuffer([i,o],t.dtype),c=this.readSync(e.dataId),h=this.readSync(t.dataId);for(let e=0;e<i;e++){const n=[];let s=0;for(let t=0;t<r;t++){const a=c[e*r+t];s+=a*u[t],n.push(a)}if(s<0||s>=t.size/o)throw new Error(`Invalid indices: ${n} does not index into ${t.shape}`);for(let t=0;t<o;t++)l.values[e*o+t]=h[s*o+t]}return l.toTensor().reshape(a)}scatterND(t,e,n){const{sliceRank:r,numUpdates:a,sliceSize:i,strides:o,outputSize:u}=s.backend_util.calculateShapes(e,t,n),l=s.scalar(0);return this.scatter(t,e,n,u,i,a,r,o,l,!0)}fill(t,e,n){n=n||s.util.inferDtype(e);const r=s.util.getArrayFromDType(n,s.util.sizeFromShape(t));return r.fill(e),Object(s.engine)().makeTensor(r,t,n,this)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(t.shape,1,t.dtype)}zerosLike(t){const e=s.util.getArrayFromDType(t.dtype,s.util.sizeFromShape(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return s.backend_util.linspaceImpl(t,e,n)}scatter(t,e,n,r,a,i,o,u,l,c){const h=[r/a,a],d=this.readSync(t.dataId),p=this.readSync(e.dataId);if(0===r)return s.tensor([],n,e.dtype);const f=new s.TensorBuffer(h,e.dtype);f.values.fill(this.readSync(l.dataId)[0]);for(let t=0;t<i;t++){const s=[];let i=0;for(let e=0;e<o;e++){const n=d[t*o+e];s.push(n),i+=n*u[e]}if(i<0||i>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)c?f.values[i*a+n]+=p[t*a+n]:f.values[i*a+n]=0===e.rank?p[0]:p[t*a+n]}return f.toTensor().reshape(n)}}
/** @license See the LICENSE file. */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qs(t,e){return{kernelName:t,backendName:"cpu",kernelFunc:({inputs:n,backend:r})=>{const{a:s,b:a}=n,i=r;_s([s,a],t);const o=i.data.get(s.dataId).values,u=i.data.get(a.dataId).values,[l,c]=e(s.shape,a.shape,o,u,s.dtype);return{dataId:i.write(l,c,s.dtype),shape:c,dtype:s.dtype}}}}function Gs(t){return(e,n,r,a,i)=>{const o=s.backend_util.assertAndGetBroadcastShape(e,n),u=o.length,l=s.util.computeStrides(o),c=s.util.sizeFromShape(o),h=s.util.getTypedArrayFromDType(i,c),d=e.length,p=n.length,f=s.util.computeStrides(e),m=s.util.computeStrides(n),g=s.backend_util.getBroadcastDims(e,o),b=s.backend_util.getBroadcastDims(n,o);if(g.length+b.length===0)for(let e=0;e<h.length;++e)h[e]=t(r[e%r.length],a[e%a.length]);else for(let e=0;e<h.length;++e){const n=s.util.indexToLoc(e,u,l),i=n.slice(-d);g.forEach(t=>i[t]=0);const o=s.util.locToIndex(i,d,f),c=n.slice(-p);b.forEach(t=>c[t]=0);const y=s.util.locToIndex(c,p,m);h[e]=t(r[o],a[y])}return[h,o]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hs=Gs((t,e)=>t/e),Ks=qs(s.Div,Hs),Xs={kernelName:s.Max,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:a}=e,i=n;let o=r.shape;const u=o.length;let l=s.util.parseAxisParam(a,o);const c=s.backend_util.getAxesPermutation(l,u);let h=i.data.get(r.dataId).values;if(null!=c){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=o[c[e]];h=Ds(h,o,r.dtype,c,t),l=s.backend_util.getInnerMostAxes(l.length,u),o=t}_s(r,"max"),s.backend_util.assertAxesAreInnerMostDims("max",l,u);const[d,p]=s.backend_util.computeOutAndReduceShapes(o,l),f=js(h,s.util.sizeFromShape(p),d,r.dtype);return{dataId:i.write(f,d,r.dtype),shape:d,dtype:r.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ys={kernelName:s.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:a,strides:i,pad:o,includeBatchInIndex:u}=e,l=n;_s(r,"MaxPoolWithArgmax");const c=l.data.get(r.dataId).values,h=s.backend_util.computePool2DInfo(r.shape,a,i,[1,1],o),[d,p]=
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,a){const i=Fs(t,0,n,s.util.computeStrides(e),a,"max"),o=Ms(t,e,n,a,!0,r);return[i.values,o.values]}(c,r.shape,r.dtype,u,h),f=l.write(d,h.outShape,r.dtype),m=l.write(p,h.outShape,r.dtype);return[{dataId:f,shape:h.outShape,dtype:r.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}},Js=s.kernel_impls.nonMaxSuppressionV5,Zs={kernelName:s.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=e;_s(r,"NonMaxSuppressionWithScore");const c=l.data.get(r.dataId).values,h=l.data.get(s.dataId).values,d=a,p=i,f=o,m=u,{selectedIndices:g,selectedScores:b}=Js(c,h,d,p,f,m);return[g,b]}},Qs={kernelName:s.Square,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;_s(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];a[t]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ta=Gs((t,e)=>{const n=t-e;return n*n}),ea=[Zs,Qs,qs(s.SquaredDifference,ta),Ks,{kernelName:s.Transpose,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,a=n;_s(r,"transpose");const i=r.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=r.shape[s[t]];const u=Ds(a.data.get(r.dataId).values,r.shape,r.dtype,s,o);return{dataId:a.write(u,o,r.dtype),shape:o,dtype:r.dtype}}},Ys,Xs];
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const t of ea)Object(s.registerKernel)(t);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(s.registerBackend)("cpu",()=>new Us,1);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const na={},ra={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function sa(t){t in na||(na[t]=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(e.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete na[t]},!1),1===t)return e.getContext("webgl",ra)||e.getContext("experimental-webgl",ra);return e.getContext("webgl2",ra)}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t));const e=na[t];return e.isContextLost()?(delete na[t],sa(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),na[t])}var aa,ia,oa;function ua(t,e){return[e,t]}function la(t){const e=s.util.sizeFromShape(t),n=Math.ceil(e/4);return s.util.sizeToSquarishShape(n)}function ca(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function ha(t,e){const n=t;let r,a,i,o,u,l,c,h,d,p;return 2===Object(s.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,i=n.RGBA16F,o=n.RGBA32F,u=n.RED,c=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT):(r=t.RGBA,a=t.RGBA,i=t.RGBA,o=n.RGBA,u=t.RGBA,c=4,h=4,d=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),l=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function da(t,e,n){const r=n();return e&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}(t,e))}(t),r}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(aa||(aa={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(ia||(ia={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(oa||(oa={}));function pa(t){return!!(Object(s.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function fa(t,e,n){return Sa(t,e,()=>t.getExtension(n),'Extension "'+n+'" not supported on this browser.')}function ma(t,e,n){const r=Sa(t,e,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(da(t,e,()=>t.shaderSource(r,n)),da(t,e,()=>t.compileShader(r)),!1===t.getShaderParameter(r,t.COMPILE_STATUS))throw function(t,e){const n=ga.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);const r=+n[1],a=t.split("\n"),i=a.length.toString().length+2,o=a.map((t,e)=>s.util.rightPad((e+1).toString(),i)+t);let u=0;for(let t=0;t<o.length;t++)u=Math.max(o[t].length,u);const l=o.slice(0,r-1),c=o.slice(r-1,r),h=o.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+s.util.rightPad(c[0],u),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(n,t.getShaderInfoLog(r)),new Error("Failed to compile fragment shader.");return r}const ga=/ERROR: [0-9]+:([0-9]+):/g;function ba(t,e,n){if(da(t,e,()=>t.validateProgram(n)),!1===t.getProgramParameter(n,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(n)),new Error("Shader program validation failed.")}function ya(t,e,n,r,s,a,i,o){const u=t.getAttribLocation(n,r);return-1!==u&&(da(t,e,()=>t.bindBuffer(t.ARRAY_BUFFER,s)),da(t,e,()=>t.vertexAttribPointer(u,a,t.FLOAT,!1,i,o)),da(t,e,()=>t.enableVertexAttribArray(u)),!0)}function xa(t,e,n,r,s,a){da(t,e,()=>function(t,e,n,r){ka(t,r),da(t,e,()=>t.activeTexture(t.TEXTURE0+r)),da(t,e,()=>t.bindTexture(t.TEXTURE_2D,n))}(t,e,r,a)),da(t,e,()=>t.uniform1i(s,a))}function wa(t,e,n,r){da(t,e,()=>t.bindFramebuffer(t.FRAMEBUFFER,r)),da(t,e,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0))}function va(t,e,n){da(t,e,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),da(t,e,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Oa(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}(t,e))}function Sa(t,e,n,r){const s=da(t,e,()=>n());if(null==s)throw new Error(r);return s}function ka(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function Ca(t,e=2){return s.util.sizeFromShape(t.slice(0,t.length-e))}function Na(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Ia(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Ca(t),...Na(t)]),e}function Aa(t){return t%2==0}function Ea(t,e){if(t=t.slice(-2),e=e.slice(-2),s.util.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(Aa(n)&&Aa(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Aa(t[0])&&Aa(e[0])}let Ta,$a;function Ra(t,e){return null!=t.getExtension(e)}function ja(t){try{if(null!=sa(t))return!0}catch(t){return!1}return!1}function Da(t){if(0===t)return!1;const e=sa(t);if(1!==t){if(Ra(e,"EXT_color_buffer_float"))return _a(e);const t="EXT_color_buffer_half_float";if(Ra(e,t)){const n=e.getExtension(t);return function(t,e){const n=ha(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),a}(e,n)}return!1}if(!Ra(e,"OES_texture_float"))return!1;if(!Ra(e,"WEBGL_color_buffer_float"))return!1;return _a(e)}function _a(t){const e=ha(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Fa=Object(s.env)();Fa.registerFlag("HAS_WEBGL",()=>Fa.getNumber("WEBGL_VERSION")>0),Fa.registerFlag("WEBGL_VERSION",()=>ja(2)?2:ja(1)?1:0),Fa.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Fa.get("WEBGL_VERSION")),Fa.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Fa.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Fa.registerFlag("WEBGL_PACK",()=>Fa.getBool("HAS_WEBGL")),Fa.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Fa.getBool("WEBGL_PACK")),Fa.registerFlag("WEBGL_PACK_CLIP",()=>Fa.getBool("WEBGL_PACK")),Fa.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),Fa.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Fa.getBool("WEBGL_PACK")),Fa.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Fa.getBool("WEBGL_PACK")),Fa.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Fa.getBool("WEBGL_PACK")),Fa.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Fa.getBool("WEBGL_PACK")),Fa.registerFlag("WEBGL_PACK_REDUCE",()=>Fa.getBool("WEBGL_PACK")),Fa.registerFlag("WEBGL_LAZILY_UNPACK",()=>Fa.getBool("WEBGL_PACK")),Fa.registerFlag("WEBGL_CONV_IM2COL",()=>Fa.getBool("WEBGL_PACK")),Fa.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(t){if(null==Ta){const e=sa(t);Ta=e.getParameter(e.MAX_TEXTURE_SIZE)}return Ta}(Fa.getNumber("WEBGL_VERSION"))),Fa.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(t){if(null==$a){const e=sa(t);$a=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,$a)}(Fa.getNumber("WEBGL_VERSION"))),Fa.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=Fa.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=sa(t);return e=Ra(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Ra(n,"EXT_disjoint_timer_query")?1:0,e}(t)}),Fa.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Fa.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.device_util.isMobile()),Fa.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(t){if(0===t)return!1;const e=sa(t);if(1===t){if(!Ra(e,"OES_texture_float"))return!1}else if(!Ra(e,"EXT_color_buffer_float"))return!1;return _a(e)}(Fa.getNumber("WEBGL_VERSION"))),Fa.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Fa.getBool("WEBGL_FORCE_F16_TEXTURES")&&Fa.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Fa.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Da(Fa.getNumber("WEBGL_VERSION"))),Fa.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(t=Fa.getNumber("WEBGL_VERSION"))&&null!=sa(t).fenceSync;var t}),Fa.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Fa.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ma{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class za{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class La{constructor(t,e,n){this.variableNames=["A"];const r=t.windowSize,s=t.batchSize,a=t.inSize,i=Math.ceil(a/r);n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const o="max"===e?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${u};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ba(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function Pa(t,e){return 1===e?[t]:Ba(t,e)}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wa(){let t,e,n,r,a,i,o,u,l,c;return 2===Object(s.env)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",a="texture",i="outputColor",o="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",a="texture2D",i="gl_FragColor",o="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:a,output:i,defineOutput:o,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Va(t,e,n="index"){const r=s.util.computeStrides(e);return r.map((e,s)=>`${`int ${t[s]} = ${n} / ${e}`}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`).join("")}function Ua(t){const e=s.util.computeStrides(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const qa="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Ga}=s.backend_util;
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ha(t,e,n,r){const a=[];t.forEach(t=>{const e=s.util.sizeFromShape(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?a.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(a.push(`uniform sampler2D ${t.name};`),a.push(`uniform int offset${t.name};`))});const i=a.join("\n"),o=t.map(t=>function(t,e,n=!1){let r="";r+=n?Xa(t):Ka(t);const a=t.shapeInfo.logicalShape,i=e.logicalShape;a.length<=i.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=t.shapeInfo.logicalShape.length,o=e.logicalShape.length,u=Ga(t.shapeInfo.logicalShape,e.logicalShape),l=ri(o),c=o-i;let h;const d=["x","y","z","w","u","v"];h=0===i?"":o<2&&u.length>=1?"coords = 0;":u.map(t=>`coords.${d[t+c]} = 0;`).join("\n");let p="";p=o<2&&i>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+d[e+c]).join(", ");let f="return outputValue;";const m=1===s.util.sizeFromShape(t.shapeInfo.logicalShape),g=1===s.util.sizeFromShape(e.logicalShape);if(1!==i||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const t=i-2,e=i-1;u.indexOf(t)>-1&&u.indexOf(e)>-1?f="return vec4(outputValue.x);":u.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${r}(${p});\n      ${f}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=e.texShape,o=t.shapeInfo.texShape,u=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&u===l&&null==t.shapeInfo.flatOffset&&s.util.arraysEqual(o,i))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=ri(l),h=Ga(t.shapeInfo.logicalShape,e.logicalShape),d=l-u;let p;const f=["x","y","z","w","u","v"];p=0===u?"":l<2&&h.length>=1?"coords = 0;":h.map(t=>`coords.${f[t+d]} = 0;`).join("\n");let m="";m=l<2&&u>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+f[e+d]).join(", ");return`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${p}\n      return get${r}(${m});\n    }\n  `}(t,e));return r}(t,e,r)).join("\n"),u=e.texShape,l=Wa(),c=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let h,d,p=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Ya}\n    ${Ja}\n    ${Za}\n  `}(l);e.isPacked?(h=function(t,e){switch(t.length){case 0:return ti();case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(s.util.arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let a=s,i="",o="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],i=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+i,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,u),d=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(l)):(h=function(t,e){switch(t.length){case 0:return ti();case 1:return function(t,e){if(1===e[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `;if(1===e[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e);case 2:return function(t,e){if(s.util.arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `;if(1===t[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===t[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=Va(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=Va(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=Va(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=Va(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}}(e.logicalShape,u),d=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(p+=Qa);return[p,c,d,i,h,o,n].join("\n")}function Ka(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[a,i]=t.shapeInfo.texShape,o=ei(e);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${ni(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=ei(e);if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape;if(null!=a&&s.util.arraysEqual(e,a)){const t=a[0],e=a[1];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${e}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=s.util.squeezeShape(e),u=i;if(u.length<e.length){const e=si(t,u),n=["row","col"];return`\n      ${Ka(e)}\n      float ${r}(int row, int col) {\n        return ${r}(${ai(n,o)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${ni(t)}\n      }\n    `;const l=a[0],c=a[1],h=ei(n);if(1===c)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===l)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[1]*e[2],i=e[2],{newShape:o,keptDims:u}=s.util.squeezeShape(e),l=o;if(l.length<e.length){const e=si(t,l),n=["row","col","depth"];return`\n        ${Ka(e)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${ai(n,u)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${ni(t)}\n      }\n    `;const c=t.shapeInfo.texShape,h=c[0],d=c[1],p=t.shapeInfo.flatOffset;if(d===a&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(d===i&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const f=ei(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[3],i=e[2]*a,o=e[1]*i,{newShape:u,keptDims:l}=s.util.squeezeShape(e);if(u.length<e.length){const e=si(t,u),n=["row","col","depth","depth2"];return`\n      ${Ka(e)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${ai(n,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${ni(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=ei(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${f});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[4],i=e[3]*a,o=e[2]*i,u=e[1]*o,{newShape:l,keptDims:c}=s.util.squeezeShape(e);if(l.length<e.length){const e=si(t,l),n=["row","col","depth","depth2","depth3"];return`\n      ${Ka(e)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${ai(n,c)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${i}, ${a})) +\n          depth3;\n        ${ni(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=ei(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${i} +\n          depth2 * ${a} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:i}=s.util.squeezeShape(e);if(a.length<e.length){const e=si(t,a),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Ka(e)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${ai(n,i)});\n      }\n    `}const o=e[5],u=e[4]*o,l=e[3]*u,c=e[2]*l,h=e[1]*c;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${ni(t)}\n      }\n    `;const d=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],m=p[1];if(m===h&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const g=ei(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${g};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function Xa(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=Wa();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=Wa();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,i=a[0],o=a[1],u=Wa();if(null!=a&&s.util.arraysEqual(e,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(e[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=e.slice(1),s=[1,2],a=si(t,n),i=["b","row","col"];return`\n        ${Xa(a)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${ai(i,s)});\n        }\n      `}const i=a[0],o=a[1],u=Math.ceil(e[2]/2),l=u*Math.ceil(e[1]/2),c=Wa();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l}, ${u}, b, row, col);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],u=i[1],l=Math.ceil(e[n-1]/2);let c=l*Math.ceil(e[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],d=`b${t} * ${c} + `+d;const p=Wa();return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${p.texture2D}(${r}, uv);\n    }\n  `}(t)}}const Ya="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ja="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Za="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Qa="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function ti(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function ei(t){return"offset"+t}function ni(t){const e=t.name,n=s.util.sizeFromShape(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function ri(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function si(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function ai(t,e){return e.map(e=>t[e]).join(", ")}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ii{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s.util.assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=t[t.length-1],i=Math.ceil(a/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,u=o.length,l=ri(u),c=Pa("coords",u);let h,d;if(1===i){d=u+1;const t=ri(d);h=`\n        ${t} sourceLocR = ${t}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${t} sourceLocG = ${t}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${t} sourceLocA = ${t}(${c.join()}, 0);\n        --${c[u-1]};\n        ${t} sourceLocB = ${t}(${c.join()}, 0);\n        --${c[u-2]};`}else d=u,h=`\n        ${l} sourceLocR = coords;\n        ++${c[u-1]};\n        ${l} sourceLocG = coords;\n        ++${c[u-2]};\n        ${l} sourceLocA = coords;\n        --${c[u-1]};\n        ${l} sourceLocB = coords;\n        --${c[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(t=>"int "+t),g=Pa("sourceLocR",d-1).concat("inIdx.r"),b=Pa("sourceLocG",d-1).concat("inIdx.g"),y=Pa("sourceLocB",d-1).concat("inIdx.b"),x=Pa("sourceLocA",d-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,O=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,S=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${S}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${o[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${o[u-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${O};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${O};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oi{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=o-1-t.padInfo.top,c=u-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ui{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class li{constructor(t,e,n,r,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],s.backend_util.assertAndGetBroadcastShape(t,e),s.backend_util.assertAndGetBroadcastShape(t,n);let o="0.0";null!=r&&(s.backend_util.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=a&&(s.backend_util.assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ci{constructor(t,e,n,r,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s.backend_util.assertAndGetBroadcastShape(t,e),s.backend_util.assertAndGetBroadcastShape(t,n);let o="vec4(0.0)";null!=r&&(s.backend_util.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=a&&(s.backend_util.assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hi="return areal * breal - aimag * bimag;",di="return areal * bimag + aimag * breal;";class pi{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s.backend_util.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fi="return a + b;",mi="return a - b;",gi="return a * b;",bi="return (a < 0.) ? b * a : a;";class yi{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=s.backend_util.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xi="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class wi{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.backend_util.assertAndGetBroadcastShape(e,n);const a=this.outputShape.length;let i="";if(r)if(0===a||1===s.util.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(i=`\n          ${ri(a)} coords = getOutputCoords();\n        `,1===a)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=Pa("coords",a);i+=`\n            bool nextRowOutOfBounds =\n              (${t[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${t[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vi{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oi{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Si{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ki{constructor(t){this.outputShape=[],this.outputShape=s.backend_util.computeOutShape(t,1),this.variableNames=t.map((t,e)=>"T"+e);const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,a=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ci{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s.backend_util.computeOutShape(t,e);const n=this.outputShape,r=n.length,a=ri(r),i=Pa("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>"T"+e);const u=new Array(t.length-1);u[0]=t[0][e];for(let n=1;n<u.length;n++)u[n]=u[n-1]+t[n][e];const l=o[e],c=o.slice(-2),h=o.join();let d=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let t=1;t<u.length;t++){const e=u[t-1];d+=`\n        if (${l} < ${u[t]}  && ${l} >= ${u[t-1]}) {\n          return getChannel(\n            getT${t}(${Ni(o,l,e)}),\n            vec2(${Ni(c,l,e)}));\n        }`}const p=u.length,f=u[u.length-1];d+=`\n        return getChannel(\n          getT${p}(${Ni(o,l,f)}),\n          vec2(${Ni(c,l,f)}));`,this.userCode=`\n      float getValue(${o.map(t=>"int "+t)}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function Ni(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?`${t} - ${n}`:t).join()}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ii{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ai{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ei{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ti{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,u=n-1-t.padInfo.top,l=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $i{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ri{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ji{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,a=t.padInfo.left,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=4*Math.floor(t.inChannels/4),p=t.inChannels%4,f="channelsLast"===t.dataFormat,m=f?1:2,g=f?2:3,b=f?3:1;let y="",x="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class Di{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _i{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,a=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=t.outChannels/t.inChannels;let m="",g="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${l});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${a}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${g}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fi{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const a=t.inHeight,i=t.inWidth,o=t.padInfo.top,u=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,d=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let t=0;t<p;t++)for(let e=0;e<f;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<p;t++)for(let e=0;e<m;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*h};\n          xC = xCCorner + ${n*d};\n        `,1===c){if(n<f&&(g+=u%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<f)){const e=u%2==0?s.util.nearestLargerEven(d):d;d%2==0&&u%2==1||d%2!=0&&u%2!=1?(g+=`\n                  xCOffset = xC + ${u%2} + ${e};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,d>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,u%2==1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<p;t++)for(let e=0;e<f;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let b="",y="";n&&(b=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${y}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mi{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=t,[l]=e,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[y,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zi{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=t[t.length-1],a=n?"<":">";this.userCode=`\n      int getIndex(int i) {\n        ${n?`return ${s} -i - 1;`:"return i;"}\n      }\n\n      void main() {\n        ${ri(r)} coords = getOutputCoords();\n        int end = ${Li(r,"coords")};\n        float val = 0.0;\n        for (int i = ${s} - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx ${a} end) {\n            continue;\n          }\n          if (idx == end && ${e}) {\n            continue;\n          }\n          ${Li(r,"coords")} = idx;\n          val += getX(${function(t,e){if(1===t)return""+e;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function Li(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error(`Cumulative sum for rank ${t} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bi{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=aa.DENSE;const e=la(t),n=Wa();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Va(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pi{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=aa.DENSE;const e=la(t),n=Wa();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Va(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wi{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vi{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ui{constructor(t){this.variableNames=["A"],this.outTexUsage=ia.DOWNLOAD;const e=Wa();this.outputShape=t,this.userCode=`\n      ${qa}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qi{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ia.DOWNLOAD;const e=Wa();this.outputShape=t,this.userCode=`\n      ${qa}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gi{constructor(t,e,n=!1){this.variableNames=["A"];const r=Wa(),[s,a]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Ua(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n        \n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hi{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=Wa(),[s,a]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Ua(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ki="return real * expR - imag * expI;",Xi="return real * expI + imag * expR;";class Yi{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,a=n?r+".0":"1.0";this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${t}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ji{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zi{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const s=ri(this.rank),a=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let n=0;n<t.length;n++)n===e?s.push(`int(getIndices(${r[n]}))`):s.push(""+r[n]);return s.join()}(t,n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}class Qi{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=ri(e.length),s=ri(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function to(t,e){const n=Wa();return function(t,e,n){const r=Sa(t,e,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(da(t,e,()=>t.shaderSource(r,n)),da(t,e,()=>t.compileShader(r)),!1===t.getShaderParameter(r,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(r)),new Error("Failed to compile vertex shader.");return r}(t,e,`${n.version}\n    precision highp float;\n    ${n.attribute} vec3 clipSpacePos;\n    ${n.attribute} vec2 uv;\n    ${n.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function eo(t,e){return function(t,e,n){const r=Sa(t,e,()=>t.createBuffer(),"Unable to create WebGLBuffer");return da(t,e,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),da(t,e,()=>t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW)),r}(t,e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function no(t,e){return function(t,e,n){const r=Sa(t,e,()=>t.createBuffer(),"Unable to create WebGLBuffer");return da(t,e,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r)),da(t,e,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,n,t.STATIC_DRAW)),r}(t,e,new Uint16Array([0,1,2,2,1,3]))}function ro(t,e,n,r,a,i,o){!function(t,e){const n=Object(s.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){throw new Error("Requested texture size "+`[${t}x${e}]`+" is invalid.")}if(t>n||e>n){throw new Error("Requested texture size "+`[${t}x${e}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}(n,r);const u=function(t,e){return Sa(t,e,()=>t.createTexture(),"Unable to create WebGLTexture.")}(t,e),l=t.TEXTURE_2D;return da(t,e,()=>t.bindTexture(l,u)),da(t,e,()=>t.texParameteri(l,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),da(t,e,()=>t.texParameteri(l,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),da(t,e,()=>t.texParameteri(l,t.TEXTURE_MIN_FILTER,t.NEAREST)),da(t,e,()=>t.texParameteri(l,t.TEXTURE_MAG_FILTER,t.NEAREST)),da(t,e,()=>t.texImage2D(l,0,a,n,r,0,i,o,null)),da(t,e,()=>t.bindTexture(t.TEXTURE_2D,null)),u}function so(t,e,n,r,s,a,i,o){const u=t,l=new Float32Array(function(t,e){const[n,r]=ca(t,e);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ao{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Object(s.env)().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){na[t]=e}(e,t)):this.gl=sa(e);let n="WEBGL_color_buffer_float";if(1===Object(s.env)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=fa(this.gl,this.debug,t),Ra(this.gl,e))this.textureHalfFloatExtension=fa(this.gl,this.debug,e);else if(Object(s.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Ra(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=fa(this.gl,this.debug,"EXT_color_buffer_half_float");else if(Object(s.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Ra(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Ra(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=eo(this.gl,this.debug),this.indexBuffer=no(this.gl,this.debug),this.framebuffer=function(t,e){return Sa(t,e,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl,this.debug),this.textureConfig=ha(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(s.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;da(t,this.debug,()=>t.finish()),da(t,this.debug,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),da(t,this.debug,()=>t.deleteFramebuffer(this.framebuffer)),da(t,this.debug,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),da(t,this.debug,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),da(t,this.debug,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r,s){const[a,i]=ua(n,r);return ro(t,e,a,i,s.internalFormatFloat,s.textureFormatFloat,t.FLOAT)}(this.gl,this.debug,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r,s){const[a,i]=ua(n,r);return ro(t,e,a,i,s.internalFormatHalfFloat,s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,this.debug,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r,s){const[a,i]=ua(n,r);return ro(t,e,a,i,t.RGBA,t.RGBA,t.UNSIGNED_BYTE)}(this.gl,this.debug,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n,r){da(t,e,()=>t.bindTexture(t.TEXTURE_2D,n)),r.data instanceof Uint8Array?da(t,e,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,r.width,r.height,0,t.RGBA,t.UNSIGNED_BYTE,r.data)):da(t,e,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r)),da(t,e,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,this.debug,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,a,i){let o,u,l;da(t,e,()=>t.bindTexture(t.TEXTURE_2D,n)),a instanceof Uint8Array?(o=new Uint8Array(r*s*4),u=t.UNSIGNED_BYTE,l=t.RGBA):(o=new Float32Array(r*s*4),u=t.FLOAT,l=i.internalFormatPackedFloat),o.set(a),da(t,e,()=>t.texImage2D(t.TEXTURE_2D,0,l,r,s,0,t.RGBA,u,o)),da(t,e,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,this.debug,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r,s){const[a,i]=ca(n,r);return ro(t,e,a,i,s.internalFormatPackedHalfFloat,t.RGBA,s.textureTypeHalfFloat)}(this.gl,this.debug,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r,s){const[a,i]=ca(n,r);return ro(t,e,a,i,s.internalFormatPackedFloat,t.RGBA,t.FLOAT)}(this.gl,this.debug,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(va(this.gl,this.debug,this.framebuffer),this.outputTexture=null),da(this.gl,this.debug,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,r,s){const[a,i]=ua(n,r),o=new Uint8Array(n*r*4);return da(t,e,()=>t.readPixels(0,0,a,i,s.downloadTextureFormat,t.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}(this.gl,this.debug,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,s,a){return so(this.gl,t,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r,s){const a=t.createBuffer();da(t,e,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a));const i=16*n*r;return da(t,e,()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ)),da(t,e,()=>t.readPixels(0,0,r,n,t.RGBA,t.FLOAT,0)),da(t,e,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),a}(this.gl,this.debug,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Object(s.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else Object(s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Object(s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,r){const s=new Float32Array(n*r*4);return da(t,e,()=>t.readPixels(0,0,r,n,t.RGBA,t.FLOAT,s)),s}(this.gl,this.debug,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=ma(e,this.debug,t),r=to(e,this.debug),s=function(t,e){return Sa(t,e,()=>t.createProgram(),"Unable to create WebGLProgram.")}(e,this.debug);return da(e,this.debug,()=>e.attachShader(s,r)),da(e,this.debug,()=>e.attachShader(s,n)),function(t,e,n){if(da(t,e,()=>t.linkProgram(n)),!1===t.getProgramParameter(n,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(n)),new Error("Failed to link vertex and fragment shaders.")}(e,this.debug,s),this.debug&&ba(e,this.debug,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(t,e,n,r){return da(t,e,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),ya(t,e,n,"clipSpacePos",r,3,20,0)&&ya(t,e,n,"uv",r,2,20,12)}(e,this.debug,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&da(this.gl,this.debug,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&ba(this.gl,this.debug,this.program),da(this.gl,this.debug,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n,r){return Sa(t,e,()=>t.getUniformLocation(n,r),'uniform "'+r+'" not present in program.')}(this.gl,this.debug,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),da(this.gl,this.debug,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),xa(this.gl,this.debug,this.program,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=ca(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&ba(this.gl,this.debug,this.program),Oa(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),da(t,this.debug,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),da(this.gl,this.debug,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=fa(this.gl,this.debug,2===Object(s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Object(s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await s.util.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,Object(s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,Object(s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||s.util.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),wa(this.gl,this.debug,t,this.framebuffer),this.debug&&Oa(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(wa(this.gl,this.debug,this.outputTexture,this.framebuffer),this.debug&&Oa(this.gl)):va(this.gl,this.debug,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;wa(r,this.debug,t,this.framebuffer),this.debug&&Oa(r),this.outputTexture=t,da(r,this.debug,()=>r.viewport(0,0,e,n)),da(r,this.debug,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),da(this.gl,this.debug,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function io(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((t,n)=>{const r=t.logicalShape,a=e[n],i=a.shape;if(!s.util.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&a.isUniform)return;const o=t.texShape,u=a.isUniform?null:a.texData.texShape;if(!s.util.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)})}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oo{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,m=Wa(),g="channelsLast"===h,b=g?0:1,y=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${e[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uo{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lo{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class co{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ho{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=s-1-t.padInfo.top,o=a-1-t.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class po{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=u-1-t.padInfo.top,d=l-1-t.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fo{constructor(t,e,n=!1,r=!1,s=!1,a=null,i=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const o=n?t[1]:t[2],u=Math.ceil(o/2),l=n?"i * 2, rc.y":"rc.y, i * 2",c=r?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let p="",f="";a&&(p=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,f="result = activation(result);");const m=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${p}\n\n      const float sharedDimension = ${u}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${u}; i++) {\n          vec4 a = getMatrixA(rc.x, ${l});\n          vec4 b = getMatrixB(rc.x, ${c});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${d[0]});\n          result += (${h[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${m}\n\n        ${f}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mo{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class go{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bo{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Pa("rc",e),r=ri(e),s=function(t,e,n){if(1===t)return"rc > "+e[0];let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}(e,t,n),a=function(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)a=e[e.length-1-n]+","+a;n.push(a)}return n}(n,e);if(1===n)return`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class yo{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=ri(r),a=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xo{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=ri(r),a=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=Pa("rc",r),u=Pa("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[s+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===r?2:4;t<e;t++)p+=`\n        ${h[t]}\n        if (${d}) {\n          result[${t}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wo{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(y="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class vo{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,o=t.strideHeight,u=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(a/4),O=a%4,S=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oo{constructor(t,e){this.variableNames=["x"];const n=t.windowSize,r=t.batchSize,s=t.inSize,a=Math.ceil(s/n);this.outputShape=[r,a];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===e?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class So{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${Va(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${Ua(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class ko{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Co{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class No{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]},\n          ${u[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Io{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ao{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eo{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),s=ri(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class To{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=Pa("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=ri(n);function o(n){const r=t.map((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:""+r[n]}(s,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $o{constructor(t,e,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=ri(s.length),u=ri(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ro{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,a=t.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jo{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<e.length;r++)i.push(""+n[r]),r<t&&a.push(""+n[r]);r=a.join(),s=i.join()}const a=ri(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Do{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ri(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return _o.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((t,e)=>`sourceLoc.${_o[e]} = start[${e}] + coords.${_o[e]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const _o=["x","y","z","w","u","v"];class Fo{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=ri(this.rank),n=Pa("coords",this.rank),r=Pa("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((t,e)=>`start[${e}]`).join()});`:t.map((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mo{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=ri(n.length),a=ri(n.length);let i="";if(1===r)i="coords * strides + begin";else{let t=0;i=n.map((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zo{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=Lo(e,n),s=Bo(t,r,n);if(s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]),this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let a;return this.numUsedTextures++,this.log(),r===oa.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===oa.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===oa.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===oa.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===oa.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(a),a}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=Bo(e,Lo(n,r),r);s in this.freeTextures||(this.freeTextures[s]=[]),this.freeTextures[s].push(t),this.numFreeTextures++,this.numUsedTextures--;const a=this.usedTextures[s],i=a.indexOf(t);if(i<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(i,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`)}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0}}}function Lo(t,e){if(t===ia.UPLOAD)return oa.PACKED_2X2_FLOAT32;if(t===ia.RENDER||null==t)return function(t){return Object(s.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?oa.PACKED_2X2_FLOAT32:oa.UNPACKED_FLOAT32:t?oa.PACKED_2X2_FLOAT16:oa.UNPACKED_FLOAT16}(e);if(t===ia.DOWNLOAD||t===ia.PIXELS)return oa.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function Bo(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Po{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=ri(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class Wo{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Vo="return abs(x);",Uo="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",qo="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Go=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${s.backend_util.SELU_SCALEALPHA};\n  float scale = ${s.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`;const Ho="return -x;",Ko="return ceil(x);",Xo="return floor(x);",Yo="return exp(x);",Jo="return exp(x) - 1.0;",Zo=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${s.backend_util.ERF_P};\n  float a1 = ${s.backend_util.ERF_A1};\n  float a2 = ${s.backend_util.ERF_A2};\n  float a3 = ${s.backend_util.ERF_A3};\n  float a4 = ${s.backend_util.ERF_A4};\n  float a5 = ${s.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,Qo="return x;",tu="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",eu="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",nu="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class ru{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class su{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=Pa("rc",e),r=ri(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{segment_util:au}=s.backend_util,iu=s.kernel_impls.split,ou=s.kernel_impls.tile,uu=s.kernel_impls.topkImpl,lu=s.kernel_impls.whereImpl,cu={};function hu(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?tu:Uo;if("elu"===t)return e?nu:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?eu:qo;if("prelu"===t)return e?xi:bi;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class du extends s.KernelBackend{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(s.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=sa(Object(s.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Object(s.env)().getNumber("WEBGL_VERSION"))in cu||(cu[e]={}),cu[e]),this.gpgpu=new ao(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new zo(this.gpgpu),this.numMBBeforeWarning=null==Object(s.env)().global.screen?1024:Object(s.env)().global.screen.height*Object(s.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new s.DataStorage(this,Object(s.engine)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if(Object(s.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:ia.UPLOAD}),r}move(t,e,n,r){if(Object(s.env)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:ia.UPLOAD})}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensors:a,slice:i,shape:o,isPacked:u}=e;if(null!=i){let e;e=u?new ru(o,Qo):new Wo(o,Qo);const n=this.runWebGLProgram(e,[{dataId:t,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeData(n.dataId),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let c,h;if(l&&(c=s.util.now()),"complex64"===r){const t=a.real.dataSync(),e=a.imag.dataSync();h=s.backend_util.mergeRealAndImagArrays(t,e)}else h=this.getValuesFromTexture(t);return l&&(this.downloadWaitMs+=s.util.now()-c),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:a,dtype:i,complexTensors:o,isPacked:u}=e;if(null!=a){let e;e=u?new ru(r,Qo):new Wo(r,Qo);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeData(n.dataId),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Object(s.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(s.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,h=null;if("complex64"!==i&&Object(s.env)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(e.texture,...la(r))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([o.real.data(),o.imag.data()]),e=t[0],n=t[1];c=s.backend_util.mergeRealAndImagArrays(e,n)}else if(null==h)c=this.getValuesFromTexture(t);else{const t=s.util.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,t)}null!=l&&this.disposeData(l.dataId);const d=this.convertAndCacheOnCPU(t,c),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(t=>t(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),d}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!pa(n)){if(Object(s.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),a=s.util.sizeFromShape(e);if(Object(s.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...la(e)).subarray(0,a);return this.disposeData(n.dataId),s}const i=Object(s.env)().getBool("WEBGL_PACK")&&!0===r,o=i?Ia(e):e,u=i?new qi(o):new Ui(o),l=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:t}],"float32"),c=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeData(l.dataId),h}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const a=s.util.flatten(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),i=s.util.flatten(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(a);o.kernelMs=s.util.sum(t),o.getExtraProfileInfo=()=>t.map((t,e)=>({name:i[e],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU}}startTimer(){return Object(s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s.util.now(),endMs:null}}endTimer(t){return Object(s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=s.util.now(),t)}async getQueryTime(t){if(Object(s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;this.releaseGPUData(t);const{complexTensors:e}=this.texData.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,a)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Object(s.env)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(s.engine)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){return null!=this.getCPUBackend()&&t.every(t=>null==this.texData.get(t.dataId).texture&&s.util.sizeFromShape(t.shape)<e)}getGPGPUContext(){return this.gpgpu}complex(t,e){const n=this.makeOutput(t.shape,"complex64");return this.texData.get(n.dataId).complexTensors={real:Object(s.engine)().keep(t.clone()),imag:Object(s.engine)().keep(e.clone())},n}real(t){return this.texData.get(t.dataId).complexTensors.real.clone()}imag(t){return this.texData.get(t.dataId).complexTensors.imag.clone()}slice(t,e,n){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.slice(t,e,n);if(0===s.util.sizeFromShape(n))return Object(s.tensor)([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),a=s.slice_util.isSliceContinous(t.shape,e,n);if(r||!a){const r=Object(s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fo(n):new Do(n),a=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,a)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),a=this.makeOutput(n,t.dtype),i=this.texData.get(a.dataId);Object.assign(i,r),i.shape=n,i.dtype=t.dtype;let o=s.slice_util.computeFlatOffset(e,t.strides);r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||t.dataId};const u=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,u+1),a}stridedSlice(t,e,n,r){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.stridedSlice(t,e,n,r);const a=s.slice_util.computeOutShape(e,n,r);if(a.some(t=>0===t))return Object(s.tensor)([],a);const i=new Mo(e,r,a);return this.compileAndRun(i,[t])}reverse(t,e){const n=Object(s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new To(t.shape,e):new Eo(t.shape,e);return this.compileAndRun(n,[t])}concat(t,e){if("complex64"===t[0].dtype){const n=t.map(t=>Object(s.real)(t)),r=t.map(t=>Object(s.imag)(t));return Object(s.complex)(this.concat(n,e),this.concat(r,e))}if(this.shouldExecuteOnCPU(t))return this.cpuBackend.concat(t,e);if(1===t.length)return t[0];if(t.length>Object(s.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const n=Math.floor(t.length/2),r=this.concat(t.slice(0,n),e),s=this.concat(t.slice(n),e);return this.concat([r,s],e)}if(Object(s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].rank>1){const n=new Ci(t.map(t=>t.shape),e);return this.compileAndRun(n,t)}const n=s.backend_util.computeOutShape(t.map(t=>t.shape),e),r=t.map(t=>t.as2D(-1,s.util.sizeFromShape(t.shape.slice(e)))),a=new ki(r.map(t=>t.shape));return this.compileAndRun(a,r).reshape(n)}neg(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.neg(t);if(Object(s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Ho,t.dtype);const e=new Wo(t.shape,Ho);return this.compileAndRun(e,[t])}batchMatMul(t,e,n,r){const a=n?t.shape[2]:t.shape[1],i=r?e.shape[1]:e.shape[2],o=n?t.shape[1]:t.shape[2],[u,,]=t.shape;if((1===a||1===i)&&o>1e3){n&&(t=Object(s.transpose)(t,[0,2,1])),r&&(e=Object(s.transpose)(e,[0,2,1]));const a=1===i?t:t.as3D(u,o,1),l=1===i?2:1,c=1===i?e.as3D(u,1,o):e;return this.multiply(a,c).sum(l,!0)}const l=Object(s.upcastType)(t.dtype,e.dtype),c=new fo(t.shape,[u,a,i],n,r);return this.compileAndRun(c,[t,e],l)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:a,activation:i,preluActivationWeights:o}){const u=n?t.shape[2]:t.shape[1],l=r?e.shape[1]:e.shape[2],[c,,]=t.shape,h=Object(s.upcastType)(t.dtype,e.dtype),d=null!=a,p=null!=o,f=i?hu(i,!0):null,m=new fo(t.shape,[c,u,l],n,r,d,f,p),g=[t,e];return a&&g.push(a),o&&g.push(o),this.compileAndRun(m,g,h)}multiply(t,e){if("complex64"===t.dtype){const n=this.texData.get(t.dataId),r=this.texData.get(e.dataId),s=new pi(hi,t.shape,e.shape),a=new pi(di,t.shape,e.shape),i=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag),this.makeComplexComponentTensorInfo(e,r.complexTensors.real),this.makeComplexComponentTensorInfo(e,r.complexTensors.imag)],o=this.compileAndRun(s,i),u=this.compileAndRun(a,i),l=this.complex(o,u);return o.dispose(),u.dispose(),l}if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.multiply(t,e);if(Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,gi,t.dtype);const n=new yi(gi,t.shape,e.shape);return this.compileAndRun(n,[t,e],t.dtype)}batchNorm(t,e,n,r,a,i){const o=[t,e,n];let u=null;null!=r&&(u=r.shape,o.push(r));let l=null;if(null!=a&&(l=a.shape,o.push(a)),Object(s.env)().getBool("WEBGL_PACK_NORMALIZATION")){const r=new ci(t.shape,e.shape,n.shape,u,l,i);return this.compileAndRun(r,o)}const c=new li(t.shape,e.shape,n.shape,u,l,i);return this.compileAndRun(c,o)}localResponseNormalization4D(t,e,n,r,a){const i=Object(s.env)().getBool("WEBGL_PACK_NORMALIZATION")?new co(t.shape,e,n,r,a):new uo(t.shape,e,n,r,a);return this.compileAndRun(i,[t])}LRNGrad(t,e,n,r,s,a,i){const o=new lo(e.shape,r,s,a,i);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map(t=>s.util.decodeString(t)),r=Object(s.buffer)(t.shape,t.dtype,n);return ou(r,e)}const n=new Po(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=Object(s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xo(t.shape,e,n):new yo(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.gather(t,e,n);const r=new Zi(t.shape,e.size,n);return this.compileAndRun(r,[t,e])}batchToSpaceND(t,e,n){s.util.assert(t.rank<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),a=s.backend_util.getReshaped(t.shape,e,r),i=s.backend_util.getPermuted(a.length,e.length),o=s.backend_util.getReshapedPermuted(t.shape,e,r),u=s.backend_util.getSliceBeginCoords(n,e.length),l=s.backend_util.getSliceSize(o,n,e.length);return Object(s.transpose)(t.reshape(a),i).reshape(o).slice(u,l)}spaceToBatchND(t,e,n){s.util.assert(t.rank<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),a=[[0,0]];a.push(...n);for(let n=1+e.length;n<t.shape.length;++n)a.push([0,0]);const i=t.pad(a),o=s.backend_util.getReshaped(i.shape,e,r,!1),u=s.backend_util.getPermuted(o.length,e.length,!1),l=s.backend_util.getReshapedPermuted(i.shape,e,r,!1);return Object(s.transpose)(i.reshape(o),u).reshape(l)}reduce(t,e,n){const r=t.shape[0],a=t.shape[1],i=s.backend_util.computeOptimalWindowSize(a),o=new Oo({windowSize:i,inSize:a,batchSize:r},e),u=this.compileAndRun(o,[t],n);return 1===u.shape[1]?u:this.reduce(u,e,n)}argReduce(t,e,n=null){let r=t.shape[0],a=t.shape[1];null!=n&&(r=n.shape[0],a=n.shape[1]);const i=s.backend_util.computeOptimalWindowSize(a),o=new La({windowSize:i,inSize:a,batchSize:r},e,null==n),u=[t];null!=n&&u.push(n);const l=this.compileAndRun(o,u,"int32");return 1===l.shape[1]?l:this.argReduce(t,e,l)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,a=r[r.length-1],i=s.backend_util.computeOptimalWindowSize(a),o=new ii(r,i,e,null==n),u=null==n?[t]:[t,n],l=this.compileAndRun(o,u,"int32");return l.rank===t.rank?this.argReducePacked(t,e,l):l}sum(t,e){s.backend_util.assertAxesAreInnerMostDims("sum",e,t.rank);const[n,r]=s.backend_util.computeOutAndReduceShapes(t.shape,e),a=s.util.sizeFromShape(r),i=t.as2D(-1,a),o=s.sumOutType(t.dtype);return this.reduce(i,"sum",o).reshape(n)}prod(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.prod(t,e);const[n,r]=s.backend_util.computeOutAndReduceShapes(t.shape,e),a=s.util.sizeFromShape(r),i=t.as2D(-1,a),o=s.sumOutType(t.dtype);return this.reduce(i,"prod",o).reshape(n)}unsortedSegmentSum(t,e,n){let r=0;const a=s.backend_util.getAxesPermutation([r],t.rank);let i=t;null!=a&&(i=Object(s.transpose)(t,a),r=s.backend_util.getInnerMostAxes(1,t.rank)[0]);const o=au.computeOutShape(i.shape,r,n),u=s.util.sizeFromShape([i.shape[r]]),l=i.as2D(-1,u),c=s.sumOutType(t.dtype);let h=this.segOpCompute(l,"unsortedSegmentSum",e,c,n).reshape(o);return null!=a&&(h=Object(s.transpose)(h,s.backend_util.getUndoAxesPermutation(a))),h}segOpCompute(t,e,n,r,a){const i=t.shape[0],o=t.shape[1],u=au.segOpComputeOptimalWindowSize(o,a),l=new Ro({windowSize:u,inSize:o,batchSize:i,numSegments:a},e),c=this.compileAndRun(l,[t,n],r);return c.shape[1]===a?c:(n=Object(s.range)(0,a).tile([o/u]),this.segOpCompute(c,e,n,r,a))}argMinMaxReduce(t,e,n){const r=[e];if(s.backend_util.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!Object(s.env)().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,a]=s.backend_util.computeOutAndReduceShapes(t.shape,r),i=s.util.sizeFromShape(a),o=t.as2D(-1,i);return this.argReduce(o,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=`+e);const s=new zi(t.shape,n,r);return this.compileAndRun(s,[t])}equal(t,e){if(Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new yi("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}notEqual(t,e){if(Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(notEqual(a, b));\n","bool");const n=new yi("return float(a != b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.less(t,e);if(Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const n=new yi("return float(a < b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}lessEqual(t,e){if(Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new yi("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.greater(t,e);if(Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const n=new yi("return float(a > b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greaterEqual(t,e){if(Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new yi("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new Wo(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new yi("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new yi("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new jo(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],Object(s.upcastType)(e.dtype,n.dtype))}where(t){s.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return lu(t.shape,e)}topk(t,e,n){const r=t.dataSync();return uu(r,t.shape,t.dtype,e,n)}min(t,e){s.backend_util.assertAxesAreInnerMostDims("min",e,t.rank);const[n,r]=s.backend_util.computeOutAndReduceShapes(t.shape,e),a=s.util.sizeFromShape(r),i=t.as2D(-1,a);return this.reduce(i,"min",i.dtype).reshape(n)}minimum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.minimum(t,e);const n=Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wi("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new yi("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])}mod(t,e){const n=Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wi("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new yi("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.maximum(t,e);const n=Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wi("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new yi("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])}all(t,e){s.backend_util.assertAxesAreInnerMostDims("all",e,t.rank);const[n,r]=s.backend_util.computeOutAndReduceShapes(t.shape,e),a=s.util.sizeFromShape(r),i=t.as2D(-1,a);return this.reduce(i,"all",i.dtype).reshape(n)}any(t,e){s.backend_util.assertAxesAreInnerMostDims("any",e,t.rank);const[n,r]=s.backend_util.computeOutAndReduceShapes(t.shape,e),a=s.util.sizeFromShape(r),i=t.as2D(-1,a);return this.reduce(i,"any",i.dtype).reshape(n)}floorDiv(t,e){if(Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n","int32");const n=new yi("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(n,[t,e],"int32")}add(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,fi);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.add(t,e);const n=Object(s.upcastType)(t.dtype,e.dtype);if(Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,fi,n);const r=new yi(fi,t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}packedUnaryOp(t,e,n){const r=new ru(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,s=!1){const a=new wi(n,t.shape,e.shape,s);return this.compileAndRun(a,[t,e],r)}complexSeparableBinaryOp(t,e,n){const r=this.texData.get(t.dataId),a=this.texData.get(e.dataId),[i,o]=[[r.complexTensors.real,a.complexTensors.real],[r.complexTensors.imag,a.complexTensors.imag]].map(r=>{const[a,i]=r,o=this.makeComplexComponentTensorInfo(t,a),u=this.makeComplexComponentTensorInfo(e,i),l=new yi(n,t.shape,e.shape);return this.compileAndRun(l,[o,u],Object(s.upcastType)(a.dtype,i.dtype))}),u=this.complex(i,o);return i.dispose(),o.dispose(),u}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>Object(s.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map(t=>t.dtype).reduce((t,e)=>Object(s.upcastType)(t,e)),n=t.map(t=>t.shape),r=Object(s.env)().getBool("WEBGL_PACK")?new za(t[0].shape,n):new Ma(t[0].shape,n);return this.compileAndRun(r,t,e)}subtract(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,mi);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.subtract(t,e);const n=Object(s.upcastType)(t.dtype,e.dtype);if(Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,mi,t.dtype);const r=new yi(mi,t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}pow(t,e){const n=Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wi("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new yi("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),r=Object(s.upcastType)(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],r)}ceil(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.ceil(t);if(Object(s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Ko,t.dtype);const e=new Wo(t.shape,Ko);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.floor(t);if(Object(s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Xo,t.dtype);const e=new Wo(t.shape,Xo);return this.compileAndRun(e,[t])}sign(t){const e=new Wo(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new Wo(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new Wo(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new Wo(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new Wo(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.exp(t);if(Object(s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Yo,t.dtype);const e=new Wo(t.shape,Yo);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.expm1(t);if(Object(s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Jo,t.dtype);const e=new Wo(t.shape,Jo);return this.compileAndRun(e,[t])}softmax(t,e){const n=s.util.parseAxisParam([e],t.shape),r=Object(s.max)(t,n),a=s.backend_util.expandShapeToKeepDim(r.shape,n),i=this.subtract(t,r.reshape(a)),o=this.exp(i),u=this.sum(o,n).reshape(a);return Object(s.div)(o,u)}log(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.log(t);if(Object(s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new Wo(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new Wo(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new Wo(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.rsqrt(t);const e=new Wo(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new Wo(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=Object(s.env)().getBool("WEBGL_PACK")?new ru(t.shape,tu):new Wo(t.shape,Uo),this.compileAndRun(e,[t])}relu6(t){let e;return e=Object(s.env)().getBool("WEBGL_PACK")?new ru(t.shape,eu):new Wo(t.shape,qo),this.compileAndRun(e,[t])}prelu(t,e){const n=Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wi(xi,t.shape,e.shape):new yi(bi,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(Object(s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,nu,t.dtype);const e=new Wo(t.shape,"return (x >= 0.0) ? x : (exp(x) - 1.0);");return this.compileAndRun(e,[t])}eluDer(t,e){const n=Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wi("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new yi("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new Wo(t.shape,Go);return this.compileAndRun(e,[t])}int(t){const e=new Wo(t.shape,"return float(int(x));");return this.compileAndRun(e,[t],"int32")}clip(t,e,n){let r;r=Object(s.env)().getBool("WEBGL_PACK_CLIP")?new Oi(t.shape):new vi(t.shape);const a=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,a)}abs(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.abs(t);if(Object(s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Vo,t.dtype);const e=new Wo(t.shape,Vo);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new Si(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensors.real),this.makeComplexComponentTensorInfo(t,e.complexTensors.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new Wo(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new Wo(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}sin(t){const e=new Wo(t.shape,"if (isnan(x)) return x;\n  return sin(x);\n");return this.compileAndRun(e,[t])}cos(t){const e=new Wo(t.shape,"if (isnan(x)) return x;\n  return cos(x);\n");return this.compileAndRun(e,[t])}tan(t){const e=new Wo(t.shape,"return tan(x);");return this.compileAndRun(e,[t])}asin(t){const e=new Wo(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new Wo(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new Wo(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}atan2(t,e){const n=Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wi("\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new yi("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])}sinh(t){const e=new Wo(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new Wo(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new Wo(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new Wo(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new Wo(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new Wo(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new Wo(t.shape,Zo);return this.compileAndRun(e,[t])}step(t,e){const n=new Wo(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,a,i){const o=t.shape,u=this.texData.get(t.dataId),l=n.inChannels,c=o[0]*o[1]*o[2],h=n.outChannels,d="channelsLast"===n.dataFormat,p=(1===c||1===h)&&l>1e3,f=o[2]%2!=0&&!!u.isPacked;if(p||!Object(s.env)().getBool("WEBGL_LAZILY_UNPACK")||!Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const s=d?o[0]*o[1]*o[2]:o[0]*o[2]*o[3],u=this.reshape(t,[1,s,n.inChannels]),l=this.reshape(e,[1,n.inChannels,n.outChannels]);return this.reshape(this.fusedBatchMatMul({a:u,b:l,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:i}),n.outShape)}const m=d?o[0]*o[1]*(o[2]+1):o[0]*o[2]*(o[3]+1),g={dataId:t.dataId,shape:[1,m,n.inChannels],dtype:t.dtype},b=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,s.util.assert(Ea(u.shape,g.shape),()=>`packed reshape ${u.shape} to ${g.shape} isn't free`);const y=this.reshape(e,[1,n.inChannels,n.outChannels]),x=this.fusedBatchMatMul({a:g,b:y,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:i}),w=this.texData.get(x.dataId);return s.util.assert(w.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=b,w.shape=n.outShape,Object(s.engine)().makeTensorFromDataId(x.dataId,n.outShape,x.dtype)}conv2dWithIm2Row(t,e,n,r,s,a){const{filterWidth:i,filterHeight:o,inChannels:u,outWidth:l,outHeight:c,dataFormat:h}=n,d="channelsLast"===h,p=i*o*u,f=c*l,m=[p,f],g=t.squeeze([0]),b=e.reshape([1,p,-1]),y=new oo(m,g.shape,n),x=this.compileAndRun(y,[g]).reshape([1,m[0],m[1]]),w=null!=r,v=null!=a,O=s?hu(s,!0):null,S=new fo(x.shape,[1,f,n.outChannels],!0,!1,w,O,v),k=[x,b];r&&k.push(r),v&&k.push(a);const C=this.compileAndRun(S,k);return d?C.reshape([1,c,l,n.outChannels]):C.reshape([1,n.outChannels,c,l])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:i}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,a,i);if(Object(s.env)().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,a,i);const o=null!=r,u=null!=i,l=a?hu(a,!1):null,c=new ji(n,o,l,u),h=[t,e];return r&&h.push(r),i&&h.push(i),this.compileAndRun(c,h)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(Object(s.env)().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new ji(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new Ai(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new Ii(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:i}){const o=Object(s.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,u=a?hu(a,o):null,l=[t,e],c=null!=r,h=null!=i;let d;return c&&l.push(r),h&&l.push(i),o?(d=new Fi(n,c,u,h),this.compileAndRun(d,l)):(d=new _i(n,c,u,h),this.compileAndRun(d,l))}depthwiseConv2D(t,e,n){let r;return Object(s.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new Fi(n),this.compileAndRun(r,[t,e])):(r=new _i(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new Ri(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new $i(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new Di(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new Ti(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new Ei(n);return this.compileAndRun(r,[t,e])}maxPool(t,e){const n=new wo(e,"max",!1);return this.compileAndRun(n,[t])}avgPool(t,e){const n=new wo(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}maxPoolBackprop(t,e,n,r){const s=new wo(r,"max",!0),a=this.compileAndRun(s,[e]),i=new ho(r),o=this.compileAndRun(i,[t,a],e.dtype);return a.dispose(),o}avgPoolBackprop(t,e,n){const r=new oi(n);return this.compileAndRun(r,[t],e.dtype)}cast(t,e){return s.backend_util.castTensor(t,e,this)}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[e]=n,o[n]=this.slice(t,a,i).reshape(r);return o}avgPool3d(t,e){const n=new vo(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new ui(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new vo(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const s=new vo(r,"max",!0),a=this.compileAndRun(s,[e]),i=new po(r),o=this.compileAndRun(i,[t,a],e.dtype);return a.dispose(),o}reshape(t,e){const n=this.texData.get(t.dataId);if(n.isPacked&&!Ea(t.shape,e)&&(null===n.texture||!Ea(n.shape,e))){const n=this.packedReshape(t,e);return Object(s.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}return s.backend_util.reshapeTensor(t,e)}resizeBilinear(t,e,n,r){const a=Object(s.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new No(t.shape,e,n,r):new Co(t.shape,e,n,r);return this.compileAndRun(a,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new ko(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const s=new Ao(t.shape,e,n,r);return this.compileAndRun(s,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new Io(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const a=e?t:Object(s.softmax)(t),i=a.shape[0],o=a.shape[1],u=new mo(i,o,n),l=u.getCustomSetupFunc(r);return this.compileAndRun(u,[a],"int32",l)}oneHot(t,e,n,r){const s=new go(t.size,e,n,r);return this.compileAndRun(s,[t])}diag(t){const e=new Vi(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,s,a){const i=new Mi(t.shape,e.shape,r,s,a);return this.compileAndRun(i,[t,e,n],"float32")}depthToSpace(t,e,n){s.util.assert(e>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+e);const r=t.shape[0],a="NHWC"===n?t.shape[1]:t.shape[2],i="NHWC"===n?t.shape[2]:t.shape[3],o="NHWC"===n?t.shape[3]:t.shape[1],u=a*e,l=i*e,c=o/(e*e),h=new Wi("NHWC"===n?[r,u,l,c]:[r,c,u,l],e,n);return this.compileAndRun(h,[t])}split(t,e,n){return iu(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:a,sliceSize:i,strides:o,outputSize:u}=s.backend_util.calculateShapes(e,t,n),l=[u/i,i],c=t.reshape([a,r]),h=e.reshape([a,i]);if(0===u)return s.backend_util.reshapeTensor(Object(s.tensor)([]),n);const d=Object(s.scalar)(0),p=new $o(a,r,c.rank,h.rank,o,l);return this.compileAndRun(p,[h,c,d]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:a,numUpdates:i,strides:o,outputSize:u}=s.backend_util.calculateShapes(e,t,n),l=new $o(i,a,t.rank,e.rank,o,[u,1],!1);return this.compileAndRun(l,[e,t,r]).reshape(n)}fft(t){return this.fftImpl(t,!1)}ifft(t){return this.fftImpl(t,!0)}fftImpl(t,e){const n=this.texData.get(t.dataId),r=new Yi(Ki,t.shape,e),s=new Yi(Xi,t.shape,e),a=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag)],i=this.compileAndRun(r,a),o=this.compileAndRun(s,a),u=this.complex(i,o).as2D(t.shape[0],t.shape[1]);return i.dispose(),o.dispose(),u}gatherND(t,e){const n=e.shape,r=n[n.length-1],[a,i,o,u]=s.backend_util.prepareAndValidate(t,e),l=e.reshape([i,r]),c=t.reshape([t.size/o,o]),h=new Qi(r,u,[i,o]);return this.compileAndRun(h,[c,l]).reshape(a)}fill(t,e,n){if("string"===(n=n||s.util.inferDtype(e))){const r=s.util.getArrayFromDType(n,s.util.sizeFromShape(t));return r.fill(e),Object(s.engine)().makeTensor(r,t,n,this)}{const r=new Ji(t,e),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,s)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return s.backend_util.linspaceImpl(t,e,n)}makeTensorInfo(t,e){const n=this.write(null,t,e);return this.texData.get(n).usage=null,{dataId:n,shape:t,dtype:e}}makeOutput(t,e){const{dataId:n}=this.makeTensorInfo(t,e);return Object(s.engine)().makeTensorFromDataId(n,t,e,this)}unpackTensor(t){const e=new su(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new bo(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Ca(t.shape),...Na(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[Ca(e),...Na(e)],a=new So(s,n),i=this.runWebGLProgram(a,[r],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,a=Ia(r);let i;i=n?new Pi(a):new Bi(a);return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:t}],s,null,!0).dataId}}runWebGLProgram(t,e,n,r,a=!1){const i=this.makeTensorInfo(t.outputShape,n),o=this.texData.get(i.dataId);if(t.packedOutput&&(o.isPacked=!0),t.outPackingScheme===aa.DENSE){const e=la(t.outputShape);o.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===s.util.sizeFromShape(i.shape))return o.values=s.util.getTypedArrayFromDType(i.dtype,0),i;const u=[],l=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&s.util.sizeFromShape(e.shape)<=Object(s.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),u.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!Ea(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),u.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(t,e,n){let r="";e.concat(n).forEach(t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`});const s=t.userCode;let a=t.constructor.name;return a+="_"+r+"_"+s,a}(t,l,c),d=this.getAndSaveBinary(h,()=>function(t,e,n,r){const a=e.userCode,i=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),o=i.map(t=>t.shapeInfo),u={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=Ha(i,u,a,e.packedInputs),c=t.createProgram(l);let h=null;const d=t.getUniformLocation(c,"NAN",!1);1===Object(s.env)().getNumber("WEBGL_VERSION")&&(h=t.getUniformLocation(c,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],s=!1;p[r]=t.getUniformLocation(c,r,s),p["offset"+r]=t.getUniformLocation(c,"offset"+r,s)}return{program:e,source:l,webGLProgram:c,uniformLocations:p,inShapeInfos:o,outShapeInfo:u,infLoc:h,nanLoc:d}}(this.gpgpu,t,l,c)),p=null!=this.activeTimers;let f;if(p&&(f=this.startTimer()),function(t,e,n,r,a){io(e.inShapeInfos,n),io([e.outShapeInfo],[r]);const i=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(i,o[0],o[1]):t.setOutputMatrixTexture(i,o[0],o[1]),t.setProgram(e.webGLProgram),1===Object(s.env)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const a=e.program.variableNames[r],i=e.uniformLocations[a],o=e.uniformLocations["offset"+a];if(null!=i)if(n.isUniform)if(s.util.sizeFromShape(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=o&&t.gl.uniform1i(o,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,i,r)}),null!=a&&a(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach(t=>this.disposeData(t.dataId)),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!Object(s.env)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const t=this.unpackTensor(i);return this.disposeData(i.dataId),t}return i}compileAndRun(t,e,n,r,a=!1){n=n||e[0].dtype;const i=this.runWebGLProgram(t,e,n,r,a);return Object(s.engine)().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(s.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(s.tidy)(()=>{if(!Object(s.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Object(s.env)().getBool("DEBUG");Object(s.env)().set("DEBUG",!1);const e=this.abs(Object(s.scalar)(1e-8)).dataSync()[0];if(Object(s.env)().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:a,texture:i,usage:o,isPacked:u}=e;if(null!=i)return;const l=null!=this.activeTimers;let c;l&&(c=s.util.now());let h=e.texShape;if(null==h&&(h=function(t,e=!1){let n=Object(s.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map((e,n)=>n>=t.length-2?s.util.nearestLargerEven(t[n]):t[n])).length&&(t=[2,t[0]])),2!==t.length){const e=s.util.squeezeShape(t);t=e.newShape}let r=s.util.sizeFromShape(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=Ca(t);let n=2,a=2;return t.length&&([n,a]=Na(t)),r=e*(n/2)*(a/2),s.util.sizeToSquarishShape(r).map(t=>2*t)}return s.util.sizeToSquarishShape(r)}(n,u),e.texShape=h),null!=a){const t=Ia(n);let i,o=h[1],d=h[0];const p=a instanceof Uint8Array;u?([o,d]=ca(h[0],h[1]),i=new Hi(t,[d,o],p)):i=new Gi(t,[d,o],p);const f=this.makeTensorInfo([d,o],r);this.texData.get(f.dataId).usage=p?ia.PIXELS:ia.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,d,a);const m=!0,g=this.runWebGLProgram(i,[f],r,null,m),b=this.texData.get(g.dataId);e.texture=b.texture,e.texShape=b.texShape,e.isPacked=b.isPacked,e.usage=b.usage,this.disposeData(f.dataId),this.texData.delete(g.dataId),e.values=null,l&&(this.uploadWaitMs+=s.util.now()-c)}else{const t=this.acquireTexture(h,o,r,u);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype "+e)}
/** @license See the LICENSE file. */(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*s.util.bytesPerElement(e)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const pu={kernelName:s.Div,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:r}=t;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
return function(t,e,n){let r=new yi("\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",t.shape,e.shape);return Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(r=new wi("\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",t.shape,e.shape,!0)),n.runWebGLProgram(r,[t,e],"float32")}(n,r,e)}};
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fu{constructor(t){this.variableNames=["A"];const e=Wa(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mu{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Wa(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gu={kernelName:s.FromPixels,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:a}=e;const{numChannels:i}=r,o="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,c]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],h=[c,l],d=[c,l,i];(u||o)&&(null==bu&&(bu=document.createElement("canvas").getContext("2d")),bu.canvas.width=l,bu.canvas.height=c,bu.drawImage(a,0,0,l,c),a=bu.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=ia.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const f=Object(s.env)().getBool("WEBGL_PACK")?new mu(d):new fu(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */};let bu;const{maxImpl:yu,transposeImpl:xu}=r;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wu(t,e,n){const r=n.texData.get(t.dataId);return!r.isPacked||Ea(t.shape,e)||null!==r.texture&&Ea(r.shape,e)?{dataId:t.dataId,shape:e,dtype:t.dtype}:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const r=[Ca(t.shape),...Na(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},a=[Ca(e),...Na(e)],i=new So(a,r),o=n.runWebGLProgram(i,[s],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(t,e,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vu(t,e,n,r){const a=s.util.sizeFromShape(e),i=wu(t,[s.util.sizeFromShape(t.shape)/a,a],r),o=function t(e,n,r,a){const[i,o]=e.shape,u=s.backend_util.computeOptimalWindowSize(o),l=new Oo({windowSize:u,inSize:o,batchSize:i},r),c=a.runWebGLProgram(l,[e],n);return 1===c.shape[1]?c:t(c,n,r,a)}(i,t.dtype,"max",r);return i.dataId!==t.dataId&&r.disposeData(i.dataId),wu(o,n,r)}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ou{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=ri(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class Su{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ri(this.rank),s=Ba("rc",this.rank),a=new Array(this.rank);for(let t=0;t<e.length;t++)a[e[t]]=s[t];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ku(t,e,n){const r=Object(s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Su(t.shape,e):new Ou(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cu={kernelName:s.Max,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:a}=e,i=n,o=r.shape.length;let u=s.util.parseAxisParam(a,r.shape);const l=s.backend_util.getAxesPermutation(u,o),c=null!=l,h=i.shouldExecuteOnCPU([r]);let d=r;if(c){if(h){const t=i.texData.get(d.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[l[t]];const n=xu(t,r.shape,r.dtype,l,e);d=i.makeTensorInfo(e,r.dtype);i.texData.get(d.dataId).values=n}else d=ku(r,l,i);u=s.backend_util.getInnerMostAxes(u.length,o)}s.backend_util.assertAxesAreInnerMostDims("max",u,o);const[p,f]=s.backend_util.computeOutAndReduceShapes(d.shape,u);let m;if(h){const t=i.texData.get(d.dataId).values,e=yu(t,s.util.sizeFromShape(f),p,r.dtype);m=i.makeTensorInfo(p,r.dtype);i.texData.get(m.dataId).values=e}else m=vu(d,f,p,i);return c&&i.disposeData(d.dataId),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Nu={kernelName:s.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:a,strides:i,pad:o,includeBatchInIndex:u}=e,l=n;s.util.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=s.backend_util.computePool2DInfo(r.shape,a,i,c,o),[d,p]=function(t,e,n,r){let s=new wo(n,"max",!1);const a=r.runWebGLProgram(s,[t],"float32");return s=new wo(n,"max",!0,!0,e),[a,r.runWebGLProgram(s,[t],"float32")]}(r,u,h,l);return[d,p]}},Iu={kernelName:s.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=n,l=e,c=l.readSync(r.dataId),h=l.readSync(a.dataId),d=i,p=o,f=u;return s.kernel_impls.nonMaxSuppressionV3(c,h,d,p,f)}},Au=s.kernel_impls.nonMaxSuppressionV5,Eu=[Cu,gu,pu,Iu,{kernelName:s.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=n,c=e,h=c.readSync(r.dataId),d=c.readSync(a.dataId),p=i,f=o,m=u,g=l,{selectedIndices:b,selectedScores:y}=Au(h,d,p,f,m,g);return[b,y]}},{kernelName:s.Square,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e,s=new Wo(n.shape,"return x * x;");return r.runWebGLProgram(s,[n],n.dtype)}},{kernelName:s.SquaredDifference,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:r}=t,a=e,i=Object(s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wi("return (a - b) * (a - b);",n.shape,r.shape):new yi("return (a - b) * (a - b);",n.shape,r.shape);return a.compileAndRun(i,[n,r])}},{kernelName:s.Transpose,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,a=n,i=r.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=r.shape[s[t]];let u;if(a.shouldExecuteOnCPU([r])){const t=a.texData.get(r.dataId).values,e=xu(t,r.shape,r.dtype,s,o);u=a.makeTensorInfo(o,r.dtype);a.texData.get(u.dataId).values=e}else u=ku(r,s,a);return u}},Nu];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const t of Eu)Object(s.registerKernel)(t);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
s.device_util.isBrowser()&&Object(s.registerBackend)("webgl",()=>new du,2);s.version_core,Cs.b;
/** @license See the LICENSE file. */}]]);