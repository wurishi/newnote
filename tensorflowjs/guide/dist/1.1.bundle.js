!function(e){function n(n){for(var t,c,a=n[0],i=n[1],s=n[2],u=0,f=[];u<a.length;u++)c=a[u],Object.prototype.hasOwnProperty.call(r,c)&&r[c]&&f.push(r[c][0]),r[c]=0;for(t in i)Object.prototype.hasOwnProperty.call(i,t)&&(e[t]=i[t]);for(p&&p(n);f.length;)f.shift()();return l.push.apply(l,s||[]),o()}function o(){for(var e,n=0;n<l.length;n++){for(var o=l[n],t=!0,a=1;a<o.length;a++){var i=o[a];0!==r[i]&&(t=!1)}t&&(l.splice(n--,1),e=c(c.s=o[0]))}return e}var t={},r={1:0},l=[];function c(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,c),o.l=!0,o.exports}c.m=e,c.c=t,c.d=function(e,n,o){c.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},c.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,n){if(1&n&&(e=c(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(c.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var t in e)c.d(o,t,function(n){return e[n]}.bind(null,t));return o},c.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return c.d(n,"a",n),n},c.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},c.p="";var a=window.webpackJsonp=window.webpackJsonp||[],i=a.push.bind(a);a.push=n,a=a.slice();for(var s=0;s<a.length;s++)n(a[s]);var p=i;l.push([57,0]),o()}({23:function(e,n){},24:function(e,n){},25:function(e,n){},26:function(e,n){},27:function(e,n){},57:function(e,n,o){"use strict";o.r(n);var t=o(11);!function(){const e=t.i([[1,2],[3,4]]);console.log("shape:",e.shape);const n=t.i([1,2,3,4],[2,2]);console.log("shape:",n.shape),console.log("dtype:",n.dtype),n.print()}(),console.log("------ example1 end ------"),function(){const e=t.i([[1,2],[3,4]],[2,2],"int32");console.log("shape",e.shape),console.log("dtype",e.dtype),e.print()}(),console.log("------ example2 end ------"),function(){const e=t.i([[1,2],[3,4]]);console.log("a shape:",e.shape),e.print();const n=e.reshape([4,1]);console.log("b shape:",n.shape),n.print()}(),console.log("------ 修改张量的形状 end ------"),function(){const e=t.i([[1,2],[3,4]]);e.array().then(e=>console.log(e,"await array")),e.data().then(e=>console.log(e,"await data")),console.log(e.arraySync()),console.log(e.dataSync())}(),console.log("------ 获取张量的值 end ------")}});