!function(e){function n(n){for(var t,l,c=n[0],s=n[1],p=n[2],i=0,f=[];i<c.length;i++)l=c[i],Object.prototype.hasOwnProperty.call(r,l)&&r[l]&&f.push(r[l][0]),r[l]=0;for(t in s)Object.prototype.hasOwnProperty.call(s,t)&&(e[t]=s[t]);for(u&&u(n);f.length;)f.shift()();return a.push.apply(a,p||[]),o()}function o(){for(var e,n=0;n<a.length;n++){for(var o=a[n],t=!0,c=1;c<o.length;c++){var s=o[c];0!==r[s]&&(t=!1)}t&&(a.splice(n--,1),e=l(l.s=o[0]))}return e}var t={},r={0:0},a=[];function l(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,l),o.l=!0,o.exports}l.m=e,l.c=t,l.d=function(e,n,o){l.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,n){if(1&n&&(e=l(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(l.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var t in e)l.d(o,t,function(n){return e[n]}.bind(null,t));return o},l.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(n,"a",n),n},l.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},l.p="";var c=window.webpackJsonp=window.webpackJsonp||[],s=c.push.bind(c);c.push=n,c=c.slice();for(var p=0;p<c.length;p++)n(c[p]);var u=s;a.push([52,1]),o()}({52:function(e,n,o){"use strict";o.r(n);var t=o(26);!function(){const e=t.a([[1,2],[3,4]]);console.log("shape:",e.shape);const n=t.a([1,2,3,4],[2,2]);console.log("shape:",n.shape),console.log("dtype:",n.dtype),n.print()}(),console.log("------ example1 end ------"),function(){const e=t.a([[1,2],[3,4]],[2,2],"int32");console.log("shape",e.shape),console.log("dtype",e.dtype),e.print()}(),console.log("------ example2 end ------"),function(){const e=t.a([[1,2],[3,4]]);console.log("a shape:",e.shape),e.print();const n=e.reshape([4,1]);console.log("b shape:",n.shape),n.print()}(),console.log("------ 修改张量的形状 end ------"),function(){const e=t.a([[1,2],[3,4]]);e.array().then(e=>console.log(e,"await array")),e.data().then(e=>console.log(e,"await data")),console.log(e.arraySync()),console.log(e.dataSync())}(),console.log("------ 获取张量的值 end ------")},55:function(e,n){},56:function(e,n){},67:function(e,n){},70:function(e,n){},71:function(e,n){}});